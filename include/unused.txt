unused refman entry: cArray:cArray(char*,int,int,cHead*)
unused refman entry: cBag:bool remove(int)
unused refman entry: cBag:cBag(char*,int,int,int,cHead*)
unused refman entry: cDensityEstBase:double basepoint(unsigned)
unused refman entry: cDensityEstBase:double cellPDF(unsigned)
unused refman entry: cDensityEstBase:unsigned cell(unsigned)
unused refman entry: cDensityEstBase:unsigned cells()
unused refman entry: cDoubleHistogram:cDoubleHistogram&operator=(cDoubleHistogram&)
unused refman entry: cDoubleHistogram:cDoubleHistogram(char*,unsigned int)
unused refman entry: cDoubleHistogram:char*inspectorFactoryName()
unused refman entry: cDoubleHistogram:double basepoint(unsigned)
unused refman entry: cDoubleHistogram:double cellPDF(unsigned)
unused refman entry: cDoubleHistogram:unsigned cell(unsigned)
unused refman entry: cDoubleHistogram:unsigned cells()
unused refman entry: cDoubleHistogram:void clearResult()
unused refman entry: cDoubleHistogram:void info(char*)
unused refman entry: cDoubleHistogram:void transform()
unused refman entry: cDoubleHistogram:void writeContents(ostream&)
unused refman entry: cEnvir:cEnvir&operator*(cEnvir&,signed char*)
unused refman entry: cEnvir:cEnvir&operator*(cEnvir&,unsigned char*)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,cPar&)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,double)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,float)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,int)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,long double)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,long)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,short)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,signed char)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,signed char*)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,unsigned char)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,unsigned char*)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,unsigned int)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,unsigned long)
unused refman entry: cEnvir:cEnvir&operator<<(cEnvir&,unsigned short)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,cPar&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,char&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,double&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,float&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,int&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,long double&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,long&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,short&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,signed char*)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,unsigned char&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,unsigned char*)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,unsigned int&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,unsigned long&)
unused refman entry: cEnvir:cEnvir&operator>>(cEnvir&,unsigned short&)
unused refman entry: cEnvir:cEnvir&prompt(char*)
unused refman entry: cEnvir:void inspect(cObject*)
unused refman entry: cEnvir:void messageSent(cMessage&)
unused refman entry: cEnvir:~cEnvir()
unused refman entry: cHead:cHead(char*,cHead*,bool)
unused refman entry: cIterator:cIterator(cHead&)
unused refman entry: cIterator:cObject&operator++()
unused refman entry: cIterator:void init(cHead&)
unused refman entry: cLinkedList:void configPointer(VoidDelFunc,VoidDupFunc,size_t)
unused refman entry: cLongHistogram:cLongHistogram&operator=(cLongHistogram&)
unused refman entry: cLongHistogram:cLongHistogram(char*,unsigned)
unused refman entry: cLongHistogram:char*inspectorFactoryName()
unused refman entry: cLongHistogram:double basepoint(unsigned)
unused refman entry: cLongHistogram:double cellPDF(unsigned)
unused refman entry: cLongHistogram:unsigned cell(unsigned)
unused refman entry: cLongHistogram:unsigned cells()
unused refman entry: cLongHistogram:void clearResult()
unused refman entry: cLongHistogram:void info(char*)
unused refman entry: cLongHistogram:void transform()
unused refman entry: cMessage:cMessage(char*,int,int,int,bool)
unused refman entry: cMessage:int hasPar(char*)
unused refman entry: cMessage:void setError(bool)
unused refman entry: cModule:cGate&gate(char*,int)
unused refman entry: cModule:cGate&gate(int)
unused refman entry: cModule:char*fullPath(int)
unused refman entry: cModule:void info(char*)
unused refman entry: cObject:bool ishe_there(cObject*)
unused refman entry: cObject:char*fullPath(int)
unused refman entry: cObject:int netPack(char*)
unused refman entry: cOutFileMgr:FILE*getHandle()
unused refman entry: cPar:bool boolBalue()
unused refman entry: cPar:cPar&setStringValue(char,char*)
unused refman entry: cQueue:int CompareFunc(cObject&,cObject&)
unused refman entry: cQueueIterator:cObject&operator++()
unused refman entry: cQueueIterator:cObject&operator--()
unused refman entry: cSimpleModule:cHead locals
unused refman entry: cSimpleModule:cHead members
unused refman entry: cSimpleModule:cQueue putAsideQueue
unused refman entry: cSimpleModule:int scheduleAt(simtime_t,cMessage&)
unused refman entry: cStdDev:char*inspectorFactoryName()
unused refman entry: cWatch:WATCH()
unused refman entry: cWatch:int samples
unused refman entry: cWatch:new cWatch(<samples<,)
unused refman entry: cWeightedStdDev:char*inspectorFactoryName()
unused refman entry: cWeightedStdDev:double random()
unused refman entry: cWeightedStdDev:long weigths()
unused refman entry: cWeightedStdDev:void info(char*)
unused refman entry: cWeightedStdDev:void writeContents(ostream&)
unused refman entry: functions:ASSERT()
unused refman entry: functions:Max(,)
unused refman entry: functions:Min(,)
unused refman entry: functions:bool equal(double,double,double)
unused refman entry: functions:bool lowmemory()
unused refman entry: functions:bool opp_strmatch(char*,char*)
unused refman entry: functions:cFunctionType*findFunction(char*)
unused refman entry: functions:cLinkType*findLink(char*)
unused refman entry: functions:cModuleType*findModuleType(char*)
unused refman entry: functions:cNetworkType*findNetwork(char*)
unused refman entry: functions:char*correct(char*)
unused refman entry: functions:char*indexedname(char*,char*,int)
unused refman entry: functions:char*opp_concat(char*,char*,char*,char*)
unused refman entry: functions:char*opp_strcpy(char*,char*)
unused refman entry: functions:char*opp_strdup(char*)
unused refman entry: functions:char*simtimeToStr(simtime_t,char*)
unused refman entry: functions:double dblrand()
unused refman entry: functions:double exponential(double)
unused refman entry: functions:double intuniform(double,double)
unused refman entry: functions:double normal(double,double)
unused refman entry: functions:double truncnormal(double,double)
unused refman entry: functions:double uniform(double,double)
unused refman entry: functions:int opp_strcmp(char*,char*)
unused refman entry: functions:long intrand()
unused refman entry: functions:long intrand(long)
unused refman entry: functions:long randseed(long)
unused refman entry: functions:simtime_t strToSimtime(char*)
unused refman entry: functions:simtime_t strToSimtime0(char*&)
unused refman entry: functions:void opp_randomize()
unused refman entry: macros:Define_Function(,)
unused refman entry: macros:Define_Link(,,,)
unused refman entry: macros:Define_Module()
unused refman entry: macros:Define_Module_Like(,)
unused refman entry: macros:Module_Class_Members(,,)
unused refman entry: macros:Network(,)
unused refman entry: macros:Register_Class()
unused refman entry: macros:cObject*createOne(char*)
unused refman entry: opp_string:class opp_string
unused refman entry: opp_string:~opp_string()
unused refman entry: typedefs:typedef bool(*)(cObject*,)
unused refman entry: typedefs:typedef double(*)()
unused refman entry: typedefs:typedef double(*)(,)
unused refman entry: typedefs:typedef double(*)(,,)
unused refman entry: typedefs:typedef double(*)(...)
unused refman entry: typedefs:typedef int(*)(cObject*,cObject*)
unused refman entry: typedefs:typedef void(*)(void*)
unused refman entry: typedefs:typedef void*(*)(void*)
unused refman entry: types:MAXTIME
unused refman entry: types:NO()
unused refman entry: types:NOOBJ
unused refman entry: types:PI
unused refman entry: types:simtime_t
