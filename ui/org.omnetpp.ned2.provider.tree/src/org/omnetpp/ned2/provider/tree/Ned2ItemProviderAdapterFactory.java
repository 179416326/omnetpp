/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.omnetpp.ned2.provider.tree;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.omnetpp.ned2.model.util.Ned2AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Ned2ItemProviderAdapterFactory extends Ned2AdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final String copyright = "";

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ned2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Channel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelItemProvider channelItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Channel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChannelAdapter() {
		if (channelItemProvider == null) {
			channelItemProvider = new ChannelItemProvider(this);
		}

		return channelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.ChannelInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelInterfaceItemProvider channelInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.ChannelInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChannelInterfaceAdapter() {
		if (channelInterfaceItemProvider == null) {
			channelInterfaceItemProvider = new ChannelInterfaceItemProvider(
					this);
		}

		return channelInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.CompoundModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompoundModuleItemProvider compoundModuleItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.CompoundModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCompoundModuleAdapter() {
		if (compoundModuleItemProvider == null) {
			compoundModuleItemProvider = new CompoundModuleItemProvider(this);
		}

		return compoundModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.ConnectionGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionGroupItemProvider connectionGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.ConnectionGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConnectionGroupAdapter() {
		if (connectionGroupItemProvider == null) {
			connectionGroupItemProvider = new ConnectionGroupItemProvider(this);
		}

		return connectionGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Connections} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionsItemProvider connectionsItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Connections}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConnectionsAdapter() {
		if (connectionsItemProvider == null) {
			connectionsItemProvider = new ConnectionsItemProvider(this);
		}

		return connectionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Const} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstItemProvider constItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Const}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConstAdapter() {
		if (constItemProvider == null) {
			constItemProvider = new ConstItemProvider(this);
		}

		return constItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Extends} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendsItemProvider extendsItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Extends}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createExtendsAdapter() {
		if (extendsItemProvider == null) {
			extendsItemProvider = new ExtendsItemProvider(this);
		}

		return extendsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Files} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilesItemProvider filesItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Files}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFilesAdapter() {
		if (filesItemProvider == null) {
			filesItemProvider = new FilesItemProvider(this);
		}

		return filesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Gate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GateItemProvider gateItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Gate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGateAdapter() {
		if (gateItemProvider == null) {
			gateItemProvider = new GateItemProvider(this);
		}

		return gateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.GateGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GateGroupItemProvider gateGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.GateGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGateGroupAdapter() {
		if (gateGroupItemProvider == null) {
			gateGroupItemProvider = new GateGroupItemProvider(this);
		}

		return gateGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Gates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatesItemProvider gatesItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Gates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGatesAdapter() {
		if (gatesItemProvider == null) {
			gatesItemProvider = new GatesItemProvider(this);
		}

		return gatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.InterfaceName} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceNameItemProvider interfaceNameItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.InterfaceName}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInterfaceNameAdapter() {
		if (interfaceNameItemProvider == null) {
			interfaceNameItemProvider = new InterfaceNameItemProvider(this);
		}

		return interfaceNameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.KeyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValueItemProvider keyValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.KeyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createKeyValueAdapter() {
		if (keyValueItemProvider == null) {
			keyValueItemProvider = new KeyValueItemProvider(this);
		}

		return keyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Loop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopItemProvider loopItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Loop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLoopAdapter() {
		if (loopItemProvider == null) {
			loopItemProvider = new LoopItemProvider(this);
		}

		return loopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.ModuleInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleInterfaceItemProvider moduleInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.ModuleInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createModuleInterfaceAdapter() {
		if (moduleInterfaceItemProvider == null) {
			moduleInterfaceItemProvider = new ModuleInterfaceItemProvider(this);
		}

		return moduleInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.NedFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NedFileItemProvider nedFileItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.NedFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNedFileAdapter() {
		if (nedFileItemProvider == null) {
			nedFileItemProvider = new NedFileItemProvider(this);
		}

		return nedFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Operator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperatorItemProvider operatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Operator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOperatorAdapter() {
		if (operatorItemProvider == null) {
			operatorItemProvider = new OperatorItemProvider(this);
		}

		return operatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Param} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamItemProvider paramItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Param}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createParamAdapter() {
		if (paramItemProvider == null) {
			paramItemProvider = new ParamItemProvider(this);
		}

		return paramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Parameters} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParametersItemProvider parametersItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Parameters}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createParametersAdapter() {
		if (parametersItemProvider == null) {
			parametersItemProvider = new ParametersItemProvider(this);
		}

		return parametersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.ParamGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamGroupItemProvider paramGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.ParamGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createParamGroupAdapter() {
		if (paramGroupItemProvider == null) {
			paramGroupItemProvider = new ParamGroupItemProvider(this);
		}

		return paramGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Propertydef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertydefItemProvider propertydefItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Propertydef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPropertydefAdapter() {
		if (propertydefItemProvider == null) {
			propertydefItemProvider = new PropertydefItemProvider(this);
		}

		return propertydefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Ref} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefItemProvider refItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Ref}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRefAdapter() {
		if (refItemProvider == null) {
			refItemProvider = new RefItemProvider(this);
		}

		return refItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.SimpleModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleModuleItemProvider simpleModuleItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.SimpleModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSimpleModuleAdapter() {
		if (simpleModuleItemProvider == null) {
			simpleModuleItemProvider = new SimpleModuleItemProvider(this);
		}

		return simpleModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Submodule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmoduleItemProvider submoduleItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Submodule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSubmoduleAdapter() {
		if (submoduleItemProvider == null) {
			submoduleItemProvider = new SubmoduleItemProvider(this);
		}

		return submoduleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Submodules} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmodulesItemProvider submodulesItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Submodules}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSubmodulesAdapter() {
		if (submodulesItemProvider == null) {
			submodulesItemProvider = new SubmodulesItemProvider(this);
		}

		return submodulesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Types} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypesItemProvider typesItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Types}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTypesAdapter() {
		if (typesItemProvider == null) {
			typesItemProvider = new TypesItemProvider(this);
		}

		return typesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omnetpp.ned2.model.Whitespace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhitespaceItemProvider whitespaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.omnetpp.ned2.model.Whitespace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhitespaceAdapter() {
		if (whitespaceItemProvider == null) {
			whitespaceItemProvider = new WhitespaceItemProvider(this);
		}

		return whitespaceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory
				.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(
			ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class)
					|| (((Class) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (channelItemProvider != null)
			channelItemProvider.dispose();
		if (channelInterfaceItemProvider != null)
			channelInterfaceItemProvider.dispose();
		if (compoundModuleItemProvider != null)
			compoundModuleItemProvider.dispose();
		if (conditionItemProvider != null)
			conditionItemProvider.dispose();
		if (connectionItemProvider != null)
			connectionItemProvider.dispose();
		if (connectionGroupItemProvider != null)
			connectionGroupItemProvider.dispose();
		if (connectionsItemProvider != null)
			connectionsItemProvider.dispose();
		if (constItemProvider != null)
			constItemProvider.dispose();
		if (expressionItemProvider != null)
			expressionItemProvider.dispose();
		if (extendsItemProvider != null)
			extendsItemProvider.dispose();
		if (filesItemProvider != null)
			filesItemProvider.dispose();
		if (functionItemProvider != null)
			functionItemProvider.dispose();
		if (gateItemProvider != null)
			gateItemProvider.dispose();
		if (gateGroupItemProvider != null)
			gateGroupItemProvider.dispose();
		if (gatesItemProvider != null)
			gatesItemProvider.dispose();
		if (importItemProvider != null)
			importItemProvider.dispose();
		if (interfaceNameItemProvider != null)
			interfaceNameItemProvider.dispose();
		if (keyValueItemProvider != null)
			keyValueItemProvider.dispose();
		if (loopItemProvider != null)
			loopItemProvider.dispose();
		if (moduleInterfaceItemProvider != null)
			moduleInterfaceItemProvider.dispose();
		if (nedFileItemProvider != null)
			nedFileItemProvider.dispose();
		if (operatorItemProvider != null)
			operatorItemProvider.dispose();
		if (paramItemProvider != null)
			paramItemProvider.dispose();
		if (parametersItemProvider != null)
			parametersItemProvider.dispose();
		if (paramGroupItemProvider != null)
			paramGroupItemProvider.dispose();
		if (propertyItemProvider != null)
			propertyItemProvider.dispose();
		if (propertydefItemProvider != null)
			propertydefItemProvider.dispose();
		if (refItemProvider != null)
			refItemProvider.dispose();
		if (simpleModuleItemProvider != null)
			simpleModuleItemProvider.dispose();
		if (submoduleItemProvider != null)
			submoduleItemProvider.dispose();
		if (submodulesItemProvider != null)
			submodulesItemProvider.dispose();
		if (typesItemProvider != null)
			typesItemProvider.dispose();
		if (whitespaceItemProvider != null)
			whitespaceItemProvider.dispose();
	}

}
