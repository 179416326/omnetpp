BUG: close all elog files, open the Animation View and click Play --> NPE
TODO: throws NPE on older eventlog files; it should check the version number in the file and tell the user if the file is not supported

NOTES

- ket event kozotti simulation time ugy feleltetheto meg az animation time-nak, hogy arra a
  simulation time intervallumra adott egy simulation time intervallum lista, amelynek egyes
  elemei megfelelnek egy-egy animation time intervallumnak. a listaban megadott intervallumok
  folytonosan kovetik egymast es csak a simulation time intervallumok lehetnek zerus meretuek.
  maskent fogalmazva egy linearis interpolacios lista van az animation time es a simulation time
  kozott, amit az event-ek egymas utani reszekre osztanak.

- egy animation primitivhez tartozik egy animation time intervallum, de ez az intervallum idoben
  visszafele szabadon mozgathato mindaddig, amig a hozza tartozo simulation time intervallum nem
  valtozik es amig ez ok-okozati osszefuggest nem sert az animation primitivek kozott. igy a teljes
  animacio hossza valos idoben csokkentheto, ami noveli az animacio megertesenek hatekonysagat.

- lehet tobb event is ugyanabban a simulation time-ban es akkor a hozzajuk tartozo animation
  primitive-ek szinten ugyanakkor kezdodnek es vegzodnek simulation time-ban.

TODO

- lazy loading of animation primitives (this is hard) to avoid too long startup times for big
  eventlog files
  
- incremental loading of animation primitives, during playback this requires being able to load
  primitives forward and backward based on the animation time only. this seems to be pretty tricky,
  because the animation primitives are collected based on events (event numbers) but the mapping
  between animation times and event numbers relies on the topological sort of animation positions

- infinite extent animation primitives can be cut down as soon as it turns out that they are
  not infinite. e.g. the set module display string animation is infinite extent until the next
  set module display string becomes known at which point the previous one can be cut down in terms
  of animation time

- ha egy message tobb connection-on megy keresztul, akkor most egyszerre animalja,
  mert a koordinata transzformacio nem veszi figyelembe a sendhop-ok szamat,
  de ezt nem igy kene, hanem az egyes hopokat szepen sorban egymas utan kene, mert akar
  kulonbozo delay-uk is lehet, sot ha ez menne, akkor valoszinuleg a method callok-at is
  lehetne ertelmesen animalni. ehhez a C++-ban kell a coordinata transzformaciot atalakitani,
  ugy hogy az egyes entry-k beleszolhassanak az animation time <-> simulation time mappingbe
  ez kb. azt jelenti, hogy egy event animation time-ban szethuzhato tehat van kiterjedese
  fuggetlenul attol, hogy a megelozo/kovetkezo event ugyanabban a simulation time-ban van-e
  vagy sem. az egyik legbonyolultabb eset egy olyan message send, ami tobb hopon megy keresztul
  igy: 0/dt/0/dt/0 ez azt jelenti, hogy a ket delay kozotti hop-hoz is kene tudni veges animation
  time szeletet rendelni, annak ellener, hogy ott sem event nincs, sem pedig a simulation time nem
  telik (de elotte/utana igen). altalaban veve azonban nem biztos, hogy a 0 delay-u datarate
  nelkuli connection-okon a bogyok animalasa olyan jo otlet lenne.

- az animation-ben nyitva levo modulok ugy viselkednek, mintha filtereznek az eventlog-ot,
  ez azert kell, hogy a mas modulokban torteno event-ek ne lassitsak le a steppelest
  igy a sequence chart, eventlog table es animation tok hasonlo modon kezelhetne az idot es
  tok jol egyutt tudnanak mukodni, leptetes, selection, stb. tekinteteben
  oops, kicsit bonyasabb ennel a dolog, mert pl. lehet egy message send ami tobb hopon at halad
  es bizonyos hopok a parent modulban vagy annak a parentjaban van es azokat akkor is animalni
  kell, ha a kuldo/fogado modulok ki vannak filterezve 

- animation kozben a submodulok pozicioi nem a szimulacio futasanak megfelelok,
  hanem a layout ujra van szamolva, pl az aloha peldaban ez azt eredmenyezi, hogy egyes message
  korok gyorsabban nonek mint masok, mintha az uzenet gyorsabban haladna az eterben

- ha megall az animacio egy eventnel, akkor az event feldolgozasa kozben letrejovo valtozasok,
  message send, schedule, method call, bubble, stb. megjelenjenek az animacioban vagy sem? 
  figyelem: az utolso event moge mar nem lehet tekerni az animaciot, mert az eventlog nem
  tartja nyilvan a FES-t es igy nem tudja, hogy mi a kovetkezo event simulacios ideje
  andras velemenye szerint ha az event counter #10-et mutat, akkor a 10-es eventben tortono
  dolgokat meg nem szabad animalni. ez azonban azt jelenti, hogy 1 eventel mindig le lenne maradva
  az animacio a file-hoz kepest, mert az utolso event tartalmat nem jelenitene meg!

- configuration dialog for eventlog entry -> animation primitive mapping/filtering
  pl, hogy melyik entry-hez milyen animation primitive kell, ha kell egyatalan: pl: schedule at
  vagy hogy milyen parameterezessel kell a primitivet letrehozni, pl: a send broadcast fade out
  percentage-e

- extract reusable eventlog model into C++ (modules, gates, connections, messages)
  ezt a sequence chart es az animation is tudna hasznalni, sot ha mar itt tartunk, akkor akar
  lehetne valami module hierarchy view is az eventlog alapjan

- add event log selection for animation time, single and range too

- extend eventlog API to allow recording additional data (e.g. route in a network in XML or JSON)
  allow configuring custom animation primitives for custom eventlog entries by name and argument
  allow setting an extra eventlog entry argument that is available for filtering and/or mapping to
  animation primitives e.g. setEventLogEntryArgument()

- link animation primitives to compound modules so that when closing/opening compound modules
  we will not have to recompute all animation primitives but only the animation times and durations

+ file size limit warning dialog to prevent unresponsiveness when opening a too big file

- meg kene oldani, h az animation primitivek tudjanak egymassal beszelgetni, pl: ha ket vagy tobb timer van
  egy modulon, akkor is csak egy icon legyen (esetleg nemileg decoralva) amin a tooltip az osszes timer infojat felhozza  

+ osszekotni az eventlogot/sequence chartot az animationnel view/editorral selectionon keresztul (a viewerek kovetik az editorokat, ha nem pinnedek)
- egy overlay a jobb felso sarokba a current animation positionnel
+ a step forward es a step backward ne event based legyen, hanem visible animation based
- compound moduloknak lehetne sajat next/previous visible eventje
+ selection kene az animationben (compound module, submodule, connection, decoration)
- a selection az eventlogot szurhetne, simple modulra vagy compound modulra rekurzivan
- egy timeline component, ahol a multbeli es jovobeli esemenyek latszanak hasonloan a Tkenv-es guihoz
- module/connection tooltip, message tooltip, better timer tooltip
+ properties view a kulonfele selectalhato elemeknek
- egyeb viewerek/inspectorok modulokra, connectionokre, gatekre, messagekre, stb.
+ legyen bold az elso par szamjegy a simulation time-ban ami jeloli, h hol valtozik (speedometer)
