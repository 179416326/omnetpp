/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.omnetpp.scave.engine;

public class ResultFileManager {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ResultFileManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ResultFileManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      ScaveEngineJNI.delete_ResultFileManager(swigCPtr);
    }
    swigCPtr = 0;
  }

  public ResultFileManager() {
    this(ScaveEngineJNI.new_ResultFileManager(), true);
  }

  public FileList getFiles() {
    return new FileList(ScaveEngineJNI.ResultFileManager_getFiles(swigCPtr), false);
  }

  public RunList getRunsInFile(File file) {
    return new RunList(ScaveEngineJNI.ResultFileManager_getRunsInFile(swigCPtr, File.getCPtr(file)), false);
  }

  public IDList getDataInFile(File file) {
    return new IDList(ScaveEngineJNI.ResultFileManager_getDataInFile(swigCPtr, File.getCPtr(file)), true);
  }

  public IDList getDataInRun(Run run) {
    return new IDList(ScaveEngineJNI.ResultFileManager_getDataInRun(swigCPtr, Run.getCPtr(run)), true);
  }

  public ResultItem getItem(long id) {
    return new ResultItem(ScaveEngineJNI.ResultFileManager_getItem(swigCPtr, id), false);
  }

  public boolean isVector(long id) {
    return ScaveEngineJNI.ResultFileManager_isVector(swigCPtr, id);
  }

  public boolean isScalar(long id) {
    return ScaveEngineJNI.ResultFileManager_isScalar(swigCPtr, id);
  }

  public FileList getUniqueFiles(IDList ids) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getUniqueFiles(swigCPtr, IDList.getCPtr(ids));
    return (cPtr == 0) ? null : new FileList(cPtr, false);
  }

  public RunList getUniqueRuns(IDList ids) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getUniqueRuns(swigCPtr, IDList.getCPtr(ids));
    return (cPtr == 0) ? null : new RunList(cPtr, false);
  }

  public StringSet getUniqueModuleNames(IDList ids) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getUniqueModuleNames(swigCPtr, IDList.getCPtr(ids));
    return (cPtr == 0) ? null : new StringSet(cPtr, false);
  }

  public StringSet getUniqueNames(IDList ids) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getUniqueNames(swigCPtr, IDList.getCPtr(ids));
    return (cPtr == 0) ? null : new StringSet(cPtr, false);
  }

  public IDList getAllScalars() {
    return new IDList(ScaveEngineJNI.ResultFileManager_getAllScalars(swigCPtr), true);
  }

  public ScalarResult getScalar(long id) {
    return new ScalarResult(ScaveEngineJNI.ResultFileManager_getScalar(swigCPtr, id), false);
  }

  public IDList getAllVectors() {
    return new IDList(ScaveEngineJNI.ResultFileManager_getAllVectors(swigCPtr), true);
  }

  public VectorResult getVector(long id) {
    return new VectorResult(ScaveEngineJNI.ResultFileManager_getVector(swigCPtr, id), false);
  }

  public ResultItem uncheckedGetItem(long id) {
    return new ResultItem(ScaveEngineJNI.ResultFileManager_uncheckedGetItem(swigCPtr, id), false);
  }

  public ScalarResult uncheckedGetScalar(long id) {
    return new ScalarResult(ScaveEngineJNI.ResultFileManager_uncheckedGetScalar(swigCPtr, id), false);
  }

  public VectorResult uncheckedGetVector(long id) {
    return new VectorResult(ScaveEngineJNI.ResultFileManager_uncheckedGetVector(swigCPtr, id), false);
  }

  public IDList getFilteredList(IDList idlist, String fileAndRunFilter, String moduleFilter, String nameFilter) {
    return new IDList(ScaveEngineJNI.ResultFileManager_getFilteredList(swigCPtr, IDList.getCPtr(idlist), fileAndRunFilter, moduleFilter, nameFilter), true);
  }

  public File loadScalarFile(String filename) {
    long cPtr = ScaveEngineJNI.ResultFileManager_loadScalarFile(swigCPtr, filename);
    return (cPtr == 0) ? null : new File(cPtr, false);
  }

  public File loadVectorFile(String filename) {
    long cPtr = ScaveEngineJNI.ResultFileManager_loadVectorFile(swigCPtr, filename);
    return (cPtr == 0) ? null : new File(cPtr, false);
  }

  public void unloadFile(File file) {
    ScaveEngineJNI.ResultFileManager_unloadFile(swigCPtr, File.getCPtr(file));
  }

  public boolean isFileLoaded(String filename) {
    return ScaveEngineJNI.ResultFileManager_isFileLoaded(swigCPtr, filename);
  }

  public File getFile(String filename) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getFile(swigCPtr, filename);
    return (cPtr == 0) ? null : new File(cPtr, false);
  }

  public Run getRunByName(File file, String runName) {
    long cPtr = ScaveEngineJNI.ResultFileManager_getRunByName(swigCPtr, File.getCPtr(file), runName);
    return (cPtr == 0) ? null : new Run(cPtr, false);
  }

  public long getItemByName(Run run, String module, String name) {
    return ScaveEngineJNI.ResultFileManager_getItemByName(swigCPtr, Run.getCPtr(run), module, name);
  }

  public File addScalarFile() {
    long cPtr = ScaveEngineJNI.ResultFileManager_addScalarFile(swigCPtr);
    return (cPtr == 0) ? null : new File(cPtr, false);
  }

  public File addVectorFile() {
    long cPtr = ScaveEngineJNI.ResultFileManager_addVectorFile(swigCPtr);
    return (cPtr == 0) ? null : new File(cPtr, false);
  }

  public Run addRun(File file) {
    long cPtr = ScaveEngineJNI.ResultFileManager_addRun(swigCPtr, File.getCPtr(file));
    return (cPtr == 0) ? null : new Run(cPtr, false);
  }

  public StringVector getRunNameFilterHints(IDList idlist) {
    return new StringVector(ScaveEngineJNI.ResultFileManager_getRunNameFilterHints(swigCPtr, IDList.getCPtr(idlist)), true);
  }

  public StringVector getModuleFilterHints(IDList idlist) {
    return new StringVector(ScaveEngineJNI.ResultFileManager_getModuleFilterHints(swigCPtr, IDList.getCPtr(idlist)), true);
  }

  public StringVector getNameFilterHints(IDList idlist) {
    return new StringVector(ScaveEngineJNI.ResultFileManager_getNameFilterHints(swigCPtr, IDList.getCPtr(idlist)), true);
  }

}
