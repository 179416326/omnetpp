/**
 * Base state machine class for model: $model.Name
 */
class ${modelTool.BaseMachineClassName}
	{
	public:
		/* Constructor of base state machine */
		${modelTool.BaseMachineClassName}($modelTool.ClassName& aModel): iModel(aModel) {}
				
        virtual void HandleL($modelTool.ClassName::EEvent aEvent, $contextClass& aContext) = 0;

	protected:
		$modelTool.ClassName& iModel;
		
		virtual const TDesC& MachineName() const = 0;
		
		/**
		 * Logging methods
		 */
		void DoLogL(TDesC& message);
		void LogBeginL(const TDesC& aStateName, CAutoAnswererModelEngine::EEvent aEvent);
		void LogTransiteL(const TDesC& aOldStateName, const TDesC& aNewStateName);
		void LogEndL(const TDesC& aStateName, CAutoAnswererModelEngine::EEvent aEvent);
		void LogActionBeginL(const TDesC& anIdentifier);
		void LogActionEndL(const TDesC& anIdentifier);
		void LogActionEndL(const TDesC& anIdentifier, TInt aValue);
	};
