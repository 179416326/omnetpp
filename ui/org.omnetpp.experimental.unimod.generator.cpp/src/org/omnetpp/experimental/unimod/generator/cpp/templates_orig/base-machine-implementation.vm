void ${modelTool.BaseMachineClassName}::DoLogL(TDesC& message)
	{
	TBuf8<128> message8;
	message8.Copy(message);
	iModel.Log()->WriteL(message8);
	iModel.Log()->CommitL();
	}

void ${modelTool.BaseMachineClassName}::LogBeginL(const TDesC& aStateName, CAutoAnswererModelEngine::EEvent aEvent)
	{
	_LIT(KFormat, "%S:[%S] on %S\n");
	TBuf<128> message;
	message.Format(KFormat, &MachineName(), &aStateName, &iModel.EventName(aEvent));
	DoLogL(message);
	}
	
void ${modelTool.BaseMachineClassName}::LogTransiteL(const TDesC& aOldStateName, const TDesC& aNewStateName)
	{
	_LIT(KFormat, "  %S:[%S] => [%S]\n");
	TBuf<128> message;
	message.Format(KFormat, &MachineName(), &aOldStateName, &aNewStateName);
	DoLogL(message);
	}
	
void ${modelTool.BaseMachineClassName}::LogEndL(const TDesC& aStateName, CAutoAnswererModelEngine::EEvent /*aEvent*/)
	{
	_LIT(KFormat, "%S:[%S]\n\n");
	TBuf<128> message;
	message.Format(KFormat, &MachineName(), &aStateName);
	DoLogL(message);
	}
	
void ${modelTool.BaseMachineClassName}::LogActionBeginL(const TDesC& anIdentifier)
	{
	_LIT(KFormat, "  %S {\n");
	TBuf<128> message;
	message.Format(KFormat, &anIdentifier);
	DoLogL(message);
	}
	
void ${modelTool.BaseMachineClassName}::LogActionEndL(const TDesC& anIdentifier)
	{
	_LIT(KFormat, "  %S }\n");
	TBuf<128> message;
	message.Format(KFormat, &anIdentifier);
	DoLogL(message);
	}
	
void ${modelTool.BaseMachineClassName}::LogActionEndL(const TDesC& anIdentifier, TInt aValue)
	{
	_LIT(KFormat, "  %S = %d }\n");
	TBuf<128> message;
	message.Format(KFormat, &anIdentifier, aValue);
	DoLogL(message);
	}
