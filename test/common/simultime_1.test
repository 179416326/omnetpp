%description:
Tests the SimulTime class

%global:

#include "simultime.h"

static void parseAndPrint(const char *text, const int scale)
{
    ev << "'" << text << "'";
    ev << " (scale: " << scale << ")";
    ev << " ==> ";
    try {
	SimulTime::setScaleExp(scale);
        SimulTime t = SimulTime::parse(text);
        ev << t << "\n";
    } catch (std::exception& e) {
        ev << "ERROR: " << e.what() << "\n";
    }
}

%activity:

#define P(x,s) parseAndPrint(x, s)

ev << "\n";

// positive cases
P("123456789012345678",0);
P("123456789012345.678",-3);
P("123456789012.345678",-6);
P("123456789.012345678",-9);
P("123456.789012345678",-12);
P("123.456789012345678",-15);
P("0.123456789012345678",-18);

P("+123456789012345678",0);
P("-123456789012345678",0);
P(" 123456789012345678",0);

// negative cases
P("12345678901234567890",0); // overflow
P("",0);
P("  ",0);

ev << ".\n";


%contains: stdout
'+123456789012345678' (scale: 0) ==> 123456789012345678
'-123456789012345678' (scale: 0) ==> -123456789012345678
' 123456789012345678' (scale: 0) ==> 123456789012345678
'12345678901234567890' (scale: 0) ==> ERROR: SimulTime::parse("12345678901234567890"): arithmetic overflow
'' (scale: 0) ==> ERROR: SimulTime::parse(""): missing digits
'  ' (scale: 0) ==> ERROR: SimulTime::parse("  "): missing digits
.
