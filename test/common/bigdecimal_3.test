%description:
Tests the BigDecimal comparison operators

%global:

#include <iostream>
#include "bigdecimal.h"

static void compare(const char *x, const char *y)
{
    ev.precision(16);
    ev << x << "," << y;
    ev << ": ";
    try {
        BigDecimal xx = BigDecimal::parse(x);
        BigDecimal yy = BigDecimal::parse(y);
        if (xx < yy) ev << "< ";
        if (xx <= yy) ev << "<= ";
        if (xx == yy) ev << "== ";
        if (xx >= yy) ev << ">= ";
        if (xx > yy) ev << "> ";
        ev << "\n";
    } catch (std::exception& e) {
        ev << "ERROR: " << e.what() << "\n";
    }
}

%activity:

#define T(x,y) compare(#x, #y);

ev << "\n";


// <
T(0,0.000000000000000001);
T(-0.000000000000000001,0);
T(-123456789012345678,0);
T(0,123456789012345678);
T(0.123456789012345678, 0.123456789012345679);
T(0.99999999999999999, 1);
T(0.99999999999999999, 123456789012345678);
T(-1, -0.999999999999999999);
T(0.123456789012345679,0.12345678912345678);

// ==
T(0,0);
T(123456789012345678,123456789012345678)
T(-123456789012345678,-123456789012345678)
T(0.000000000000000001, 0.000000000000000001)

// >
T(0.000000000000000001,0);
T(0,-0.000000000000000001);
T(0,-123456789012345678);
T(123456789012345678,0);
T(0.123456789012345679,0.123456789012345678);
T(1,0.99999999999999999);
T(123456789012345678,0.99999999999999999);
T(-0.999999999999999999,-1);

ev << ".\n";

%contains: stdout
0,0.000000000000000001: < <= 
-0.000000000000000001,0: < <= 
-123456789012345678,0: < <= 
0,123456789012345678: < <= 
0.123456789012345678,0.123456789012345679: < <= 
0.99999999999999999,1: < <= 
0.99999999999999999,123456789012345678: < <= 
-1,-0.999999999999999999: < <= 
0.123456789012345679,0.12345678912345678: < <= 
0,0: <= == >= 
123456789012345678,123456789012345678: <= == >= 
-123456789012345678,-123456789012345678: <= == >= 
0.000000000000000001,0.000000000000000001: <= == >= 
0.000000000000000001,0: >= > 
0,-0.000000000000000001: >= > 
0,-123456789012345678: >= > 
123456789012345678,0: >= > 
0.123456789012345679,0.123456789012345678: >= > 
1,0.99999999999999999: >= > 
123456789012345678,0.99999999999999999: >= > 
-0.999999999999999999,-1: >= > 
.
