%description:
Test channel delay and error rate in NED.

%file: {}.ned

channel {MyConn}
    delay 0.004;
    error 0.1;
endchannel

simple {Node1}
    gates:
        in: in;
        out: out;
endsimple

simple {Node2}
    gates:
        in: in;
        out: out;
endsimple

module {MyNet}
    submodules:
        node1: {Node1};
        node2: {Node2};
    connections:
        node1.out --> {MyConn} --> node2.in;
        node1.in  <-- {MyConn} <-- node2.out;
endmodule

network
     {myNet}: {MyNet};
endnetwork

%file: {}.cc

#include <omnetpp.h>

class {Node1} : public cSimpleModule
{
    Module_Class_Members({Node1},cSimpleModule,16384)
    virtual void activity();
};

Define_Module({Node1});

void {Node1}::activity()
{
    for (int i=0; i<1000; i++)
    {
        cMessage *msg = new cMessage();
        msg->setLength(1);
        send(msg, "out");
        wait(exponential(1.0));
    }
}

#include <omnetpp.h>

class {Node2} : public cSimpleModule
{
    int total;
    int errors;

    Module_Class_Members({Node2},cSimpleModule,16384)
    virtual void activity();
    virtual void finish();
};

Define_Module({Node2});

void {Node2}::activity()
{
    total = errors = 0;
    for(;;)
    {
        cMessage *msg = receive();
        total++;

        if (msg->hasBitError())
            errors++;

        double delay = simTime() - msg->sendingTime();
        if (delay!=0.004)
            ev << "wrong delay: " << delay << endl;
        delete msg;
    }
}

void {Node2}::finish()
{
    double errorrate = errors/total;
    if (fabs(errorrate-0.1) > 0.02)
        ev << "wrong error rate: " << errorrate << endl;
}

%inifile: {}.ini
[General]
network={myNet}
express-mode=no
event-banners=no

%not-contains: stdout
wrong delay

%not-contains: stdout
wrong error rate

