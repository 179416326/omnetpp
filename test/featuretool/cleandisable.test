%description:
Testing opp_featuretool with a clean project: only .oppfeatures and .nedfolders exist.
Disable feature with its dependencies.

%prerun-command: ../../lib/createSrcFolders
%prerun-command: cp ../../data/.oppfeatures .
%prerun-command: cp ../../data/.nedfolders .
%prerun-command: rm -f .oppfeaturestate
%prerun-command: rm -f .nedexclusions

%testprog: opp_featuretool -v disable --with-dependencies F_A

%postrun-command: ../../lib/fileExistingCheck

%contains: postrun-command(1).out
'.oppfeatures' found.
'.oppfeaturestate' found.
'.nedfolders' found.
'.nedexclusions' found.

%contains: stdout
Disabling feature(s):  F_A
Also disabling the following dependent features:  F_E
opp_featuretool: '.oppfeaturestate' updated
opp_featuretool: '.nedexclusions' updated

%contains: test.err
opp_featuretool: Warning: NED package 'feature_b_folder' is part of the disabled feature 'F_B', but it is not excluded in '.nedexclusions', fixing
opp_featuretool: Warning: NED package 'feature_c_folder' is part of the disabled feature 'F_C', but it is not excluded in '.nedexclusions', fixing
opp_featuretool: Warning: NED package 'feature_d_folder' is part of the disabled feature 'F_D', but it is not excluded in '.nedexclusions', fixing

%contains: .oppfeaturestate
<?xml version="1.0" ?>
<featurestates>
    <feature enabled="false" id="F_A"/>
    <feature enabled="false" id="F_B"/>
    <feature enabled="false" id="F_C"/>
    <feature enabled="false" id="F_D"/>
    <feature enabled="false" id="F_E"/>
</featurestates>

%contains: .nedexclusions
feature_a_folder

%contains: .nedexclusions
feature_b_folder

%contains: .nedexclusions
feature_c_folder

%contains: .nedexclusions
feature_d_folder

%contains: .nedexclusions
feature_e_folder
