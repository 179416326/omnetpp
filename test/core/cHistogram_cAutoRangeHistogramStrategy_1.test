%description:
Test auto range histogram strategy.

%global:

static void dumpBins(cHistogram& hist)
{
    for (int i = 0; i <= hist.getNumBins(); ++i)
        EV << hist.getBinEdge(i) << " ";

    EV << std::endl;
}

static void collectAndDump(cRNG* rng, cHistogram& hist)
{
    for (int i=0; i<200; i++)
        hist.collect(uniform(rng, 0, 1));
    dumpBins(hist);
}

%activity:

cHistogram hist1("fixed", new cAutoRangeHistogramStrategy(-1.5, 1.5, 10, cHistogram::MODE_REALS));
cHistogram hist2("auto1", new cAutoRangeHistogramStrategy(NAN, 150, 10, cHistogram::MODE_REALS));
cHistogram hist3("auto2", new cAutoRangeHistogramStrategy(-1.5, NAN, 10, cHistogram::MODE_REALS));

cHistogram hist4("fixed_i", new cAutoRangeHistogramStrategy(-2, 2, 2, cHistogram::MODE_INTEGERS));
cHistogram hist5("auto1_i", new cAutoRangeHistogramStrategy(NAN, 200, 10, cHistogram::MODE_INTEGERS));
cHistogram hist6("auto2_i", new cAutoRangeHistogramStrategy(-2, NAN, 10, cHistogram::MODE_INTEGERS));

collectAndDump(getRNG(0), hist1);
collectAndDump(getRNG(0), hist2);
collectAndDump(getRNG(0), hist3);

collectAndDump(getRNG(0), hist4);
collectAndDump(getRNG(0), hist5);
collectAndDump(getRNG(0), hist6);


%contains: stdout
-1.4 -1.2 -1 -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0.8 1 1.2 1.4
-60 -40 -20 0 20 40 60 80 100 120 140
-1.5 -1 -0.5 0 0.5 1 1.5 2
-2 0 2
-100 -80 -60 -40 -20 0 20 40 60 80 100 120 140 160 180 200
-2 -1 0 1 2 3 4 5 6 7 8
