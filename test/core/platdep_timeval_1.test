%description:
Test functions in include/platdep/timeval.h

%global:
#include <platdep/time.h>
#define  SEC    1000000
#define  USEC   1e-6

#define PRINT(x)  ev << #x << "= " << (x).tv_sec << "s " << (x).tv_usec << "us\n";

timeval tval(long sec, long usec) {
    timeval t;
    t.tv_sec = sec;
    t.tv_usec = usec;
    return t;
}

%activity:
timeval a = tval(123, 456);
PRINT(a);
ev << "\n";

PRINT(timeval_add(a, 0));
PRINT(timeval_add(a, 3*USEC));
PRINT(timeval_add(a, 1));
PRINT(timeval_add(a, 1-3*USEC));
PRINT(timeval_add(a, 1-500*USEC));
ev << "\n";

PRINT(timeval_add(a, tval(0,0)));
PRINT(timeval_add(a, tval(0,3)));
PRINT(timeval_add(a, tval(1,0)));
PRINT(timeval_add(a, tval(0,SEC-3)));
PRINT(timeval_add(a, tval(0,SEC-500)));
ev << "\n";

PRINT(timeval_substract(a, 0));
PRINT(timeval_substract(a, 3*USEC));
PRINT(timeval_substract(a, 1));
PRINT(timeval_substract(a, 500*USEC));
PRINT(timeval_substract(a, 1+500*USEC));
ev << "\n";

PRINT(timeval_substract(a, tval(0,0)));
PRINT(timeval_substract(a, tval(0,3)));
PRINT(timeval_substract(a, tval(1,0)));
PRINT(timeval_substract(a, tval(0,500)));
PRINT(timeval_substract(a, tval(1,500)));
ev << "\n";

/*
inline unsigned long timeval_msec(const timeval& a)

// User must take care that result doesn't overflow!
inline long timeval_diff_usec(const timeval& t2, const timeval& t1)
*/

%contains: stdout
cObject


