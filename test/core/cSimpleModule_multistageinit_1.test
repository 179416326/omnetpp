%description:
Basic test for multi-stage initialization.

Tests that:
- a compound module has its initialize() function called before all its submodules have.
- initialize(0) is called for all modules, then initialize(1), initialize(2), etc.

%file: {}/test.ned

package {};

simple Module
{
}

module A
{
    submodules:
        a1: Module;
        a2: Module;
}

network Test
{
    submodules:
        b1: A;
        b2: Module;
        b3: A;
}

%file: {}/test.cc

#include <omnetpp.h>

class Module : public cSimpleModule
{
  public:
    virtual void initialize(int stage);
    virtual int numInitStages() const; // NOTE THE const MODIFIER!!!

    virtual void handleMessage(cMessage *msg);
};

Define_Module(Module);

int Module::numInitStages() const
{
    return 3;
}

void Module::initialize(int stage)
{
    ev << "   " << fullPath() << ": initialize stage=" << stage << " called" << endl;
    if (stage==2)
    {
        cMessage *msg = new cMessage();
        scheduleAt(1.0, msg);
    }
}

void Module::handleMessage(cMessage *msg)
{
   ev << "handleMessage() at " << simTime() << endl;
   delete msg;
}

%contains: stdout
Initializing network, stage 0
Initializing network.b1, stage 0
Initializing network.b1.a1, stage 0
   network.b1.a1: initialize stage=0 called
Initializing network.b1.a2, stage 0
   network.b1.a2: initialize stage=0 called
Initializing network.b2, stage 0
   network.b2: initialize stage=0 called
Initializing network.b3, stage 0
Initializing network.b3.a1, stage 0
   network.b3.a1: initialize stage=0 called
Initializing network.b3.a2, stage 0
   network.b3.a2: initialize stage=0 called
Initializing network, stage 1
Initializing network.b1, stage 1
Initializing network.b1.a1, stage 1
   network.b1.a1: initialize stage=1 called
Initializing network.b1.a2, stage 1
   network.b1.a2: initialize stage=1 called
Initializing network.b2, stage 1
   network.b2: initialize stage=1 called
Initializing network.b3, stage 1
Initializing network.b3.a1, stage 1
   network.b3.a1: initialize stage=1 called
Initializing network.b3.a2, stage 1
   network.b3.a2: initialize stage=1 called
Initializing network, stage 2
Initializing network.b1, stage 2
Initializing network.b1.a1, stage 2
   network.b1.a1: initialize stage=2 called
Initializing network.b1.a2, stage 2
   network.b1.a2: initialize stage=2 called
Initializing network.b2, stage 2
   network.b2: initialize stage=2 called
Initializing network.b3, stage 2
Initializing network.b3.a1, stage 2
   network.b3.a1: initialize stage=2 called
Initializing network.b3.a2, stage 2
   network.b3.a2: initialize stage=2 called

%not-contains: stdout
stage=3

%contains: stdout
handleMessage() at 1

