%description:
Test literals in NED.

%file: {}.ned

simple {Simple}
   parameters:
      s: string,
      b1:bool, b2:bool, b3:bool, b4:bool, b5:bool,
      n1:numeric, n2:numeric, n3:numeric, n4:numeric, n5:numeric,
      nc1:numeric const, nc2:numeric const, nc3:numeric const, nc4:numeric const, nc5:numeric const;
endsimple

network {network}: {Simple}
   parameters:
      s = "hello",

      b1 = true,
      b2 = false,
      b3 = 5,
      b4 = 3.1415,
      b5 = 6.01e23,

      n1 = true,
      n2 = false,
      n3 = 5,
      n4 = 3.1415,
      n5 = 6.01e23,

      nc1 = true,
      nc2 = false,
      nc3 = 5,
      nc4 = 3.1415,
      nc5 = 6.01e23;

endnetwork

%file: {}.cc

#include <omnetpp.h>

class {Simple} : public cSimpleModule
{
    Module_Class_Members({Simple},cSimpleModule,16384)
    virtual void activity();
};

Define_Module({Simple});

void {Simple}::activity()
{
    for (int i=0; i<params(); i++)
        ev << par(i).name() << ":" << par(i).type() << "=" << par(i).getAsText() << endl;
}

%contains-regex: stdout
p00=-3
p01=-5
p02=0
p03=1
p04=1
p05=0
p06=[0-9eE+.]+
p20=1
p47=2
