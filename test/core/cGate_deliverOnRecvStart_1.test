%description:
Basic test for cGate::deliverOnReceptionStart().


%activity:
//
// Add two gates and a channel with datarate between them
//
addGate("out", cGate::OUTPUT);
addGate("in", cGate::INPUT);

cDatarateChannel *channel = cChannelType::createDatarateChannel("channel");
channel->setDatarate(1000);  // 1Kbps
channel->setDelay(0.1);  // 100ms
gate("out")->connectTo(gate("in"), channel);

//
// Experiment 1: sending with deliverOnStart set
//
gate("in")->setDeliverOnReceptionStart(true);

{
    cMessage *msg = new cMessage();
    msg->setBitLength(1500);  // so duration=1.5s

    send(msg, "out");
    ev << "after sending, t=" << simTime() << ": output gate busy=" << gate("out")->isBusy()
       << " txFinishTime=" << gate("out")->getTransmissionFinishTime() << "\n";

    cMessage *msg2 = receive();
    ev << "after receive, t=" << simTime() << ": msg: duration=" << msg2->getDuration()
       << " isRecStart=" << msg2->isReceptionStart() << "\n";
    ev << "  output gate: busy=" << gate("out")->isBusy()
       << " txFinishTime=" << gate("out")->getTransmissionFinishTime() << "\n";
}

wait(gate("out")->getTransmissionFinishTime() - simTime());

//
// Experiment 2: sending with deliverOnStart flag cleared
//
gate("in")->setDeliverOnReceptionStart(false);

// (block copied from above)
{
    cMessage *msg = new cMessage();
    msg->setBitLength(1500);  // so duration=1.5s

    send(msg, "out");
    ev << "after sending, t=" << simTime() << ": output gate busy=" << gate("out")->isBusy()
       << " txFinishTime=" << gate("out")->getTransmissionFinishTime() << "\n";

    cMessage *msg2 = receive();
    ev << "after receive, t=" << simTime() << ": msg: duration=" << msg2->getDuration()
       << " isRecStart=" << msg2->isReceptionStart() << "\n";
    ev << "  output gate: busy=" << gate("out")->isBusy()
       << " txFinishTime=" << gate("out")->getTransmissionFinishTime() << "\n";
}

ev << ".\n";

%contains-regex: stdout
after sending, t=0: output gate busy=1 txFinishTime=1.5
.*
after receive, t=0.1: msg: duration=1.5 isRecStart=1
  output gate: busy=1 txFinishTime=1.5
.*
after sending, t=1.5: output gate busy=1 txFinishTime=3
.*
after receive, t=3.1: msg: duration=1.5 isRecStart=0
  output gate: busy=0 txFinishTime=3
.
