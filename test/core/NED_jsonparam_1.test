%description:
Test JSON-style object parameters.

%file: test.ned

import testlib.Dump;

network Test {
  parameters:
    object nullptr1 = null;
    object nullptr2 = nullptr;
    object array1 = [];
    object array2 = [ 1, 1+1, 3.14157, true, false, nan, inf, null, nullptr, "Hello", 'World' ];
    object array3 = [[1,2,3], [4,5,6]];
    object array5 = [{foo:1,bar:2}, {FOO:10,BAR:20}];
    object object1 = {};
    object object2 = { f1: 100, f2: 200, f3: "hello", f4: "hello"+"!", f5: null, f6: nullptr };
    object object3 = { "f1": 100, 'f2': 200, "f3": "hello", 'f4': nullptr };
    object object4 = {arr1 : [1,2,3], arr2 : [4,5,6]};
    object object5 = {obj1 : {foo:1,bar:2}, obj2 : {FOO:10,BAR:20}};

  submodules:
    dump: Dump;
}

%contains: stdout
module Test: Test {
    parameters:
        @isNetwork
        nullptr1 = nullptr
        nullptr2 = nullptr
        array1 = (omnetpp::cValueArray)array: empty
        array2 = (omnetpp::cValueArray)array: size=11
        array3 = (omnetpp::cValueArray)array: size=2
        array5 = (omnetpp::cValueArray)array: size=2
        object1 = (omnetpp::cValueMap)object: empty
        object2 = (omnetpp::cValueMap)object: size=6
        object3 = (omnetpp::cValueMap)object: size=4
        object4 = (omnetpp::cValueMap)object: size=2
        object5 = (omnetpp::cValueMap)object: size=2
    submodules:
}

%not-contains: stdout
undisposed object
