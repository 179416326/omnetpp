%description:
Test gate inheritance for simple modules.

%file: test.ned

import testlib.Dump;

module Super
{
    gates:
        input in1 @kind(L);
        output out1;
        inout g1 @kind(K);
    connections allowunconnected:
}

module Sub extends Super
{
    gates:
        input in2;
        output out2;
        inout g2;
}

network Test
{
    submodules:
        sub: Sub;
        dump: Dump;
    connections:
        sub.out1 --> sub.in2;
        sub.g1 <--> sub.g2;
        sub.out2 --> sub.in1;
}

%contains: stdout
module Test: Test {
    parameters:
        @isNetwork
    submodules:
        module Test.sub: Sub {
            gates:
                 0 in1 @kind(L): <-- sub.out2
                 1 out1: --> sub.in2
                 2 g1$i @kind(K): <-- sub.g2$o
                 3 g1$o @kind(K): --> sub.g2$i
                 4 in2: <-- sub.out1
                 5 out2: --> sub.in1
                 6 g2$i: <-- sub.g1$o
                 7 g2$o: --> sub.g1$i
        }
}

