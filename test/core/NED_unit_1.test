%description:
Positive test cases for assignments with units in NED.

%file: test.ned

// unit cases: not provided, SI, non SI, unknown
simple Simple
{
    parameters:
        // TODO: swap declaration type and value type
        double p1 = 1;                       // not provided - not provided
        double p2 = 2 @unit(s);              // not provided - SI
        double p3 = 3 @unit(mW);             // not provided - non SI
        double p4 = 4 @unit(unknown);        // not provided - unknown

        double p5 = 5s @unit(s);             // SI           - SI
        double p6 = 6mi @unit(s);            // non SI       - SI

        double p7 = 7W @unit(mW);            // SI           - non SI
        double p8 = 8uW @unit(mW);           // non SI       - non SI

        double p9 = 9unknown @unit(unknown); // unknown      - unknown
}

network Test
{
    submodules:
        a: Simple;
}

%file: test.cc

#include <omnetpp.h>

namespace {} {

class Simple : public cSimpleModule
{
  public:
    Simple() : cSimpleModule(16384) { }
    virtual void activity();
};

Define_Module(Simple);

void Simple::activity()
{
    for (int i=0; i<params(); i++)
        ev << par(i).name() << "=" << par(i).doubleValue() << "\n";
}

}; //namespace

%contains: stdout
p1=1
p2=2
p3=3
p4=4
p5=5
p6=360
p7=7000
p8=8
p9=9
