%description:
check the distributions are properly accessible from NED

same as NED_distrib_1.test, only with plus rng parameter

FIXME: These tests are very fragile. They depend on the floating-point
arithmetic and the default printing of doubles being EXACTLY THE SAME
on all machines. They also break if anything changes in the underlying
RNGs.

%file: {}.ned

simple {Simple}
    parameters:
        uniform_par,
        exponential_par,
        normal_par,
        truncnormal_par,
        gamma_d_par,
        beta_par,
        erlang_k_par,
        chi_square_par,
        student_t_par,
        cauchy_par,
        triang_par,
        lognormal_par,
        weibull_par,
        pareto_shifted_par,

        intuniform_par,
        bernoulli_par,
        binomial_par,
        geometric_par,
        negbinomial_par,
        // hypergeometric_par,
        poisson_par;
endsimple

network {Net}: {Simple}
    parameters:
        uniform_par =         uniform(1.0, 2.0, 9),
        exponential_par =     exponential(1.0, 9),
        normal_par =          normal(1.0, 1.0, 9),
        truncnormal_par =     truncnormal(1.0, 1.0, 9),
        gamma_d_par =         gamma_d(2.0, 2.0, 9),
        beta_par =            beta(1.0, 1.0, 9),
        erlang_k_par =        erlang_k(1, 1.0, 9),
        chi_square_par =      chi_square(2, 9),
        student_t_par =       student_t(1, 9),
        cauchy_par =          cauchy(1.0, 2.0, 9),
        triang_par =          triang(1.0, 2.0, 3.0, 9),
        lognormal_par =       lognormal(1.0, 1.0, 9),
        weibull_par =         weibull(1.0, 2.0, 9),
        pareto_shifted_par =  pareto_shifted(1.0, 2.0, 3.0, 9),

        intuniform_par =      intuniform(0, 10, 9),
        bernoulli_par =       bernoulli(0.3, 9),
        binomial_par =        binomial(10, 0.3, 9),
        geometric_par =       geometric(0.3, 9),
        negbinomial_par =     negbinomial(10, 0.3, 9),
        // hypergeometric_par =  hypergeometric(1, 2, 2, 9),
        poisson_par =         poisson(1.0, 9);
endnetwork

%file: {}.cc

#include "omnetpp.h"

class {Simple} : public cSimpleModule
{
    Module_Class_Members({Simple},cSimpleModule,16384)
    virtual void activity();
};

Define_Module({Simple});

#define PAR_MEAN_AND_VARIANCE(PARNAME) \
 {\
   cPar& PARNAME = par(#PARNAME); cStdDev s; \
   for (int i=0; i<numrepl; i++) s.collect((double)PARNAME); \
   ev.printf("%s: m=%lg v=%lg\n", #PARNAME, s.mean(), s.variance()); \
 }

void {Simple}::activity()
{
    int numrepl=100000;

    PAR_MEAN_AND_VARIANCE(uniform_par);
    PAR_MEAN_AND_VARIANCE(exponential_par);
    PAR_MEAN_AND_VARIANCE(normal_par);
    PAR_MEAN_AND_VARIANCE(truncnormal_par);
    PAR_MEAN_AND_VARIANCE(gamma_d_par);
    PAR_MEAN_AND_VARIANCE(gamma_d_par);
    PAR_MEAN_AND_VARIANCE(beta_par);
    PAR_MEAN_AND_VARIANCE(erlang_k_par);
    PAR_MEAN_AND_VARIANCE(chi_square_par);
    PAR_MEAN_AND_VARIANCE(chi_square_par);
    PAR_MEAN_AND_VARIANCE(student_t_par);
    PAR_MEAN_AND_VARIANCE(cauchy_par);
    PAR_MEAN_AND_VARIANCE(triang_par);
    PAR_MEAN_AND_VARIANCE(lognormal_par);
    PAR_MEAN_AND_VARIANCE(weibull_par);
    PAR_MEAN_AND_VARIANCE(pareto_shifted_par);

    PAR_MEAN_AND_VARIANCE(intuniform_par);
    PAR_MEAN_AND_VARIANCE(bernoulli_par);
    PAR_MEAN_AND_VARIANCE(binomial_par);
    PAR_MEAN_AND_VARIANCE(geometric_par);
    PAR_MEAN_AND_VARIANCE(negbinomial_par);
    // PAR_MEAN_AND_VARIANCE(hypergeometric_par);
    PAR_MEAN_AND_VARIANCE(poisson_par);
}

%inifile: {}.ini
[General]
network={Net}

%contains: stdout
uniform_par: m=1.50017 v=0.0835428
exponential_par: m=1.00196 v=1.01239
normal_par: m=0.996203 v=1.00434
truncnormal_par: m=1.28628 v=0.632916
gamma_d_par: m=1.99879 v=1.99137
gamma_d_par: m=1.99828 v=2.003
beta_par: m=0.385715 v=0.0782531
erlang_k_par: m=1.00124 v=1.0042
chi_square_par: m=1.99952 v=3.99206
chi_square_par: m=1.9998 v=3.98056
student_t_par: m=-2.79248 v=365613
cauchy_par: m=-0.0403541 v=256010
triang_par: m=1.99947 v=0.167121
lognormal_par: m=4.4651 v=33.6086
weibull_par: m=0.886136 v=0.214523
pareto_shifted_par: m=22.4083 v=566988
intuniform_par: m=4.99716 v=9.96135
bernoulli_par: m=0.29893 v=0.209573
binomial_par: m=3.00239 v=2.09533
geometric_par: m=2.33521 v=7.75824
negbinomial_par: m=23.367 v=77.8433
poisson_par: m=0.9988 v=0.997249
