#
# OMNeT++/OMNEST Makefile for stress.exe
#
# This file was generated with the command:
#  opp_makemake --nmake -f
#


# Name of target to be created (-o option)
TARGET = stress.exe

# User interface (uncomment one) (-u option)
USERIF_LIBS = $(TKENV_LIBS) $(CMDENV_LIBS)
#USERIF_LIBS = $(CMDENV_LIBS)
#USERIF_LIBS = $(TKENV_LIBS)

# C++ include paths (with -I)
INCLUDE_PATH =

# Additional object and library files to link with
EXTRA_OBJS =

# Additional libraries (-L, -l options)
LIBS =

# Output directory
O = out/$(CONFIGNAME)/

# Object files for local .cc and .msg files
OBJS = \
    $O/stresscapsulate.obj \
    $O/stresschannel.obj \
    $O/stressdirect.obj \
    $O/stressduplicate.obj \
    $O/stressnode.obj \
    $O/stressqueue.obj \
    $O/stresssink.obj \
    $O/stresssource.obj \
    $O/stress_m.obj

# Message files
MSGFILES = stress.msg

# C++ files generated from msg files
MSG_CC_FILES = stress_m.cc
MSG_H_FILES = stress_m.h

# Other makefile variables (-K)


#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)
!if "$(OMNETPP_CONFIGFILE)"!=""
CONFIGFILE = $(OMNETPP_CONFIGFILE)
!elseif "$(OMNETPP_ROOT)"!=""
CONFIGFILE = $(OMNETPP_ROOT)/configuser.vc
!else
CONFIGFILE = C:\Workspace\Repository\trunk\omnetpp\\configuser.vc
!endif

!if !exist($(CONFIGFILE))
!error '$(CONFIGFILE)' does not exist -- specify "configuser.vc" in the OMNETPP_CONFIGFILE variable (as environment variable or command-line nmake argument), or edit or re-generate this makefile.
!endif

!include $(CONFIGFILE)



# Simulation kernel and user interface libraries
OMNETPP_LIB_SUBDIR = $(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)
OMNETPP_LIBS = /libpath:"$(OMNETPP_LIB_SUBDIR)" /libpath:"$(OMNETPP_LIB_DIR)" $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# <<<
#------------------------------------------------------------------------------

# Main target
all: $O/$(TARGET)

$O/$(TARGET): generateheaders $(OBJS)  $(EXTRA_OBJS) Makefile.vc
	-@md $(O:/=\) 2>nul
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(WHOLE_ARCHIVE_ON) $(LIBS) $(WHOLE_ARCHIVE_OFF) $(OMNETPP_LIBS) /out:$O/$(TARGET)
	echo @^%~dp0\$(O:/=\)\$(TARGET) ^%* > $(TARGET:.exe=.cmd)


.SUFFIXES: .cc

{.}.cc{$O}.obj:
	-@md $(O:/=\) 2>nul
	$(CXX) -c $(COPTS) /Fo"$@" -Tp $<

generateheaders: $(MSGFILES)
	$(MSGC:/=\) -s _m.cc $(MSGCOPTS) $(MSGFILES)

clean:
	-rmdir /s /q $(O:/=\) 2>nul

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -P^$O/ -- *.cc

	if not "$(SUBMAKE_DIRS)"=="" for %%i in ( $(SUBMAKE_DIRS:/=\) ) do @pushd %%i && echo [depend in %%i] && nmake /nologo /f Makefile.vc depend && @popd || exit /b 1

makefiles:
	opp_makemake --nmake -f
	if not "$(SUBMAKE_DIRS)"=="" for %%i in ( $(SUBMAKE_DIRS:/=\) ) do @pushd %%i && echo [makemake in %%i] && nmake /nologo /f Makefile.vc makefiles && @popd || exit /b 1

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/stress_m.obj: stress_m.cc \
  stress_m.h
$O/stresscapsulate.obj: stresscapsulate.cc \
  stresscapsulate.h \
  stress_m.h
$O/stresschannel.obj: stresschannel.cc \
  stresschannel.h \
  stress_m.h
$O/stressdirect.obj: stressdirect.cc \
  stressdirect.h \
  stress_m.h
$O/stressduplicate.obj: stressduplicate.cc \
  stressduplicate.h \
  stress_m.h
$O/stressnode.obj: stressnode.cc \
  stressnode.h \
  stress_m.h
$O/stressqueue.obj: stressqueue.cc \
  stressqueue.h \
  stress_m.h
$O/stresssink.obj: stresssink.cc \
  stresssink.h \
  stress_m.h
$O/stresssource.obj: stresssource.cc \
  stresssource.h \
  stress_m.h
