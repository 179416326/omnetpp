/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */


#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/***********************************************************************
 *
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 *
 ************************************************************************/

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
#  if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#    define SWIGTEMPLATEDISAMBIGUATOR template
#  else
#    define SWIGTEMPLATEDISAMBIGUATOR 
#  endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__) || defined(__ICC)
#   define SWIGUNUSED __attribute__ ((unused)) 
# else
#   define SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods for Windows DLLs */
#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   define SWIGEXPORT
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif



#if defined(__GNUC__)
    typedef long long __int64; /*For gcc on Windows */
#endif

/* fix for 'jlong' on x86_64 */
#if defined(__x86_64)
#ifdef _LP64 /* 64-bit Solaris */
#undef _LP64
#endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" } };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include <omnetpp.h>
#include "JSimpleModule.h"
#include "JMessage.h"

// for debugging:
#include <stdio.h>
#define LOG_JNI_CALL() (void)0
//#define LOG_JNI_CALL() {printf("DEBUG: entered JNI method %s, jarg1=%lx\n", __FUNCTION__, (long)jarg1);fflush(stdout);}
//jlong jarg1 = -1; // fallback for LOG_JNI_CALL() in JNI functions with no jarg1 arg


#include <string>


#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}
#define SWIG_exception(nullreturn, code, msg) { SWIG_JavaException(jenv, code, msg); return nullreturn; }


#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <vector>
#include <algorithm>
#include <stdexcept>


#if (OMNETPP_VERSION <= 0x0303)
# include <memory>
# define cClassDescriptor  cStructDescriptor
# define getDescriptor()   createDescriptor()
# define NEWARG(x)
# define NEWARG2(x)
# define AUTOPTR(x)        std::auto_ptr<cStructDescriptor> _x(x)
# define RETURN_FIELD_IS_ARRAY(fieldName) \
      int type = desc->getFieldType(fieldId); \
      return type==cStructDescriptor::FT_BASIC_ARRAY || \
             type==cStructDescriptor::FT_SPECIAL_ARRAY || \
             type==cStructDescriptor::FT_STRUCT_ARRAY
# define RETURN_FIELD_IS_COMPOUND(fieldName) \
      int type = desc->getFieldType(fieldId); \
      return type==cStructDescriptor::FT_STRUCT || \
             type==cStructDescriptor::FT_STRUCT_ARRAY
#else
# define NEWARG(x)         x,
# define NEWARG2(x)        x
# define AUTOPTR(x)        (void)0
# define RETURN_FIELD_IS_ARRAY(fieldName)    return desc->getFieldIsArray(self, fieldId)
# define RETURN_FIELD_IS_COMPOUND(fieldName) return desc->getFieldIsCompound(self, fieldId)
#endif

  static cClassDescriptor *findDescriptor(cPolymorphic *p)
  {
      cClassDescriptor *desc = p->getDescriptor();
      if (!desc)
          opp_error("no descriptor for class %s", p->className());
      return desc;
  }

  static int findField(cClassDescriptor *desc, void *object, const char *fieldName)
  {
      int n = desc->getFieldCount(NEWARG2(object));
      for (int i=0; i<n; i++)
          if (!strcmp(desc->getFieldName(NEWARG(object) i), fieldName))
              return i;
      return -1;
  }

  static int getFieldID(cClassDescriptor *desc, void *object, const char *fieldName)
  {
      int id = findField(desc, object, fieldName);
      if (id==-1)
          opp_error("no `%s' field in class %s", fieldName, desc->name());
      return id;
  }

static std::string std_map_Sl_std_string_Sc_std_string_Sg__get(std::map<std::string,std::string > *self,std::string key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
static void std_map_Sl_std_string_Sc_std_string_Sg__set(std::map<std::string,std::string > *self,std::string key,std::string x){
                (*self)[key] = x;
            }
static void std_map_Sl_std_string_Sc_std_string_Sg__del(std::map<std::string,std::string > *self,std::string key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
static bool std_map_Sl_std_string_Sc_std_string_Sg__has_key(std::map<std::string,std::string > *self,std::string key){
                std::map<std::string,std::string >::iterator i = self->find(key);
                return i != self->end();
            }
static cXMLElement *std_vector_Sl_cXMLElement_Sm__Sg__get(std::vector<cXMLElement * > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
 inline cEnvir *getEv() {return &ev;} 
 inline cSimulation *getSimulation() {return &simulation;} 
static bool cPolymorphic_hasField(cPolymorphic *self,char const *fieldName){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      return findField(desc, self, fieldName)!=-1;
  }
static std::string cPolymorphic_getField(cPolymorphic *self,char const *fieldName){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      char buf[200];
      desc->getFieldAsString(NEWARG(self) fieldId, 0, buf, 200);
      return buf;
  }
static std::string cPolymorphic_getArrayField(cPolymorphic *self,char const *fieldName,int index){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      char buf[200];
      desc->getFieldAsString(NEWARG(self) fieldId, index, buf, 200); //XXX check out of bounds!!!
      return buf;
  }
static void cPolymorphic_setField(cPolymorphic *self,char const *fieldName,char const *value){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      desc->setFieldAsString(NEWARG(self) fieldId, 0, value);
  }
static void cPolymorphic_setArrayField(cPolymorphic *self,char const *fieldName,int index,char const *value){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      desc->setFieldAsString(NEWARG(self) fieldId, index, value); //XXX check out of bounds!!!
  }
static bool cPolymorphic_isFieldArray(cPolymorphic *self,char const *fieldName){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      RETURN_FIELD_IS_ARRAY(fieldName);
  }
static bool cPolymorphic_isFieldCompound(cPolymorphic *self,char const *fieldName){
      cClassDescriptor *desc = findDescriptor(self);
      AUTOPTR(desc);
      int fieldId = getFieldID(desc, self, fieldName);
      RETURN_FIELD_IS_COMPOUND(fieldName);
  }
static cPolymorphic *cPolymorphic_cast(cPolymorphic *obj){return dynamic_cast<cPolymorphic *>(obj);}
static cObject *cObject_cast(cPolymorphic *obj){return dynamic_cast<cObject *>(obj);}
static cRuntimeError *cRuntimeError_cast(cException *obj){return dynamic_cast<cRuntimeError *>(obj);}
static cDefaultList *cDefaultList_cast(cPolymorphic *obj){return dynamic_cast<cDefaultList *>(obj);}
static cSimulation *cSimulation_cast(cPolymorphic *obj){return dynamic_cast<cSimulation *>(obj);}
static cModuleType *cModuleType_cast(cPolymorphic *obj){return dynamic_cast<cModuleType *>(obj);}
static cChannelType *cChannelType_cast(cPolymorphic *obj){return dynamic_cast<cChannelType *>(obj);}
static cNetworkType *cNetworkType_cast(cPolymorphic *obj){return dynamic_cast<cNetworkType *>(obj);}
static cArray *cArray_cast(cPolymorphic *obj){return dynamic_cast<cArray *>(obj);}
static cQueue *cQueue_cast(cPolymorphic *obj){return dynamic_cast<cQueue *>(obj);}
static cDoubleExpression *cDoubleExpression_cast(cExpression *obj){return dynamic_cast<cDoubleExpression *>(obj);}
static cPar *cPar_cast(cPolymorphic *obj){return dynamic_cast<cPar *>(obj);}
static cModulePar *cModulePar_cast(cPolymorphic *obj){return dynamic_cast<cModulePar *>(obj);}
static cGate *cGate_cast(cPolymorphic *obj){return dynamic_cast<cGate *>(obj);}
static cMessage *cMessage_cast(cPolymorphic *obj){return dynamic_cast<cMessage *>(obj);}
static cModule *cModule_cast(cPolymorphic *obj){return dynamic_cast<cModule *>(obj);}
static cCompoundModule *cCompoundModule_cast(cPolymorphic *obj){return dynamic_cast<cCompoundModule *>(obj);}
static cSimpleModule *cSimpleModule_cast(cPolymorphic *obj){return dynamic_cast<cSimpleModule *>(obj);}
static cStatistic *cStatistic_cast(cPolymorphic *obj){return dynamic_cast<cStatistic *>(obj);}
static cStdDev *cStdDev_cast(cPolymorphic *obj){return dynamic_cast<cStdDev *>(obj);}
static cWeightedStdDev *cWeightedStdDev_cast(cPolymorphic *obj){return dynamic_cast<cWeightedStdDev *>(obj);}
static cOutVector *cOutVector_cast(cPolymorphic *obj){return dynamic_cast<cOutVector *>(obj);}
static cChannel *cChannel_cast(cPolymorphic *obj){return dynamic_cast<cChannel *>(obj);}
static cBasicChannel *cBasicChannel_cast(cPolymorphic *obj){return dynamic_cast<cBasicChannel *>(obj);}

#ifdef __cplusplus
extern "C" {
#endif

jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1StringMap_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    std::map<std::string,std::string > *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (std::map<std::string,std::string > *)new std::map<std::string,std::string >();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(std::map<std::string,std::string > **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1StringMap_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    std::map<std::string,std::string > *arg1 = 0 ;
    std::map<std::string,std::string > *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1;
    if(!arg1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::map<std::string,std::string > const & reference is null");
        return 0;
    } 
    {
        try {
            result = (std::map<std::string,std::string > *)new std::map<std::string,std::string >((std::map<std::string,std::string > const &)*arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(std::map<std::string,std::string > **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1size(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    unsigned int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    {
        try {
            result = (unsigned int)((std::map<std::string,std::string > const *)arg1)->size();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jlong)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    {
        try {
            result = (bool)((std::map<std::string,std::string > const *)arg1)->empty();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    {
        try {
            (arg1)->clear();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    std::string arg2 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    if(!jarg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::string");
        return 0;
    } 
    const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
    if (!arg2_pstr) return 0;
    arg2 =  std::string(arg2_pstr);
    jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
    {
        try {
            result = std_map_Sl_std_string_Sc_std_string_Sg__get(arg1,arg2);
            
        } catch (std::out_of_range& e) {
            SWIG_exception(0, SWIG_IndexError,const_cast<char*>(e.what()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    std::string arg2 ;
    std::string arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    if(!jarg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::string");
        return ;
    } 
    const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
    if (!arg2_pstr) return ;
    arg2 =  std::string(arg2_pstr);
    jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
    if(!jarg3) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::string");
        return ;
    } 
    const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
    if (!arg3_pstr) return ;
    arg3 =  std::string(arg3_pstr);
    jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
    {
        try {
            std_map_Sl_std_string_Sc_std_string_Sg__set(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1del(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    std::string arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    if(!jarg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::string");
        return ;
    } 
    const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
    if (!arg2_pstr) return ;
    arg2 =  std::string(arg2_pstr);
    jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
    {
        try {
            std_map_Sl_std_string_Sc_std_string_Sg__del(arg1,arg2);
            
        } catch (std::out_of_range& e) {
            SWIG_exception(, SWIG_IndexError,const_cast<char*>(e.what()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_StringMap_1has_1key(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    std::string arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    if(!jarg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null std::string");
        return 0;
    } 
    const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
    if (!arg2_pstr) return 0;
    arg2 =  std::string(arg2_pstr);
    jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
    {
        try {
            result = (bool)std_map_Sl_std_string_Sc_std_string_Sg__has_key(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1StringMap(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    std::map<std::string,std::string > *arg1 = (std::map<std::string,std::string > *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::map<std::string,std::string > **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cXMLElementVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    std::vector<cXMLElement * > *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (std::vector<cXMLElement * > *)new std::vector<cXMLElement * >();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(std::vector<cXMLElement * > **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cXMLElementVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    unsigned int arg1 ;
    std::vector<cXMLElement * > *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    {
        try {
            result = (std::vector<cXMLElement * > *)new std::vector<cXMLElement * >(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(std::vector<cXMLElement * > **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElementVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    std::vector<cXMLElement * > *arg1 = (std::vector<cXMLElement * > *) 0 ;
    unsigned int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::vector<cXMLElement * > **)(void *)&jarg1; 
    {
        try {
            result = (unsigned int)((std::vector<cXMLElement * > const *)arg1)->size();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jlong)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElementVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    std::vector<cXMLElement * > *arg1 = (std::vector<cXMLElement * > *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::vector<cXMLElement * > **)(void *)&jarg1; 
    {
        try {
            result = (bool)((std::vector<cXMLElement * > const *)arg1)->empty();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElementVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    std::vector<cXMLElement * > *arg1 = (std::vector<cXMLElement * > *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::vector<cXMLElement * > **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    {
        try {
            (arg1)->push_back(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElementVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    std::vector<cXMLElement * > *arg1 = (std::vector<cXMLElement * > *) 0 ;
    int arg2 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::vector<cXMLElement * > **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cXMLElement *)std_vector_Sl_cXMLElement_Sm__Sg__get(arg1,arg2);
            
        } catch (std::out_of_range& e) {
            SWIG_exception(0, SWIG_IndexError,const_cast<char*>(e.what()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cXMLElementVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    std::vector<cXMLElement * > *arg1 = (std::vector<cXMLElement * > *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(std::vector<cXMLElement * > **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cEnvir_1isGUI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cEnvir *arg1 = (cEnvir *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cEnvir **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->isGUI();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cEnvir_1puts(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cEnvir *arg1 = (cEnvir *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cEnvir **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->puts((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cEnvir_1getUniqueNumber(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cEnvir *arg1 = (cEnvir *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cEnvir **)(void *)&jarg1; 
    {
        try {
            result = (long)(arg1)->getUniqueNumber();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cEnvir(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cEnvir *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cEnvir *)new cEnvir();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cEnvir **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cEnvir(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cEnvir *arg1 = (cEnvir *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cEnvir **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_getEv(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cEnvir *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cEnvir *)getEv();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cEnvir **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_getSimulation(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cSimulation *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cSimulation *)getSimulation();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimulation **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_get_1OMNETPP_1VERSION(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (int) 0x0303;
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cPolymorphic(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cPolymorphic *)new cPolymorphic();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cPolymorphic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getClassName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cPolymorphic const *)arg1)->className();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getFullName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cPolymorphic const *)arg1)->fullName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getFullPath(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = ((cPolymorphic const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = ((cPolymorphic const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getDetailedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = ((cPolymorphic const *)arg1)->detailedInfo();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cPolymorphic const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1hasField(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)cPolymorphic_hasField(arg1,(char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getField(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = cPolymorphic_getField(arg1,(char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1getArrayField(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = cPolymorphic_getArrayField(arg1,(char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1setField(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return ;
        }
    }
    {
        try {
            cPolymorphic_setField(arg1,(char const *)arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1setArrayField(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jstring jarg4) {
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *arg4 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = (int)jarg3; 
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return ;
        }
    }
    {
        try {
            cPolymorphic_setArrayField(arg1,(char const *)arg2,arg3,(char const *)arg4);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1isFieldArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)cPolymorphic_isFieldArray(arg1,(char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1isFieldCompound(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)cPolymorphic_isFieldCompound(arg1,(char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPolymorphic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)cPolymorphic_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cObject_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cObject *)new cObject();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cObject_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cObject *)new cObject((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cObject *arg1 = (cObject *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cObject const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1setName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1getName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cObject const *)arg1)->name();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1isName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cObject const *)arg1)->isName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1getFullName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cObject const *)arg1)->fullName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1getFullPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = ((cObject const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1getFullPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cObject const *)arg1)->fullPath(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1getOwner(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)((cObject const *)arg1)->owner();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1isSoftOwner(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->isSoftOwner();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1defaultOwner(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cDefaultList *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cDefaultList *)cObject::defaultOwner();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDefaultList **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cObject *arg1 = (cObject *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1findObject_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jboolean jarg3) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    bool arg3 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = jarg3 ? true : false; 
    {
        try {
            result = (cObject *)(arg1)->findObject((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1findObject_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cObject *)(arg1)->findObject((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cObject_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)cObject_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cVisitor(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cVisitor *arg1 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cVisitor **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cVisitor_1process(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cVisitor *arg1 = (cVisitor *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cVisitor **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (bool)(arg1)->process(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cVisitor_1processChildrenOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cVisitor *arg1 = (cVisitor *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cVisitor **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (bool)(arg1)->processChildrenOf(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cVisitor_1visit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cVisitor *arg1 = (cVisitor *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cVisitor **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            (arg1)->visit(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_intrand(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jint jresult = 0 ;
    long arg1 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (long)jarg1; 
    {
        try {
            result = (long)intrand(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_dblrand(JNIEnv *jenv, jclass jcls) {
    jdouble jresult = 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (double)dblrand();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_genk_1intrand(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
    jint jresult = 0 ;
    int arg1 ;
    long arg2 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            result = (long)genk_intrand(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_genk_1dblrand(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jdouble jresult = 0 ;
    int arg1 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    {
        try {
            result = (double)genk_dblrand(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_uniform_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)uniform(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_uniform_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)uniform(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_exponential_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    int arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (double)exponential(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_exponential_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
    jdouble jresult = 0 ;
    double arg1 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    {
        try {
            result = (double)exponential(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_normal_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)normal(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_normal_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)normal(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_truncnormal_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)truncnormal(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_truncnormal_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)truncnormal(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_gamma_1d_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)gamma_d(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_gamma_1d_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)gamma_d(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_beta_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)beta(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_beta_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)beta(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_erlang_1k_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)erlang_k(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_erlang_1k_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)erlang_k(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_chi_1square_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    int arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (double)chi_square(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_chi_1square_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    {
        try {
            result = (double)chi_square(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_student_1t_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    int arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (double)student_t(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_student_1t_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    unsigned int arg1 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    {
        try {
            result = (double)student_t(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cauchy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)cauchy(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cauchy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)cauchy(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_triang_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jint jarg4) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double arg3 ;
    int arg4 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    arg4 = (int)jarg4; 
    {
        try {
            result = (double)triang(arg1,arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_triang_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            result = (double)triang(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_lognormal_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)lognormal(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_lognormal_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)lognormal(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_weibull_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    int arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (double)weibull(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_weibull_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (double)weibull(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_pareto_1shifted_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jint jarg4) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double arg3 ;
    int arg4 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    arg4 = (int)jarg4; 
    {
        try {
            result = (double)pareto_shifted(arg1,arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_pareto_1shifted_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
    jdouble jresult = 0 ;
    double arg1 ;
    double arg2 ;
    double arg3 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            result = (double)pareto_shifted(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_intuniform_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
    jint jresult = 0 ;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)intuniform(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_intuniform_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
    jint jresult = 0 ;
    int arg1 ;
    int arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (int)intuniform(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_bernoulli_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
    jint jresult = 0 ;
    double arg1 ;
    int arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (int)bernoulli(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_bernoulli_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
    jint jresult = 0 ;
    double arg1 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    {
        try {
            result = (int)bernoulli(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_binomial_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2, jint jarg3) {
    jint jresult = 0 ;
    int arg1 ;
    double arg2 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)binomial(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_binomial_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
    jint jresult = 0 ;
    int arg1 ;
    double arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (int)binomial(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_geometric_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
    jint jresult = 0 ;
    double arg1 ;
    int arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (int)geometric(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_geometric_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
    jint jresult = 0 ;
    double arg1 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    {
        try {
            result = (int)geometric(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_negbinomial_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2, jint jarg3) {
    jint jresult = 0 ;
    int arg1 ;
    double arg2 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)negbinomial(arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_negbinomial_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
    jint jresult = 0 ;
    int arg1 ;
    double arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (int)negbinomial(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_poisson_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
    jint jresult = 0 ;
    double arg1 ;
    int arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (int)poisson(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_poisson_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
    jint jresult = 0 ;
    double arg1 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (double)jarg1; 
    {
        try {
            result = (int)poisson(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cException_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cException *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cException *)new cException();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cException **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cException_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    void *arg2 = 0 ;
    cException *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    {
        try {
            result = (cException *)new cException(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cException **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cException_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    void *arg2 = 0 ;
    cException *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cException *)new cException((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cException **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cException_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    int arg2 ;
    void *arg3 = 0 ;
    cException *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cException *)new cException((cObject const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cException **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cException_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    void *arg3 = 0 ;
    cException *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cException *)new cException((cObject const *)arg1,(char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cException **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cException *arg1 = (cException *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cException_1getErrorCode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (int)(arg1)->errorCode();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cException_1getMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (char *)(arg1)->message();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cException_1getModuleClassName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (char *)(arg1)->moduleClassName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cException_1getModuleFullPath(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (char *)(arg1)->moduleFullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cException_1getModuleID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (int)(arg1)->moduleID();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cRuntimeError_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    void *arg2 = 0 ;
    cRuntimeError *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (int)jarg1; 
    {
        try {
            result = (cRuntimeError *)new cRuntimeError(arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cRuntimeError **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cRuntimeError_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    void *arg2 = 0 ;
    cRuntimeError *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cRuntimeError *)new cRuntimeError((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cRuntimeError **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cRuntimeError_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    int arg2 ;
    void *arg3 = 0 ;
    cRuntimeError *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cRuntimeError *)new cRuntimeError((cObject const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cRuntimeError **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cRuntimeError_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cObject *arg1 = (cObject *) 0 ;
    char *arg2 = (char *) 0 ;
    void *arg3 = 0 ;
    cRuntimeError *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cObject **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cRuntimeError *)new cRuntimeError((cObject const *)arg1,(char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cRuntimeError **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cRuntimeError_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cException *arg1 = (cException *) 0 ;
    cRuntimeError *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cException **)(void *)&jarg1; 
    {
        try {
            result = (cRuntimeError *)cRuntimeError_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cRuntimeError **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cRuntimeError(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cRuntimeError *arg1 = (cRuntimeError *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cRuntimeError **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1takeAllObjectsFrom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    cDefaultList *arg2 = 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    arg2 = *(cDefaultList **)(void *)&jarg2;
    if(!arg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cDefaultList & reference is null");
        return ;
    } 
    {
        try {
            (arg1)->takeAllObjectsFrom(*arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cDefaultList_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cDefaultList *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cDefaultList *)new cDefaultList((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDefaultList **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cDefaultList_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cDefaultList *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cDefaultList *)new cDefaultList();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDefaultList **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cDefaultList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cDefaultList const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1isSoftOwner(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->isSoftOwner();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    {
        try {
            result = ((cDefaultList const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1defaultListItems(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    {
        try {
            result = (int)((cDefaultList const *)arg1)->defaultListItems();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1defaultListGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    int arg2 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cObject *)(arg1)->defaultListGet(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1defaultListContains(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cDefaultList *arg1 = (cDefaultList *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDefaultList **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (bool)((cDefaultList const *)arg1)->defaultListContains(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cDefaultList_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cDefaultList *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cDefaultList *)cDefaultList_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDefaultList **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cSimulation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cSimulation *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cSimulation *)new cSimulation((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimulation **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cSimulation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSimulation *arg1 = (cSimulation *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cSimulation const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cSimulation *arg1 = (cSimulation *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getFullPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = ((cSimulation const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getFullPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cSimulation const *)arg1)->fullPath(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getLastModuleId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (int)((cSimulation const *)arg1)->lastModuleId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getModuleByPath(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cModule *)((cSimulation const *)arg1)->moduleByPath((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getModuleByID(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    int arg2 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cModule *)((cSimulation const *)arg1)->module(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getSystemModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cSimulation const *)arg1)->systemModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getRunNumber(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (int)((cSimulation const *)arg1)->runNumber();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getSimTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cSimulation const *)arg1)->simTime();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getEventNumber(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (long)((cSimulation const *)arg1)->eventNumber();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getRunningModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (cSimpleModule *)((cSimulation const *)arg1)->runningModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getContextModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cSimulation const *)arg1)->contextModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getContextType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (int)((cSimulation const *)arg1)->contextType();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getContextSimpleModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (cSimpleModule *)((cSimulation const *)arg1)->contextSimpleModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1getUniqueNumber(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    unsigned long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    {
        try {
            result = (unsigned long)(arg1)->getUniqueNumber();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jlong)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1snapshot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jboolean jresult = 0 ;
    cSimulation *arg1 = (cSimulation *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimulation **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->snapshot(arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimulation_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cSimulation *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cSimulation *)cSimulation_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimulation **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cModuleType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModuleType *arg1 = (cModuleType *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModuleType *arg1 = (cModuleType *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cModuleType const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1create_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
    jlong jresult = 0 ;
    cModuleType *arg1 = (cModuleType *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *arg3 = (cModule *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = *(cModule **)(void *)&jarg3; 
    {
        try {
            result = (cModule *)(arg1)->create((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1create_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jint jarg5) {
    jlong jresult = 0 ;
    cModuleType *arg1 = (cModuleType *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *arg3 = (cModule *) 0 ;
    int arg4 ;
    int arg5 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = *(cModule **)(void *)&jarg3; 
    arg4 = (int)jarg4; 
    arg5 = (int)jarg5; 
    {
        try {
            result = (cModule *)(arg1)->create((char const *)arg2,arg3,arg4,arg5);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1buildInside(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cModuleType *arg1 = (cModuleType *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    {
        try {
            (arg1)->buildInside(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1createScheduleInit(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
    jlong jresult = 0 ;
    cModuleType *arg1 = (cModuleType *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *arg3 = (cModule *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModuleType **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = *(cModule **)(void *)&jarg3; 
    {
        try {
            result = (cModule *)(arg1)->createScheduleInit(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModuleType_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cModuleType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cModuleType *)cModuleType_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModuleType **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cChannelType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cChannelType *arg1 = (cChannelType *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannelType **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannelType_1create(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cChannelType *arg1 = (cChannelType *) 0 ;
    char *arg2 = (char *) 0 ;
    cChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannelType **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cChannel *)(arg1)->create((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannel **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannelType_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cChannelType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cChannelType *)cChannelType_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannelType **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cNetworkType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cNetworkType *arg1 = (cNetworkType *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cNetworkType **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cNetworkType_1setupNetwork(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cNetworkType *arg1 = (cNetworkType *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cNetworkType **)(void *)&jarg1; 
    {
        try {
            (arg1)->setupNetwork();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cNetworkType_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cNetworkType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cNetworkType *)cNetworkType_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cNetworkType **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_createOne(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cPolymorphic *)createOne((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_createOneIfClassIsKnown(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cPolymorphic *)createOneIfClassIsKnown((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cArray_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    int arg3 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (cArray *)new cArray((char const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cArray_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    {
        try {
            result = (cArray *)new cArray((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cArray_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cArray *)new cArray((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cArray_1_1SWIG_13(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cArray *)new cArray();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cArray *arg1 = (cArray *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cArray const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            result = ((cArray const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cArray *arg1 = (cArray *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1items(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            result = (int)((cArray const *)arg1)->items();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cArray *arg1 = (cArray *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            (arg1)->clear();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (int)(arg1)->add(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1addAt(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    int arg2 ;
    cObject *arg3 = (cObject *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = *(cObject **)(void *)&jarg3; 
    {
        try {
            result = (int)(arg1)->addAt(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (int)(arg1)->set(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1find_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (int)((cArray const *)arg1)->find(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1find_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cArray const *)arg1)->find((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1get_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    int arg2 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cObject *)(arg1)->get(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1get_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    char *arg2 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cObject *)(arg1)->get((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1exist_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jboolean jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    int arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (bool)((cArray const *)arg1)->exist(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1exist_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cArray const *)arg1)->exist((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    int arg2 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cObject *)(arg1)->remove(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    char *arg2 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cObject *)(arg1)->remove((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1remove_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (cObject *)(arg1)->remove(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1takeOwnership_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cArray *arg1 = (cArray *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->takeOwnership(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1takeOwnership_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cArray *arg1 = (cArray *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cArray **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cArray const *)arg1)->takeOwnership();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cArray *)cArray_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cQueue_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cQueue *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cQueue *)new cQueue((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cQueue **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cQueue_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cQueue *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cQueue *)new cQueue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cQueue **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cQueue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cQueue *arg1 = (cQueue *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cQueue const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = ((cQueue const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cQueue *arg1 = (cQueue *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1insert(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            (arg1)->insert(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1insertBefore(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *arg3 = (cObject *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    arg3 = *(cObject **)(void *)&jarg3; 
    {
        try {
            (arg1)->insertBefore(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1insertAfter(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *arg3 = (cObject *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    arg3 = *(cObject **)(void *)&jarg3; 
    {
        try {
            (arg1)->insertAfter(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (cObject *)(arg1)->remove(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1pop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)(arg1)->pop();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cQueue *arg1 = (cQueue *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            (arg1)->clear();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1head(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)((cQueue const *)arg1)->head();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1tail(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)((cQueue const *)arg1)->tail();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1getLength(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (int)((cQueue const *)arg1)->length();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cQueue const *)arg1)->empty();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (bool)((cQueue const *)arg1)->contains(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1takeOwnership_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cQueue *arg1 = (cQueue *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->takeOwnership(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1takeOwnership_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cQueue *arg1 = (cQueue *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cQueue **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cQueue const *)arg1)->takeOwnership();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cQueue_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cQueue *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cQueue *)cQueue_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cQueue **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_findNetwork(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cNetworkType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cNetworkType *)findNetwork((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cNetworkType **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_findModuleType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cModuleType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cModuleType *)findModuleType((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModuleType **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_findChannelType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cChannelType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cChannelType *)findChannelType((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannelType **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cExpression(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cExpression *arg1 = (cExpression *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cExpression **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cExpression_1getAsText(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cExpression *arg1 = (cExpression *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cExpression **)(void *)&jarg1; 
    {
        try {
            result = (arg1)->getAsText();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cExpression_1parseText(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cExpression *arg1 = (cExpression *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cExpression **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->parseText((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cExpression_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cExpression *arg1 = (cExpression *) 0 ;
    cExpression *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cExpression **)(void *)&jarg1; 
    {
        try {
            result = (cExpression *)(arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cExpression **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDoubleExpression_1getAsText(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cDoubleExpression *arg1 = (cDoubleExpression *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDoubleExpression **)(void *)&jarg1; 
    {
        try {
            result = (arg1)->getAsText();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDoubleExpression_1parseText(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cDoubleExpression *arg1 = (cDoubleExpression *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDoubleExpression **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->parseText((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cDoubleExpression_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cDoubleExpression *arg1 = (cDoubleExpression *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDoubleExpression **)(void *)&jarg1; 
    {
        try {
            result = (double)(arg1)->evaluate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cDoubleExpression_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cExpression *arg1 = (cExpression *) 0 ;
    cDoubleExpression *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cExpression **)(void *)&jarg1; 
    {
        try {
            result = (cDoubleExpression *)cDoubleExpression_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDoubleExpression **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cDoubleExpression(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cDoubleExpression *arg1 = (cDoubleExpression *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDoubleExpression **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cPar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cPar *)new cPar((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cPar_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cPar *)new cPar();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cPar_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cPar *arg2 = 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = *(cPar **)(void *)&jarg2;
    if(!arg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cPar & reference is null");
        return 0;
    } 
    {
        try {
            result = (cPar *)new cPar((char const *)arg1,*arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cPar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cPar *arg1 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cPar const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = ((cPar const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cPar *arg1 = (cPar *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setBoolValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setBoolValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setLongValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    long arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setLongValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setStringValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->setStringValue((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setDoubleValue_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    double arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setDoubleValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setDoubleValue_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cDoubleExpression *arg2 = (cDoubleExpression *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cDoubleExpression **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setDoubleValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setObjectValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setObjectValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setXMLValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setXMLValue(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1takeOwnership_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cPar *arg1 = (cPar *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->takeOwnership(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1takeOwnership_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cPar const *)arg1)->takeOwnership();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1boolValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->boolValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1longValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (long)(arg1)->longValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1stringValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (char *)(arg1)->stringValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1doubleValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (double)(arg1)->doubleValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1objectValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (cObject *)(arg1)->objectValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1xmlValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)(arg1)->xmlValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setRedirection(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->setRedirection(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1isRedirected(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cPar const *)arg1)->isRedirected();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1redirection(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (cPar *)(arg1)->redirection();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1cancelRedirection(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cPar *arg1 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            (arg1)->cancelRedirection();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jchar Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jchar jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (char)((cPar const *)arg1)->type();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jchar)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1isNumeric(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cPar const *)arg1)->isNumeric();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1isConstant(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cPar const *)arg1)->isConstant();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1getPrompt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (char *)(arg1)->prompt();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setPrompt(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cPar *arg1 = (cPar *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setPrompt((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setInput(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cPar *arg1 = (cPar *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->setInput(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1isInput(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cPar const *)arg1)->isInput();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1changed(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->changed();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1read(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->read();
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1convertToConst(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cPar *arg1 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            (arg1)->convertToConst();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1equalsTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            result = (bool)(arg1)->equalsTo(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1getAsText(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        try {
            result = ((cPar const *)arg1)->getAsText();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setFromText_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jchar jarg3) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *arg2 = (char *) 0 ;
    char arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (char)jarg3; 
    {
        try {
            result = (bool)(arg1)->setFromText((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1setFromText_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->setFromText((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    bool arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jchar jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    char arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (char)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jshort jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    unsigned char arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (unsigned char)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    int arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    unsigned int arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (unsigned int)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    double arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1set_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cPar *arg1 = (cPar *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->operator =(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cPar_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cPar *)cPar_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cModulePar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPar *arg1 = 0 ;
    cModulePar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPar **)(void *)&jarg1;
    if(!arg1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cPar const & reference is null");
        return 0;
    } 
    {
        try {
            result = (cModulePar *)new cModulePar((cPar const &)*arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModulePar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cModulePar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cModulePar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cModulePar *)new cModulePar((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModulePar **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cModulePar_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cModulePar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cModulePar *)new cModulePar();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModulePar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cModulePar_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cPar *arg2 = 0 ;
    cModulePar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = *(cPar **)(void *)&jarg2;
    if(!arg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cPar & reference is null");
        return 0;
    } 
    {
        try {
            result = (cModulePar *)new cModulePar((char const *)arg1,*arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModulePar **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cModulePar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModulePar *arg1 = (cModulePar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModulePar *arg1 = (cModulePar *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cModulePar const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1getFullPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cModulePar *arg1 = (cModulePar *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        try {
            result = ((cModulePar const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1getFullPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cModulePar *arg1 = (cModulePar *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cModulePar const *)arg1)->fullPath(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1afterChange(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModulePar *arg1 = (cModulePar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        try {
            (arg1)->afterChange();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1setOwnerModule(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cModulePar *arg1 = (cModulePar *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    {
        try {
            (arg1)->setOwnerModule(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1getOwnerModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModulePar *arg1 = (cModulePar *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModulePar **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cModulePar const *)arg1)->ownerModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModulePar_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cModulePar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cModulePar *)cModulePar_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModulePar **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1hasDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->hasDisplayString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cGate(JNIEnv *jenv, jclass jcls, jstring jarg1, jchar jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    char arg2 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (char)jarg2; 
    {
        try {
            result = (cGate *)new cGate((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cGate *arg1 = (cGate *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cGate const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = ((cGate const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getFullName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cGate const *)arg1)->fullName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getFullPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = ((cGate const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getFullPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cGate const *)arg1)->fullPath(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1deliver(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    simtime_t arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (simtime_t)jarg3; 
    {
        try {
            result = (bool)(arg1)->deliver(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setOwnerModule(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
    cGate *arg1 = (cGate *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            (arg1)->setOwnerModule(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setIndex(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    cGate *arg1 = (cGate *) 0 ;
    int arg2 ;
    int arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            (arg1)->setIndex(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1connectTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    cGate *arg1 = (cGate *) 0 ;
    cGate *arg2 = (cGate *) 0 ;
    cChannel *arg3 = (cChannel *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cGate **)(void *)&jarg2; 
    arg3 = *(cChannel **)(void *)&jarg3; 
    {
        try {
            (arg1)->connectTo(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1connectTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cGate *arg2 = (cGate *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cGate **)(void *)&jarg2; 
    {
        try {
            (arg1)->connectTo(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1disconnect(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cGate *arg1 = (cGate *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            (arg1)->disconnect();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setFrom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cGate *arg2 = (cGate *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cGate **)(void *)&jarg2; 
    {
        try {
            (arg1)->setFrom(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cGate *arg2 = (cGate *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cGate **)(void *)&jarg2; 
    {
        try {
            (arg1)->setTo(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setChannel(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cChannel *arg2 = (cChannel *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cChannel **)(void *)&jarg2; 
    {
        try {
            (arg1)->setChannel(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getChannel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cChannel *)((cGate const *)arg1)->channel();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannel **)(void *)&jresult = result; 
    return jresult;
}


jchar Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jchar jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    char result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (char)((cGate const *)arg1)->type();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jchar)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getOwnerModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cGate const *)arg1)->ownerModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (int)((cGate const *)arg1)->id();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isVector();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getIndex(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (int)((cGate const *)arg1)->index();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getSize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (int)((cGate const *)arg1)->size();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setDelay(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setDelay(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setError(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setError(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setDataRate(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setDataRate(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getDelay(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cPar *)((cGate const *)arg1)->delay();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getError(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cPar *)((cGate const *)arg1)->error();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getDatarate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cPar *)((cGate const *)arg1)->datarate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isBusy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isBusy();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1transmissionFinishes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cGate const *)arg1)->transmissionFinishes();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getFromGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cGate const *)arg1)->fromGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getToGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cGate const *)arg1)->toGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getSourceGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cGate const *)arg1)->sourceGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getDestinationGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cGate const *)arg1)->destinationGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1routeContains_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
    jint jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)(arg1)->routeContains(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1routeContains_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    {
        try {
            result = (int)(arg1)->routeContains(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isConnectedOutside(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isConnectedOutside();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isConnectedInside(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isConnectedInside();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isConnected(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isConnected();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1isRouteOK(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cGate const *)arg1)->isRouteOK();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1getDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cGate *arg1 = (cGate *) 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        try {
            {
                cDisplayString &_result_ref = (arg1)->displayString();
                result = (cDisplayString *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setDisplayString_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jboolean jarg3) {
    cGate *arg1 = (cGate *) 0 ;
    char *arg2 = (char *) 0 ;
    bool arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = jarg3 ? true : false; 
    {
        try {
            (arg1)->setDisplayString((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1setDisplayString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cGate *arg1 = (cGate *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cGate **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setDisplayString((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cGate_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)cGate_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getShareCount(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->shareCount();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3, jint jarg4, jboolean jarg5) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    long arg3 ;
    int arg4 ;
    bool arg5 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    arg3 = (long)jarg3; 
    arg4 = (int)jarg4; 
    arg5 = jarg5 ? true : false; 
    {
        try {
            result = (cMessage *)new cMessage((char const *)arg1,arg2,arg3,arg4,arg5);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3, jint jarg4) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    long arg3 ;
    int arg4 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    arg3 = (long)jarg3; 
    arg4 = (int)jarg4; 
    {
        try {
            result = (cMessage *)new cMessage((char const *)arg1,arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    long arg3 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    arg3 = (long)jarg3; 
    {
        try {
            result = (cMessage *)new cMessage((char const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    {
        try {
            result = (cMessage *)new cMessage((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cMessage *)new cMessage((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cMessage_1_1SWIG_15(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cMessage *)new cMessage();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cMessage *arg1 = (cMessage *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cMessage const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = ((cMessage const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setKind(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            (arg1)->setKind(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setPriority(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            (arg1)->setPriority(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    long arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            (arg1)->setLength(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setByteLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    long arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            (arg1)->setByteLength(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1addLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    long arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            (arg1)->addLength(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1addByteLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    long arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (long)jarg2; 
    {
        try {
            (arg1)->addByteLength(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setBitError(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->setBitError(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setTimestamp_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cMessage *arg1 = (cMessage *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            (arg1)->setTimestamp();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setTimestamp_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->setTimestamp(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setControlInfo(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    cPolymorphic *arg2 = (cPolymorphic *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cPolymorphic **)(void *)&jarg2; 
    {
        try {
            (arg1)->setControlInfo(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1removeControlInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)(arg1)->removeControlInfo();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getKind(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->kind();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getPriority(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->priority();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getLength(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (long)((cMessage const *)arg1)->length();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getByteLength(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (long)((cMessage const *)arg1)->byteLength();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1hasBitError(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cMessage const *)arg1)->hasBitError();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getTimestamp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cMessage const *)arg1)->timestamp();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getControlInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cMessage const *)arg1)->controlInfo();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getParList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            {
                cArray &_result_ref = (arg1)->parList();
                result = (cArray *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1addPar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1addPar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1par_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->par(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1par_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->par((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1findPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cMessage const *)arg1)->findPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1hasPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cMessage const *)arg1)->hasPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1addObject(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (cObject *)(arg1)->addObject(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getObject(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cObject *)(arg1)->getObject((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1hasObject(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->hasObject((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1removeObject_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cObject *)(arg1)->removeObject((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1removeObject_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    cObject *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (cObject *)(arg1)->removeObject(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cObject **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1encapsulate(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    {
        try {
            (arg1)->encapsulate(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1decapsulate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cMessage *)(arg1)->decapsulate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getEncapsulatedMsg(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cMessage *)((cMessage const *)arg1)->encapsulatedMsg();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1isSelfMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cMessage const *)arg1)->isSelfMessage();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1isScheduled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cMessage const *)arg1)->isScheduled();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSenderModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cMessage const *)arg1)->senderModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSenderGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cMessage const *)arg1)->senderGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getArrivalGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cMessage const *)arg1)->arrivalGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSenderModuleId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->senderModuleId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSenderGateId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->senderGateId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getArrivalModuleId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->arrivalModuleId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getArrivalGateId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)((cMessage const *)arg1)->arrivalGateId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getCreationTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cMessage const *)arg1)->creationTime();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSendingTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cMessage const *)arg1)->sendingTime();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getArrivalTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cMessage const *)arg1)->arrivalTime();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1arrivedOn_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (bool)((cMessage const *)arg1)->arrivedOn(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1arrivedOn_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->arrivedOn((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1arrivedOn_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jboolean jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (bool)(arg1)->arrivedOn((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setSentFrom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jdouble jarg4) {
    cMessage *arg1 = (cMessage *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int arg3 ;
    simtime_t arg4 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (simtime_t)jarg4; 
    {
        try {
            (arg1)->setSentFrom(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setArrival_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
    cMessage *arg1 = (cMessage *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            (arg1)->setArrival(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setArrival_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jdouble jarg4) {
    cMessage *arg1 = (cMessage *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    int arg3 ;
    simtime_t arg4 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (simtime_t)jarg4; 
    {
        try {
            (arg1)->setArrival(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setArrivalTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->setArrivalTime(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1setSrcProcId(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cMessage *arg1 = (cMessage *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            (arg1)->setSrcProcId(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getSrcProcId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (int)(arg1)->srcProcId();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cMessage *arg1 = (cMessage *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cMessage **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cMessage const *)arg1)->displayString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getTotalMessageCount(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (long)cMessage::totalMessageCount();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1getLiveMessageCount(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (long)cMessage::liveMessageCount();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cMessage_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cMessage *)cMessage_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_get_1dispSUBMOD(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (int)dispSUBMOD;
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_get_1dispENCLOSINGMOD(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (int)dispENCLOSINGMOD;
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_get_1dispNUMTYPES(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (int)dispNUMTYPES;
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1hasDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->hasDisplayString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1hasBackgroundDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->hasBackgroundDisplayString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setEvEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->setEvEnabled(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1isEvEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->isEvEnabled();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModule *arg1 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getFullName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cModule const *)arg1)->fullName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getFullPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = ((cModule const *)arg1)->fullPath();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getFullPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cModule const *)arg1)->fullPath(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1addGate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jchar jarg3, jboolean jarg4) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    char arg3 ;
    bool arg4 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (char)jarg3; 
    arg4 = jarg4 ? true : false; 
    {
        try {
            result = (cGate *)(arg1)->addGate((char const *)arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1addGate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jchar jarg3) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    char arg3 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (char)jarg3; 
    {
        try {
            result = (cGate *)(arg1)->addGate((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setGateSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)(arg1)->setGateSize((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1addPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cPar *)(arg1)->addPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1buildInside(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)(arg1)->buildInside();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1isSimple(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cModule const *)arg1)->isSimple();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getModuleType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    cModuleType *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (cModuleType *)((cModule const *)arg1)->moduleType();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModuleType **)(void *)&jresult = result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getId(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)((cModule const *)arg1)->id();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getParentModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)((cModule const *)arg1)->parentModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1isVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cModule const *)arg1)->isVector();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getIndex(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)((cModule const *)arg1)->index();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getSize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)((cModule const *)arg1)->size();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1findSubmodule_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)(arg1)->findSubmodule((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1findSubmodule_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)(arg1)->findSubmodule((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getSubmodule_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (cModule *)(arg1)->submodule((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getSubmodule_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cModule *)(arg1)->submodule((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1moduleByRelativePath(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cModule *)(arg1)->moduleByRelativePath((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getNumGates(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)((cModule const *)arg1)->gates();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getGate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cGate *)(arg1)->gate(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getGate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (cGate *)(arg1)->gate((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getGate_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cGate *)(arg1)->gate((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1gateSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cModule const *)arg1)->gateSize((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1findGate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)((cModule const *)arg1)->findGate((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1findGate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cModule const *)arg1)->findGate((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1hasGate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (bool)((cModule const *)arg1)->hasGate((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1hasGate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cModule const *)arg1)->hasGate((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1checkInternalConnections(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cModule const *)arg1)->checkInternalConnections();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getParams(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            result = (int)((cModule const *)arg1)->params();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1par_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->par(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1par_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->par((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1findPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cModule const *)arg1)->findPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1ancestorPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->ancestorPar((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1hasPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cModule const *)arg1)->hasPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1callInitialize_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModule *arg1 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->callInitialize();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1callInitialize_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jboolean jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (bool)(arg1)->callInitialize(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1callFinish(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModule *arg1 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->callFinish();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1scheduleStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->scheduleStart(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1deleteModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cModule *arg1 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->deleteModule();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1changeParentTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2; 
    {
        try {
            (arg1)->changeParentTo(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getDisplayString_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            {
                cDisplayString &_result_ref = (arg1)->displayString();
                result = (cDisplayString *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getBackgroundDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        try {
            {
                cDisplayString &_result_ref = (arg1)->backgroundDisplayString();
                result = (cDisplayString *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setDisplayString_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jboolean jarg3) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    bool arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = jarg3 ? true : false; 
    {
        try {
            (arg1)->setDisplayString((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setDisplayString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setDisplayString((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setBackgroundDisplayString_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jboolean jarg3) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    bool arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = jarg3 ? true : false; 
    {
        try {
            (arg1)->setBackgroundDisplayString((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setBackgroundDisplayString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setBackgroundDisplayString((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1getDisplayString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jstring jresult = 0 ;
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (char *)(arg1)->displayString(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setDisplayString_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jboolean jarg4) {
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    char *arg3 = (char *) 0 ;
    bool arg4 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return ;
        }
    }
    arg4 = jarg4 ? true : false; 
    {
        try {
            (arg1)->setDisplayString(arg2,(char const *)arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1setDisplayString_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3) {
    cModule *arg1 = (cModule *) 0 ;
    int arg2 ;
    char *arg3 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return ;
        }
    }
    {
        try {
            (arg1)->setDisplayString(arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1bubble(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cModule *arg1 = (cModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->bubble((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cModule_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cModule *)cModule_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cCompoundModule(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cCompoundModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cCompoundModule *)new cCompoundModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cCompoundModule **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cCompoundModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cCompoundModule *arg1 = (cCompoundModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cCompoundModule **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cCompoundModule_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cCompoundModule *arg1 = (cCompoundModule *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cCompoundModule **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cCompoundModule const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cCompoundModule_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cCompoundModule *arg1 = (cCompoundModule *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cCompoundModule **)(void *)&jarg1; 
    {
        try {
            result = ((cCompoundModule const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cCompoundModule_1scheduleStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cCompoundModule *arg1 = (cCompoundModule *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cCompoundModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->scheduleStart(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cCompoundModule_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cCompoundModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cCompoundModule *)cCompoundModule_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cCompoundModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cSubModIterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cModule *arg1 = 0 ;
    cSubModIterator *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cModule **)(void *)&jarg1;
    if(!arg1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cModule const & reference is null");
        return 0;
    } 
    {
        try {
            result = (cSubModIterator *)new cSubModIterator((cModule const &)*arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSubModIterator **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSubModIterator_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cSubModIterator *arg1 = (cSubModIterator *) 0 ;
    cModule *arg2 = 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSubModIterator **)(void *)&jarg1; 
    arg2 = *(cModule **)(void *)&jarg2;
    if(!arg2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "cModule const & reference is null");
        return ;
    } 
    {
        try {
            (arg1)->init((cModule const &)*arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSubModIterator_1end(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cSubModIterator *arg1 = (cSubModIterator *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSubModIterator **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cSubModIterator const *)arg1)->end();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSubModIterator_1incr(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cSubModIterator *arg1 = (cSubModIterator *) 0 ;
    int arg2 ;
    cModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSubModIterator **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (cModule *)(arg1)->operator ++(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cModule **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cSubModIterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSubModIterator *arg1 = (cSubModIterator *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSubModIterator **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cSimpleModule_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    unsigned int arg1 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = (unsigned int)jarg1; 
    {
        try {
            result = (cSimpleModule *)new cSimpleModule(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cSimpleModule_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cSimpleModule *)new cSimpleModule();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cSimpleModule_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cModule *arg2 = (cModule *) 0 ;
    unsigned int arg3 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = *(cModule **)(void *)&jarg2; 
    arg3 = (unsigned int)jarg3; 
    {
        try {
            result = (cSimpleModule *)new cSimpleModule((char const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cSimpleModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cSimpleModule const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = ((cSimpleModule const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1scheduleStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->scheduleStart(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1deleteModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->deleteModule();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1usesActivity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cSimpleModule const *)arg1)->usesActivity();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1simTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cSimpleModule const *)arg1)->simTime();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1setPhase(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setPhase((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1snapshot_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jboolean jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->snapshot(arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1snapshot_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jboolean jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cObject *arg2 = (cObject *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cObject **)(void *)&jarg2; 
    {
        try {
            result = (bool)(arg1)->snapshot(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1snapshot_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = (bool)(arg1)->snapshot();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1breakpoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->breakpoint((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1send_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)(arg1)->send(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1send_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3, jint jarg4) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    char *arg3 = (char *) 0 ;
    int arg4 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    arg4 = (int)jarg4; 
    {
        try {
            result = (int)(arg1)->send(arg2,(char const *)arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1send_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    char *arg3 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    {
        try {
            result = (int)(arg1)->send(arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1send_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    cGate *arg3 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = *(cGate **)(void *)&jarg3; 
    {
        try {
            result = (int)(arg1)->send(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDelayed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jint jarg4) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    int arg4 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = (int)jarg4; 
    {
        try {
            result = (int)(arg1)->sendDelayed(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDelayed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jstring jarg4, jint jarg5) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    char *arg4 = (char *) 0 ;
    int arg5 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return 0;
        }
    }
    arg5 = (int)jarg5; 
    {
        try {
            result = (int)(arg1)->sendDelayed(arg2,arg3,(char const *)arg4,arg5);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDelayed_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jstring jarg4) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    char *arg4 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return 0;
        }
    }
    {
        try {
            result = (int)(arg1)->sendDelayed(arg2,arg3,(char const *)arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDelayed_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jlong jarg4) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    cGate *arg4 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = *(cGate **)(void *)&jarg4; 
    {
        try {
            result = (int)(arg1)->sendDelayed(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDirect_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jlong jarg4, jint jarg5) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    cModule *arg4 = (cModule *) 0 ;
    int arg5 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = *(cModule **)(void *)&jarg4; 
    arg5 = (int)jarg5; 
    {
        try {
            result = (int)(arg1)->sendDirect(arg2,arg3,arg4,arg5);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDirect_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jlong jarg4, jstring jarg5, jint jarg6) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    cModule *arg4 = (cModule *) 0 ;
    char *arg5 = (char *) 0 ;
    int arg6 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = *(cModule **)(void *)&jarg4; 
    {
        arg5 = 0;
        if (jarg5) {
            arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
            if (!arg5) return 0;
        }
    }
    arg6 = (int)jarg6; 
    {
        try {
            result = (int)(arg1)->sendDirect(arg2,arg3,arg4,(char const *)arg5,arg6);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg5) jenv->ReleaseStringUTFChars(jarg5, arg5); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDirect_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jlong jarg4, jstring jarg5) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    cModule *arg4 = (cModule *) 0 ;
    char *arg5 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = *(cModule **)(void *)&jarg4; 
    {
        arg5 = 0;
        if (jarg5) {
            arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
            if (!arg5) return 0;
        }
    }
    {
        try {
            result = (int)(arg1)->sendDirect(arg2,arg3,arg4,(char const *)arg5);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg5) jenv->ReleaseStringUTFChars(jarg5, arg5); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1sendDirect_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3, jlong jarg4) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    double arg3 ;
    cGate *arg4 = (cGate *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (double)jarg3; 
    arg4 = *(cGate **)(void *)&jarg4; 
    {
        try {
            result = (int)(arg1)->sendDirect(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1scheduleAt(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jlong jarg3) {
    jint jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    simtime_t arg2 ;
    cMessage *arg3 = (cMessage *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    arg3 = *(cMessage **)(void *)&jarg3; 
    {
        try {
            result = (int)(arg1)->scheduleAt(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1cancelEvent(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    {
        try {
            result = (cMessage *)(arg1)->cancelEvent(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1cancelAndDelete(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    {
        try {
            (arg1)->cancelAndDelete(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1wait(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    simtime_t arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    {
        try {
            (arg1)->wait(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1waitAndEnqueue(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jlong jarg3) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    simtime_t arg2 ;
    cQueue *arg3 = (cQueue *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    arg3 = *(cQueue **)(void *)&jarg3; 
    {
        try {
            (arg1)->waitAndEnqueue(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1end(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->end();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1endSimulation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        try {
            (arg1)->endSimulation();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1error(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    char *arg2 = (char *) 0 ;
    void *arg3 = 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            ((cSimpleModule const *)arg1)->error((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1recordScalar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jdouble jarg3) {
    cSimpleModule *arg1 = (cSimpleModule *) 0 ;
    char *arg2 = (char *) 0 ;
    double arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cSimpleModule **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = (double)jarg3; 
    {
        try {
            (arg1)->recordScalar((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cSimpleModule_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cSimpleModule *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cSimpleModule *)cSimpleModule_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cSimpleModule **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_set_1cStatistic_1genk(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    if (arg1) (arg1)->genk = arg2;
    
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_get_1cStatistic_1genk(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    result = (int) ((arg1)->genk);
    
    jresult = (jint)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cStatistic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1collect(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->collect(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1collect2(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    double arg2 ;
    double arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            (arg1)->collect2(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1clearResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            (arg1)->clearResult();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getSamples(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (long)((cStatistic const *)arg1)->samples();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getWeights(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->weights();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getSum(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->sum();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getSqrSum(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->sqrSum();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getMin(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->min();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getMax(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->max();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getMean(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->mean();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getStddev(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->stddev();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getVariance(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->variance();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1setGenK(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            (arg1)->setGenK(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1getRandom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStatistic *arg1 = (cStatistic *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStatistic const *)arg1)->random();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1recordScalar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->recordScalar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1recordScalar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cStatistic *arg1 = (cStatistic *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStatistic **)(void *)&jarg1; 
    {
        try {
            (arg1)->recordScalar();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cStatistic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cStatistic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cStatistic *)cStatistic_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cStatistic **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cStdDev_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cStdDev *)new cStdDev((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cStdDev **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cStdDev_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cStdDev *)new cStdDev();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cStdDev **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cStdDev(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cStdDev *arg1 = (cStdDev *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cStdDev const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = ((cStdDev const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1collect(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cStdDev *arg1 = (cStdDev *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->collect(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getSamples(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (long)((cStdDev const *)arg1)->samples();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getWeights(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->weights();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getSum(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->sum();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getSqrSum(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->sqrSum();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getMin(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->min();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getMax(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->max();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getMean(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->mean();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getStddev(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->stddev();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getVariance(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->variance();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1getRandom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cStdDev *arg1 = (cStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cStdDev const *)arg1)->random();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1clearResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cStdDev *arg1 = (cStdDev *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cStdDev **)(void *)&jarg1; 
    {
        try {
            (arg1)->clearResult();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cStdDev_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cStdDev *)cStdDev_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cStdDev **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cWeightedStdDev_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cWeightedStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cWeightedStdDev *)new cWeightedStdDev((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cWeightedStdDev **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cWeightedStdDev_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cWeightedStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cWeightedStdDev *)new cWeightedStdDev();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cWeightedStdDev **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cWeightedStdDev(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cWeightedStdDev const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1collect(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->collect(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1collect2(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3) {
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    double arg2 ;
    double arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            (arg1)->collect2(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1clearResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            (arg1)->clearResult();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1getWeights(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cWeightedStdDev const *)arg1)->weights();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1getMean(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cWeightedStdDev const *)arg1)->mean();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1getVariance(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cWeightedStdDev *arg1 = (cWeightedStdDev *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cWeightedStdDev **)(void *)&jarg1; 
    {
        try {
            result = (double)((cWeightedStdDev const *)arg1)->variance();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cWeightedStdDev_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cWeightedStdDev *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cWeightedStdDev *)cWeightedStdDev_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cWeightedStdDev **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cOutVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    cOutVector *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    {
        try {
            result = (cOutVector *)new cOutVector((char const *)arg1,arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cOutVector **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cOutVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cOutVector *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cOutVector *)new cOutVector((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cOutVector **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cOutVector_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cOutVector *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cOutVector *)new cOutVector();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cOutVector **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cOutVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cOutVector *arg1 = (cOutVector *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1setName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    cOutVector *arg1 = (cOutVector *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        try {
            (arg1)->setName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cOutVector const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            result = ((cOutVector const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1record_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    jboolean jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    double arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            result = (bool)(arg1)->record(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1record_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3) {
    jboolean jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    double arg2 ;
    double arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            result = (bool)(arg1)->record(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1recordWithTimestamp_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3) {
    jboolean jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    simtime_t arg2 ;
    double arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    arg3 = (double)jarg3; 
    {
        try {
            result = (bool)(arg1)->recordWithTimestamp(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1recordWithTimestamp_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
    jboolean jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    simtime_t arg2 ;
    double arg3 ;
    double arg4 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    arg2 = (simtime_t)jarg2; 
    arg3 = (double)jarg3; 
    arg4 = (double)jarg4; 
    {
        try {
            result = (bool)(arg1)->recordWithTimestamp(arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1enable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cOutVector *arg1 = (cOutVector *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            (arg1)->enable();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1disable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cOutVector *arg1 = (cOutVector *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            (arg1)->disable();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1getValuesReceived(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            result = (long)(arg1)->valuesReceived();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1getValuesStored(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    long result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            result = (long)(arg1)->valuesStored();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1getTuple(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cOutVector *arg1 = (cOutVector *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cOutVector **)(void *)&jarg1; 
    {
        try {
            result = (int)(arg1)->tuple();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cOutVector_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cOutVector *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cOutVector *)cOutVector_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cOutVector **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cChannel_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cChannel *)new cChannel((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannel **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cChannel_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cChannel *)new cChannel();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannel **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cChannel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cChannel *arg1 = (cChannel *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cChannel const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        try {
            result = ((cChannel const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cChannel *arg1 = (cChannel *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1getFromGate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    cGate *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        try {
            result = (cGate *)((cChannel const *)arg1)->fromGate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cGate **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1addPar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1addPar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1par_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    int arg2 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->par(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1par_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->par((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1findPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cChannel const *)arg1)->findPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1hasPar(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cChannel const *)arg1)->hasPar((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1parList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    cArray *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    {
        try {
            {
                cArray &_result_ref = (arg1)->parList();
                result = (cArray *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cArray **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1deliver(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
    jboolean jresult = 0 ;
    cChannel *arg1 = (cChannel *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    simtime_t arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cChannel **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (simtime_t)jarg3; 
    {
        try {
            result = (bool)(arg1)->deliver(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cChannel_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cChannel *)cChannel_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cChannel **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cBasicChannel_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cBasicChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cBasicChannel *)new cBasicChannel((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cBasicChannel **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cBasicChannel_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cBasicChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cBasicChannel *)new cBasicChannel();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cBasicChannel **)(void *)&jresult = result; 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cBasicChannel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((cBasicChannel const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = ((cBasicChannel const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1forEachChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cVisitor *arg2 = (cVisitor *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cVisitor **)(void *)&jarg2; 
    {
        try {
            (arg1)->forEachChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setDelay_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->setDelay(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setError_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->setError(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setDatarate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = (double)jarg2; 
    {
        try {
            (arg1)->setDatarate(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setDisabled(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    bool arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = jarg2 ? true : false; 
    {
        try {
            (arg1)->setDisabled(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setDelay_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setDelay(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setError_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setError(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1setDatarate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            (arg1)->setDatarate(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getDelay(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (double)((cBasicChannel const *)arg1)->delay();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getError(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (double)((cBasicChannel const *)arg1)->error();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getDatarate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    double result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (double)((cBasicChannel const *)arg1)->datarate();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getDisabled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cBasicChannel const *)arg1)->disabled();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1addPar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    char *arg2 = (char *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar((char const *)arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1addPar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cPar *arg2 = (cPar *) 0 ;
    cPar *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cPar **)(void *)&jarg2; 
    {
        try {
            {
                cPar &_result_ref = (arg1)->addPar(arg2);
                result = (cPar *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPar **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1isBusy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cBasicChannel const *)arg1)->isBusy();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jdouble Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1getTransmissionFinishes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jdouble jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    simtime_t result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    {
        try {
            result = (simtime_t)((cBasicChannel const *)arg1)->transmissionFinishes();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jdouble)result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1deliver(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
    jboolean jresult = 0 ;
    cBasicChannel *arg1 = (cBasicChannel *) 0 ;
    cMessage *arg2 = (cMessage *) 0 ;
    simtime_t arg3 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cBasicChannel **)(void *)&jarg1; 
    arg2 = *(cMessage **)(void *)&jarg2; 
    arg3 = (simtime_t)jarg3; 
    {
        try {
            result = (bool)(arg1)->deliver(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cBasicChannel_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    cBasicChannel *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = (cBasicChannel *)cBasicChannel_cast(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cBasicChannel **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cDisplayString_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        try {
            result = (cDisplayString *)new cDisplayString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cDisplayString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        try {
            result = (cDisplayString *)new cDisplayString((char const *)arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cDisplayString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    cDisplayString *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            {
                cDisplayString &_result_ref = (arg1)->operator =((char const *)arg2);
                result = (cDisplayString *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cDisplayString **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cDisplayString const *)arg1)->getString();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1parse(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->parse((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1existsTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)((cDisplayString const *)arg1)->existsTag((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getNumArgs_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)((cDisplayString const *)arg1)->getNumArgs((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getTagArg_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cDisplayString const *)arg1)->getTagArg((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1setTagArg_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jstring jarg4) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    char *arg4 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->setTagArg((char const *)arg2,arg3,(char const *)arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1setTagArg_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jint jarg4) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    long arg4 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    arg4 = (long)jarg4; 
    {
        try {
            result = (bool)(arg1)->setTagArg((char const *)arg2,arg3,arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1removeTag_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->removeTag((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getNumTags(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        try {
            result = (int)((cDisplayString const *)arg1)->getNumTags();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getTagName(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jstring jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int arg2 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (char *)((cDisplayString const *)arg1)->getTagName(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getNumArgs_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jint jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int arg2 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (int)((cDisplayString const *)arg1)->getNumArgs(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1getTagArg_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    jstring jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int arg2 ;
    int arg3 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (char *)((cDisplayString const *)arg1)->getTagArg(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1setTagArg_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3, jstring jarg4) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 = (char *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return 0;
        }
    }
    {
        try {
            result = (bool)(arg1)->setTagArg(arg2,arg3,(char const *)arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1insertTag_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    jint jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            result = (int)(arg1)->insertTag((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jint Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1insertTag_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jint jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (int)(arg1)->insertTag((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jint)result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cDisplayString_1removeTag_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jboolean jresult = 0 ;
    cDisplayString *arg1 = (cDisplayString *) 0 ;
    int arg2 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cDisplayString **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            result = (bool)(arg1)->removeTag(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1cXMLElement(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElement *arg3 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    arg3 = *(cXMLElement **)(void *)&jarg3; 
    {
        try {
            result = (cXMLElement *)new cXMLElement((char const *)arg1,(char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1setNodeValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            (arg1)->setNodeValue((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1appendNodeValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = (int)jarg3; 
    {
        try {
            (arg1)->appendNodeValue((char const *)arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1cXMLElement(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1setAttribute(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return ;
        }
    }
    {
        try {
            (arg1)->setAttribute((char const *)arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1appendChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    {
        try {
            (arg1)->appendChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1insertChildBefore(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    cXMLElement *arg3 = (cXMLElement *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    arg3 = *(cXMLElement **)(void *)&jarg3; 
    {
        try {
            (arg1)->insertChildBefore(arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1removeChild(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *arg2 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    arg2 = *(cXMLElement **)(void *)&jarg2; 
    {
        try {
            result = (cXMLElement *)(arg1)->removeChild(arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getTagName(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cXMLElement const *)arg1)->getTagName();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getSourceLocation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cXMLElement const *)arg1)->getSourceLocation();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getNodeValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (char *)((cXMLElement const *)arg1)->getNodeValue();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getAttribute(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    char *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (char *)((cXMLElement const *)arg1)->getAttribute((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1hasAttributes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cXMLElement const *)arg1)->hasAttributes();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getAttributes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLAttributeMap *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            {
                cXMLAttributeMap const &_result_ref = ((cXMLElement const *)arg1)->getAttributes();
                result = (cXMLAttributeMap *) &_result_ref;
            }
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLAttributeMap **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getParentNode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getParentNode();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jboolean Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1hasChildren(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    bool result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (bool)((cXMLElement const *)arg1)->hasChildren();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = (jboolean)result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getFirstChild(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getFirstChild();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getLastChild(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getLastChild();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getNextSibling(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getNextSibling();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getPreviousSibling(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getPreviousSibling();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getFirstChildWithTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getFirstChildWithTag((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getNextSiblingWithTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getNextSiblingWithTag((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getChildren(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    cXMLElementList result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            result = ((cXMLElement const *)arg1)->getChildren();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElementList **)(void *)&jresult = new cXMLElementList((cXMLElementList &)result); 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getChildrenByTagName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElementList result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = ((cXMLElement const *)arg1)->getChildrenByTagName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElementList **)(void *)&jresult = new cXMLElementList((cXMLElementList &)result); 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getElementsByTagName(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElementList result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = ((cXMLElement const *)arg1)->getElementsByTagName((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElementList **)(void *)&jresult = new cXMLElementList((cXMLElementList &)result); 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getFirstChildWithAttribute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    char *arg4 = (char *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    {
        arg4 = 0;
        if (jarg4) {
            arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
            if (!arg4) return 0;
        }
    }
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getFirstChildWithAttribute((char const *)arg2,(char const *)arg3,(char const *)arg4);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    {
        if (arg4) jenv->ReleaseStringUTFChars(jarg4, arg4); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getFirstChildWithAttribute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getFirstChildWithAttribute((char const *)arg2,(char const *)arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1getElementById(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    char *arg2 = (char *) 0 ;
    cXMLElement *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        try {
            result = (cXMLElement *)((cXMLElement const *)arg1)->getElementById((char const *)arg2);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cXMLElement **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1debugDump_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    int arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    arg2 = (int)jarg2; 
    {
        try {
            ((cXMLElement const *)arg1)->debugDump(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_cXMLElement_1debugDump_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    cXMLElement *arg1 = (cXMLElement *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cXMLElement **)(void *)&jarg1; 
    {
        try {
            ((cXMLElement const *)arg1)->debugDump();
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1JSimpleModule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    JSimpleModule *arg1 = (JSimpleModule *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JSimpleModule **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_JSimpleModule_1retrieveMsgToBeHandled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    JSimpleModule *arg1 = (JSimpleModule *) 0 ;
    cMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JSimpleModule **)(void *)&jarg1; 
    {
        try {
            result = (cMessage *)(arg1)->retrieveMsgToBeHandled();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cMessage **)(void *)&jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_new_1JMessage(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    int arg2 ;
    int arg3 ;
    JMessage *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    {
        try {
            result = (JMessage *)new JMessage((char const *)arg1,arg2,arg3);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(JMessage **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_delete_1JMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    JMessage *arg1 = (JMessage *) 0 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JMessage **)(void *)&jarg1; 
    {
        try {
            delete arg1;
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_JMessage_1dup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    JMessage *arg1 = (JMessage *) 0 ;
    cPolymorphic *result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JMessage **)(void *)&jarg1; 
    {
        try {
            result = (cPolymorphic *)((JMessage const *)arg1)->dup();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    *(cPolymorphic **)(void *)&jresult = result; 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_JMessage_1getInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    JMessage *arg1 = (JMessage *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JMessage **)(void *)&jarg1; 
    {
        try {
            result = ((JMessage const *)arg1)->info();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


jstring Java_org_omnetpp_simkernel_SimkernelJNI_JMessage_1getDetailedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    JMessage *arg1 = (JMessage *) 0 ;
    std::string result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JMessage **)(void *)&jarg1; 
    {
        try {
            result = ((JMessage const *)arg1)->detailedInfo();
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = jenv->NewStringUTF((&result)->c_str()); 
    return jresult;
}


void Java_org_omnetpp_simkernel_SimkernelJNI_JMessage_1swigSetJavaPeer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg2) {
    JMessage *arg1 = (JMessage *) 0 ;
    jobject arg2 ;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(JMessage **)(void *)&jarg1; 
    arg2 = jarg2; 
    {
        try {
            (arg1)->swigSetJavaPeer(arg2);
            
        } catch (cException *e) {
            SWIG_exception(, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
}


jobject Java_org_omnetpp_simkernel_SimkernelJNI_JMessage_1swigJavaPeerOf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jobject jresult = 0 ;
    cPolymorphic *arg1 = (cPolymorphic *) 0 ;
    jobject result;
    
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    arg1 = *(cPolymorphic **)(void *)&jarg1; 
    {
        try {
            result = JMessage::swigJavaPeerOf(arg1);
            
        } catch (cException *e) {
            SWIG_exception(0, SWIG_RuntimeError,const_cast<char*>(e->message()));
        }
    }
    jresult = result; 
    return jresult;
}


jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcObjectUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cPolymorphic **)(void *)&baseptr = *(cObject **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcRuntimeErrorUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cException **)(void *)&baseptr = *(cRuntimeError **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcDefaultListUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cDefaultList **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcSimulationUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cSimulation **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcModuleTypeUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cModuleType **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcChannelTypeUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cChannelType **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcNetworkTypeUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cNetworkType **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcArrayUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cArray **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcQueueUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cQueue **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcDoubleExpressionUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cExpression **)(void *)&baseptr = *(cDoubleExpression **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcParUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cPar **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcModuleParUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cPar **)(void *)&baseptr = *(cModulePar **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcGateUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cGate **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcMessageUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cMessage **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcModuleUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cDefaultList **)(void *)&baseptr = *(cModule **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcCompoundModuleUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cModule **)(void *)&baseptr = *(cCompoundModule **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcSimpleModuleUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cModule **)(void *)&baseptr = *(cSimpleModule **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcStatisticUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cStatistic **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcStdDevUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cStatistic **)(void *)&baseptr = *(cStdDev **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcWeightedStdDevUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cStdDev **)(void *)&baseptr = *(cWeightedStdDev **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcOutVectorUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cOutVector **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcChannelUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cObject **)(void *)&baseptr = *(cChannel **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGcBasicChannelUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cChannel **)(void *)&baseptr = *(cBasicChannel **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGJSimpleModuleUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cSimpleModule **)(void *)&baseptr = *(JSimpleModule **)(void *)&jarg1;
    return baseptr;
}

jlong Java_org_omnetpp_simkernel_SimkernelJNI_SWIGJMessageUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv; LOG_JNI_CALL();
    (void)jcls;
    *(cMessage **)(void *)&baseptr = *(JMessage **)(void *)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

