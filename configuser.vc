#
# This file is included by all Makefile.vc's. It contains flags and settings
# for compiling with MSVC. You are free to edit the settings in here.
#

#
# base directories
#
# Edit these variables!
#
# Use forward slashes ('/') in the dir names, not backslashes ('\')!
# Don't use relative directories!
# Directory names with spaces may also cause problems, it's better to use
# short file names (e.g. 'C:/PROGRA~1' instead of 'C:/Program files').
#
OMNETPP_ROOT=d:/home/omnetpp

# Version. Should ideally come from the 'Version' file...
OMNETPP_VERSION=omnetpp-3.0a2

#
# Directory and version of Tcl/Tk and BLT, for example "8.4" and "2.4".
# Tcl/Tk 8.4 (minimum 8.4.0) and BLT 2.4 required.
# Leave BLT_VER empty if you don't have BLT.
#
TK_DIR=d:/home/tools/Tcl-8.4.2
TK_VER=8.4
BLT_VER=2.4

#
# MPI directory. MPI is only needed for parallel distributed execution.
# Leave empty if you don't have MPI.
#
MPI_DIR=
#MPI_DIR=d:/home/tools/mpi

#
# Location of Expat.
#
EXPAT_DIR=d:/home/tools/expat-1.95.6

#
# Directory of various tools
#

# Perl: needed by opp_makedep, opp_msgc, opp_neddoc, opp_test etc.
PERL=perl.exe

# flex/bison: only needed it you want to modify NEDC or GNED
YACC=D:/home/tools/UnxUtils/usr/local/wbin/bison.exe
LEX=D:/home/tools/UnxUtils/usr/local/wbin/flex.exe

# Doxygen is needed for generating HTML documentation from C++
DOXYGEN_DIR=d:/home/tools/doxygen

# Following tools are needed by opp_neddoc for generating model documentation.
# XSLTPROC is part of LibXSLT. DOT comes from the GraphViz package.
# XSLTPROC is the only required one, GHOSTSCRIPT, GIFTRANS and DOT are optional
# but of course affect documentation quality.
XSLTPROC=d:/home/tools/libxslt-1.0.27.win32/util/xsltproc.exe
GHOSTSCRIPT=d:/home/tools/gs/gs8.11/bin/gswin32c.exe
GIFTRANS=d:/home/tools/misc/giftrans.exe
DOT=d:/home/tools/Graphviz/bin/dot.exe


#
# Choice of XML parser. Possible choices: expat or none (perhaps libxml in the
# future?). If set to 'none', nedxml will compile but won't support XML input.
#
XMLPARSER=expat
#XMLPARSER=none

#
# If you don't want to build some of the components below, substitute
# missing-library
#
TKENV_IF_POSSIBLE=tkenv
GNED_IF_POSSIBLE=gned

#
# It is possible to have the Tcl files embedded into the compiled OMNeT++
# libraries and executables. This can be useful if you want to ship
# self-contained standalone executables which do not rely on external
# Tcl scripts.
#
# This option is available at present for Tkenv, GNED and Plove.
# Set the following variables to "yes" to enable embedding Tcl files.
#
EMBED_TCL_CODE=no

#
# It is possible to compile GNED and Plove as Windows GUI apps (ie. not
# console apps). Set the following variable to "yes" to enable compiling
# GUI apps.
#
USE_WINMAIN=no

#
# Set to "yes" to enable simulation executables load NED files dynamically.
#
WITH_NETBUILDER=yes

#
# Set to "yes" to enable the parallel distributed simulation feature.
#
WITH_PARSIM=yes

#
# Choose between debug and release libraries here
#
#CFLAGS=$(CFLAGS_DEBUG)
#LDFLAGS=$(LDFLAGS_DEBUG)
CFLAGS=$(CFLAGS_RELEASE)
LDFLAGS=$(LDFLAGS_RELEASE)


#==============================================================================
#====== !!!         Try not to change anything below this line       !!! ======
#==============================================================================


#
# Other directories & files based on the base dirs
#
OMNETPP_SRC_DIR=$(OMNETPP_ROOT)/src
OMNETPP_SAMPLES_DIR=$(OMNETPP_ROOT)/samples
OMNETPP_TUTORIAL_DIR=$(OMNETPP_ROOT)/tutorial
OMNETPP_TEST_DIR=$(OMNETPP_ROOT)/test
OMNETPP_DOC_DIR=$(OMNETPP_ROOT)/doc

OMNETPP_BIN_DIR=$(OMNETPP_ROOT)/bin
OMNETPP_INCL_DIR=$(OMNETPP_ROOT)/include
OMNETPP_LIB_DIR=$(OMNETPP_ROOT)/lib

OMNETPP_TKENV_DIR=$(OMNETPP_ROOT)/src/tkenv
OMNETPP_GNED_DIR=$(OMNETPP_ROOT)/src/gned
OMNETPP_PLOVE_DIR=$(OMNETPP_ROOT)/src/plove
OMNETPP_BITMAP_PATH=.;./bitmaps;$(OMNETPP_ROOT)/bitmaps

#
# Libraries
#

TK_INCL_DIR=$(TK_DIR)/include
TK_LIB_DIR=$(TK_DIR)/lib
TCL_LIB=tcl$(TK_VER:.=).lib
TK_LIB=tk$(TK_VER:.=).lib
_TCL_LIBRARY=$(TK_DIR)/lib/tcl$(TK_VER)

!if "$(BLT_VER)"!=""
HAVE_BLT=yes
BLT_LIB=blt$(BLT_VER:.=).lib
!endif

!if "$(MPI_DIR)"!=""
HAVE_MPI=yes
!endif
MPI_INCL_DIR=$(MPI_DIR)/include

EXPAT_INCL_DIR=$(EXPAT_DIR)/source/lib
EXPAT_LIB_DIR=$(EXPAT_DIR)/libs
EXPAT_LIB=libexpat.lib

# compiler and linker switches necessary to build an app with Tcl/Tk, MPI, expat, etc.
TK_CFLAGS=/I "$(TK_INCL_DIR)"
TK_LIBS=$(TCL_LIB) $(TK_LIB) $(BLT_LIB) /libpath:"$(TK_LIB_DIR)"
MPI_CFLAGS=/I "$(MPI_INCL_DIR)"
MPI_LIBS=
XML_CFLAGS=/I "$(EXPAT_INCL_DIR)"
XML_LIBS=$(EXPAT_LIB) /libpath:"$(EXPAT_LIB_DIR)"
SYS_LIBS=

#
# Tools
#

# MSVC programs
CXX=cl.exe
LINK=link.exe
AS=cl.exe
AR=link.exe /lib
SHLIB_LD=link.exe /dll
RC=rc.exe

# dependency generator (needs Perl!)
MAKEDEPEND=$(PERL) $(OMNETPP_ROOT)/src/utils/opp_makedep -Y --objsuffix .obj --objdirtree

# OMNeT++ tools
#NEDC=$(OMNETPP_BIN_DIR)/nedc
NEDC=$(OMNETPP_BIN_DIR)/nedtool
MSGC=$(OMNETPP_BIN_DIR)/opp_msgc
REPLACE=$(OMNETPP_SRC_DIR)/utils/opp_replace
WISH=$(TK_DIR)/bin/wish$(TK_VER:.=).exe
DOXYGEN=$(DOXYGEN_DIR)/bin/doxygen

#
# Configuration
#

# Compiler switches

CFLAGS_DEBUG=/nologo /GX /GR /FD /Zm200 /MLd /Od /Gm /GZ /ZI
LDFLAGS_DEBUG=/nologo /subsystem:console /debug /machine:I386 /pdbtype:sept /incremental:no

CFLAGS_RELEASE=/nologo /GX /GR /FD /Zm200 /ML /O2 /D "NDEBUG"
LDFLAGS_RELEASE=/nologo /subsystem:console /machine:I386 /pdbtype:sept /incremental:no

# LIB_SUFFIX is either .lib or .dll
LIB_SUFFIX=.lib

HAVE_DLOPEN=0

!if "$(WITH_PARSIM)"=="yes"
CFLAGS=$(CFLAGS) /DWITH_PARSIM
!endif

!if "$(WITH_NETBUILDER)"=="yes"
CFLAGS=$(CFLAGS) /DWITH_NETBUILDER
!endif

CFLAGS=$(CFLAGS) /DNO_CONST  /DUSE_CMDENV_HEAPDEBUG
