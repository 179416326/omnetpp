//
// XXX Experimental property descriptors for the simkernel classes.
// Usage: opp_msgc -Xnc -Xns sim_std.ins
//

cplusplus {{
// function to reference from outside, to force linker include this file
void std_sim_descriptor_dummy() {}
}}

class cObject
{
    properties:
        omitGetVerb = true;
    fields:
        string name;
        string fullName;
        string fullPath;
        string info;
        string detailedInfo;
};

//
// NOTE: we lie a bit about the inheritance hierarchy, and hide cNoncopyableObject
// and cDefaultList. They are too internal to be displayed on the GUI.
//

//class cNoncopyableObject extends cObject
//{
//};

//class cDefaultList extends cNoncopyableObject
//{
//    properties:
//        omitGetVerb = true;
//    fields:
//        int defaultListItems;
//};

class cComponent extends cObject //really: cDefaultList
{
    properties:
        omitGetVerb = true;
    fields:
        bool isModule;
        int params;
};

class cChannel extends cComponent
{
};

class cBasicChannel extends cChannel
{
    properties:
        omitGetVerb = true;
    fields:
        double delay;
        double error;
        double datarate;
        bool disabled;
        bool isBusy;
        simtime_t transmissionFinishes;
};

class cModule extends cComponent
{
    properties:
        omitGetVerb = true;
    fields:
        int id;
        bool isSimple;
        bool isVector;
        int index;
        int size;
        int gates;
};

class cSimpleModule extends cModule
{
    properties:
        omitGetVerb = true;
    fields:
        bool usesActivity;
        bool isTerminated;
        unsigned int stackSize;
        unsigned int stackUsage;
};

class cCompoundModule extends cModule
{
};

class cArray extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int items;
        bool takeOwnership;
};


class cComponentType extends cObject //really: cNoncopyableObject
{
};

class cModuleType extends cComponentType
{
    properties:
        omitGetVerb = true;
    fields:
        bool isNetwork;
};

class cChannelType extends cComponentType
{
};

//----

class cGate extends cObject //really: cNoncopyableObject
{
    properties:
        omitGetVerb = true;
    fields:
        char type;
        int id;
        bool isVector;
        int index;
        bool isBusy;
        simtime_t transmissionFinishes;
        bool isConnectedOutside;
        bool isConnectedInside;
        bool isConnected;
        bool isRouteOK;
};

class cMessage extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        bool isSelfMessage;
        bool isScheduled;
        int kind;
        int priority;
        long length;
        long byteLength;
        bool hasBitError;
        simtime_t creationTime;
        simtime_t sendingTime;
        simtime_t arrivalTime;
        simtime_t timestamp;
        int senderModuleId;
        int senderGateId;
        int arrivalModuleId;
        int arrivalGateId;
        //XXX cMessage *encapsulatedMsg;
};

class cMessagePar extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        bool takeOwnership;
        char type;
        bool isNumeric;
        bool isConstant;
        bool isInput;
};

class cPacket extends cMessage
{
    properties:
        omitGetVerb = true;
    fields:
        short protocol;
        short pdu;
};

//----

class cStatistic extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        long samples;
        double weights;
        double sum;
        double sqrSum;
        double min;
        double max;
        double mean;
        double stddev;
        double variance;
};

class cStdDev extends cStatistic
{
};

class cWeightedStdDev extends cStdDev
{
};

class cDensityEstBase extends cStdDev
{
    properties:
        omitGetVerb = true;
    fields:
        bool transformed;
        int cells;
        unsigned long underflowCell;
        unsigned long overflowCell;
};

class cHistogramBase extends cDensityEstBase
{
    properties:
        omitGetVerb = true;
    fields:
        int cells;
};

class cEqdHistogramBase extends cHistogramBase
{
};

class cVarHistogram extends cHistogramBase
{
};

class cLongHistogram extends cEqdHistogramBase
{
};

class cDoubleHistogram extends cEqdHistogramBase
{
};

class cKSplit extends cDensityEstBase
{
};

class cPSquare extends cDensityEstBase
{
};

class cTransientDetection extends cObject
{
};

class cAccuracyDetection extends cObject
{
};

class cTDExpandingWindows extends cTransientDetection
{
};

class cADByStddev extends cAccuracyDetection
{
};

//----

class cExpression extends cPolymorphic
{
    properties:
        omitGetVerb = true;
    fields:
        //XXX string toString;
};

class cFSM extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int state;
        string stateName;
};

class cMathFunction extends cObject //really: cNoncopyableObject
{
    properties:
        omitGetVerb = true;
    fields:
        int numArgs;
};

class cNEDFunction extends cObject //really: cNoncopyableObject
{
    properties:
        omitGetVerb = true;
    fields:
        char returnType;
        int numArgs;
        string argTypes;
};

class cOutVector extends cObject //really: cNoncopyableObject
{
    properties:
        omitGetVerb = true;
    fields:
        bool isEnabled;
        long valuesReceived;
        long valuesStored;
};

class cPar extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        char type;
        bool isNumeric;
        bool isVolatile;
        bool isConstant;
        bool isSet;
        bool hasDefaultValue;
};

class cProperties extends cPolymorphic
{
};

class cProperty extends cPolymorphic
{
    properties:
        omitGetVerb = true;
    fields:
        bool isImplicit;
        short index;
        //XXX const std::vector<const char *>& keys;
};

class cLinkedList extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int length;
};

class cMessageHeap extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int length;
};

class cQueue extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int length;
        bool takeOwnership;
};

class cSimulation extends cObject //really: cNoncopyableObject
{
    properties:
        omitGetVerb = true;
    fields:
        int runNumber;
        simtime_t simTime;
        long eventNumber;
        int contextType;
        int lastModuleId;
};

class cScheduler extends cPolymorphic
{
};

class cSequentialScheduler extends cScheduler
{
};

class cRealTimeScheduler extends cScheduler
{
};

class cTopology extends cObject
{
    properties:
        omitGetVerb = true;
    fields:
        int nodes;
};

class cXMLElement
{
    properties:
        omitGetVerb = true;
    fields:
        string getTagName;  //XXX get rid of "get" somehow -- @label(tagname)?
        string getNodeValue;
        string getSourceLocation;
        bool hasAttributes;
        bool hasChildren;
        //XXX const cXMLAttributeMap& getAttributes;
        //XXX cXMLElementList getChildren;
};



