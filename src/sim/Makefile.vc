#
# Global definitions
#
!include ..\..\configuser.vc

!if "$(LIB_SUFFIX)"==".dll"
CFLAGS=$(CFLAGS) /DWIN32_DLL
!endif

#
# Local definitions
#
COPTS=$(CFLAGS) /I "$(OMNETPP_INCL_DIR)" /I. /I "std" /I "pvm" /DBUILDING_SIM
CPPOBJS= task.obj ccoroutine.obj ctypes.obj carray.obj cgate.obj cmodule.obj csimul.obj cobject.obj cpar.obj \
         cstat.obj chist.obj cdensity.obj cvarhist.obj cpsquare.obj cksplit.obj \
         cmessage.obj cdetect.obj cstk.obj util.obj cllist.obj ctopo.obj errmsg.obj \
         cmsgheap.obj cnetmod.obj coutvect.obj cqueue.obj chead.obj cwatch.obj \
         cpacket.obj cfsm.obj cstruct.obj cchannel.obj cenum.obj cexception.obj cdispstr.obj \
         onstartup.obj random.obj distrib.obj
CPPOBJS_STD= std\netpack.obj
CPPOBJS_PVM= pvm\pvmmod.obj pvm/pvmpack.obj
CPPOBJS_MPI= mpi\mpimod.obj mpi/mpipack.obj
LIBS= $(OMNETPP_SRC_DIR)/envir/envir.ilib

#
# Targets
#
default : sim_std $(SIM_PVM_IF_POSSIBLE) $(SIM_MPI_IF_POSSIBLE)

sim_std : sim_std$(LIB_SUFFIX)

sim_pvm : sim_pvm$(LIB_SUFFIX)

sim_std.lib : $(CPPOBJS) $(CPPOBJS_STD)
	$(AR) /nologo /out:sim_std.lib $(CPPOBJS) $(CPPOBJS_STD)
	copy sim_std.lib $(OMNETPP_LIB_DIR:/=\)

sim_std.dll : $(CPPOBJS) $(CPPOBJS_STD) $(LIBS)
	$(SHLIB_LD) /nologo /out:sim_std.dll /implib:sim_std.ilib /subsystem:console /def:sim_std.def $(CPPOBJS) $(CPPOBJS_STD) $(LIBS)
	copy sim_std.dll $(OMNETPP_LIB_DIR:/=\)
	copy sim_std.ilib $(OMNETPP_LIB_DIR:/=\)

sim_pvm.lib : $(CPPOBJS) $(CPPOBJS_PVM)
	$(AR) /nologo /out:sim_pvm.lib $(CPPOBJS) $(CPPOBJS_PVM)
	copy sim_pvm.lib $(OMNETPP_LIB_DIR:/=\)

sim_mpi.lib : $(CPPOBJS) $(CPPOBJS_MPI)
	$(AR) /nologo /out:sim_mpi.lib $(CPPOBJS) $(CPPOBJS_MPI)
	copy sim_mpi.lib $(OMNETPP_LIB_DIR:/=\)

#TBD: sim_pvm.dll sim_mpi.dll

ccoroutine.obj : ccoroutine.cc
	$(CXX) $(COPTS) /c /Tp ccoroutine.cc

task.obj : task.cc
	$(CXX) $(COPTS) /c /Tp task.cc

ctypes.obj : ctypes.cc
	$(CXX) $(COPTS) /c /Tp ctypes.cc

carray.obj : carray.cc
	$(CXX) $(COPTS) /c /Tp carray.cc

cqueue.obj : cqueue.cc
	$(CXX) $(COPTS) /c /Tp cqueue.cc

chead.obj : chead.cc
	$(CXX) $(COPTS) /c /Tp chead.cc

cwatch.obj : cwatch.cc
	$(CXX) $(COPTS) /c /Tp cwatch.cc

cmodule.obj : cmodule.cc
	$(CXX) $(COPTS) /c /Tp cmodule.cc

csimul.obj : csimul.cc
	$(CXX) $(COPTS) /c /Tp csimul.cc

cgate.obj : cgate.cc
	$(CXX) $(COPTS) /c /Tp cgate.cc

cmessage.obj : cmessage.cc
	$(CXX) $(COPTS) /c /Tp cmessage.cc

cpacket.obj : cpacket.cc
	$(CXX) $(COPTS) /c /Tp cpacket.cc

cfsm.obj : cfsm.cc
	$(CXX) $(COPTS) /c /Tp cfsm.cc

cobject.obj : cobject.cc
	$(CXX) $(COPTS) /c /Tp cobject.cc

cpar.obj : cpar.cc
	$(CXX) $(COPTS) /c /Tp cpar.cc

cstat.obj : cstat.cc
	$(CXX) $(COPTS) /c /Tp cstat.cc

cdensity.obj : cdensity.cc
	$(CXX) $(COPTS) /c /Tp cdensity.cc

chist.obj : chist.cc
	$(CXX) $(COPTS) /c /Tp chist.cc

cvarhist.obj : cvarhist.cc
	$(CXX) $(COPTS) /c /Tp cvarhist.cc

cdetect.obj : cdetect.cc
	$(CXX) $(COPTS) /c /Tp cdetect.cc

cpsquare.obj : cpsquare.cc
	$(CXX) $(COPTS) /c /Tp cpsquare.cc

cksplit.obj : cksplit.cc
	$(CXX) $(COPTS) /c /Tp cksplit.cc

cmsgheap.obj : cmsgheap.cc
	$(CXX) $(COPTS) /c /Tp cmsgheap.cc

cnetmod.obj : cnetmod.cc
	$(CXX) $(COPTS) /c /Tp cnetmod.cc

cllist.obj : cllist.cc
	$(CXX) $(COPTS) /c /Tp cllist.cc

ctopo.obj : ctopo.cc
	$(CXX) $(COPTS) /c /Tp ctopo.cc

coutvect.obj : coutvect.cc
	$(CXX) $(COPTS) /c /Tp coutvect.cc

cstk.obj : cstk.cc
	$(CXX) $(COPTS) /c /Tp cstk.cc

cstruct.obj: cstruct.cc
	$(CXX) $(COPTS) /c /Tp cstruct.cc

cchannel.obj: cchannel.cc
	$(CXX) $(COPTS) /c /Tp cchannel.cc

cdispstr.obj: cdispstr.cc
	$(CXX) $(COPTS) /c /Tp cdispstr.cc

cenum.obj: cenum.cc
	$(CXX) $(COPTS) /c /Tp cenum.cc

cexception.obj: cexception.cc
	$(CXX) $(COPTS) /c /Tp cexception.cc

onstartup.obj: onstartup.cc
	$(CXX) $(COPTS) /c /Tp onstartup.cc

random.obj: random.cc
	$(CXX) $(COPTS) /c /Tp random.cc

distrib.obj: distrib.cc
	$(CXX) $(COPTS) /c /Tp distrib.cc

util.obj : util.cc
	$(CXX) $(COPTS) /c /Tp util.cc

errmsg.obj : errmsg.cc
	$(CXX) $(COPTS) /c /Tp errmsg.cc

std\netpack.obj : std\netpack.cc
	$(CXX) /Fo"std\netpack.obj" $(COPTS) /c /Tp std\netpack.cc

mpi\mpipack.obj : mpi\mpipack.cc
	$(CXX) $(MPI_CFLAGS) /Fo"mpi\mpipack.obj" $(COPTS) /c /Tp mpi\mpipack.cc

mpi\mpimod.obj : mpi\mpimod.cc
	$(CXX) $(MPI_CFLAGS) /Fo"mpi\mpimod.obj" $(COPTS) /c /Tp mpi\mpimod.cc

pvm\pvmpack.obj : pvm\pvmpack.cc
	$(CXX) $(PVM_CFLAGS) /Fo"pvm\pvmpack.obj" $(COPTS) /c /Tp pvm\pvmpack.cc

pvm\pvmmod.obj : pvm\pvmmod.cc
	$(CXX) $(PVM_CFLAGS) /Fo"pvm\pvmmod.obj" $(COPTS) /c /Tp pvm\pvmmod.cc

missing-pvm-library:
	@ echo *** No PVM installation -- skipping sim_pvm

missing-mpi-library:
	@ echo *** No MPI installation -- skipping sim_mpi

depend:
	$(MAKEDEPEND) -I../../include -fMakefile.vc -- *.cc std/*.cc pvm/*.cc mpi/*.cc

clean:
	-del *.obj
	-del sim_std.lib sim_std.dll sim_std.ilib sim_std.exp std\*.obj 2> nul
	-del sim_pvm.lib sim_pvm.dll sim_pvm.ilib sim_pvm.exp pvm\*.obj 2> nul
	-del *.ilk *.idb *.pdb *.pch 2> nul


# DO NOT DELETE THIS LINE -- make depend depends on it.
*.obj: *.cc
std/*.obj: std/*.cc
pvm/*.obj: pvm/*.cc
mpi/*.obj: mpi/*.cc
