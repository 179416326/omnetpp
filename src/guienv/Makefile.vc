#
# Global definitions
#
!include ..\..\configuser.vc

# Make sure that output locations are set
!if "$(OMNETPP_BIN_DIR)"==""
!error OMNETPP_BIN_DIR must be correctly set
!endif
!if "$(OMNETPP_OUT_DIR)"==""
!error OMNETPP_OUT_DIR must be correctly set
!endif
!if "$(OMNETPP_LIB_DIR)"==""
!error OMNETPP_LIB_DIR must be correctly set
!endif

#XXX should come from configuser.vc
#TODO: in the released source, don't run swig (except via an explicit target)
GUIENV_IF_POSSIBLE = guienv
SWIG = "$(TOOLS_DIR)\SWIGWIN-1.3.38\swig.exe"
JDK = "$(TOOLS_DIR)\jdk1.5.0"
JAVA_CFLAGS = -I"$(JDK)\include" -I"$(JDK)\include\win32"

#
# Local definitions
#
LIBNAME=oppguienv$D
O=$(OMNETPP_OUT_DIR)/$(TOOLCHAIN_NAME)-$(MODE)/src/guienv
L=$(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)

COPTS=$(CFLAGS) -I$(OMNETPP_INCL_DIR) -I$(OMNETPP_INCL_DIR)/platdep -I../common -I../envir -I../nedxml -I../layout -I../eventlog $(JAVA_CFLAGS) /Fd"$O/$(LIBNAME).pdb"

IMPLIBS= $O/../sim/oppsim$D.lib $O/../envir/oppenvir$D.lib $O/../layout/opplayout$D.lib $O/../common/oppcommon$D.lib

OBJS = $O/simkernel_wrap.obj $O/registernatives.obj \
       $O/visitor.obj $O/jutil.obj $O/logbuffer.obj $O/logbufferview.obj \
       $O/jcallback.obj $O/guienv.obj $O/wrappertable.obj

!if "$(LIB_SUFFIX)"==".dll"
COPTS= $(COPTS) -DGUIENV_EXPORT
!endif

JAVAPKG = org.omnetpp.runtime.nativelibs.simkernel
JAVADIR = $(OMNETPP_UI_DIR)/org.omnetpp.runtime.nativelibs/src/$(JAVAPKG:.=\)

JAVA_COBJECTS = \
    cAccuracyDetection.java cADByStddev.java cArray.java cChannel.java \
    cChannelType.java cClassDescriptor.java cClassFactory.java cComponent.java \
    cComponentType.java cCompoundModule.java cConfigOption.java \
    cConfiguration.java cConfigurationEx.java cDatarateChannel.java \
    cDefaultList.java cDelayChannel.java cDensityEstBase.java cDoubleHistogram.java \
    cEnum.java cEqdHistogramBase.java cFSM.java cGate.java cHistogramBase.java \
    cIdealChannel.java cLongHistogram.java cMathFunction.java cMessage.java \
    cMessageHeap.java cModule.java cModuleType.java cMsgPar.java \
    cNamedObject.java cNEDFunction.java cNoncopyableOwnedObject.java \
    cObject.java cOutVector.java cOwnedObject.java cPacket.java cPar.java \
    cProperties.java cProperty.java cPSquare.java cQueue.java \
    cRegistrationList.java cSimpleModule.java \
    cSimulation.java cStatistic.java cStdDev.java cStdVectorWatcherBase.java \
    cTDExpandingWindows.java cTopology.java cTransientDetection.java \
    cVarHistogram.java cWatchBase.java cWatch_bool.java \
    cWatch_char.java cWatch_cObject.java cWatch_cObjectPtr.java \
    cWatch_stdstring.java cWatch_uchar.java cWeightedStdDev.java

#
# Automatic rules
#
.SUFFIXES : .cc

{.}.cc{$O}.obj:
	$(CXX) /Fo"$@" $(COPTS) /c /Tp $<

{.}.cxx{$O}.obj:
	$(CXX) /Fo"$@" $(COPTS) /c /Tp $<

#
# Targets
#
all: $(GUIENV_IF_POSSIBLE)

guienv : $O/$(LIBNAME)$(LIB_SUFFIX)

$O/$(LIBNAME).lib : $(OBJS) $L
	$(AR) /out:"$@" $(OBJS)
	copy $(O:/=\)\$(LIBNAME).lib $(L:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 2>nul

$O/$(LIBNAME).dll : $(OBJS) $L
	$(SHLIB_LD) /out:"$@" /subsystem:console $(OBJS) $(IMPLIBS)
	copy $(O:/=\)\$(LIBNAME).dll $(OMNETPP_BIN_DIR:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).dll.manifest $(OMNETPP_BIN_DIR:/=\) 2>nul
	copy $(O:/=\)\$(LIBNAME).lib $(L:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 2>nul

simkernel_wrap.cxx registernatives.cc : *.i *.h Makefile.vc $(OMNETPP_ROOT)/include/*.h  # and many other things
	-rd /s/q $(JAVADIR:/=\)
	md $(JAVADIR:/=\)
	$(SWIG) -c++ -java -package $(JAVAPKG) -I$(OMNETPP_ROOT)/include -I$(OMNETPP_ROOT)/src/envir -I$(OMNETPP_ROOT) -outdir $(JAVADIR) simkernel.i
	@:# Patch the generated Java files so that they access swigCPtr via checkZombie() that detects null pointers (see WrapperTable!)
	-@for %%i in ( $(JAVA_COBJECTS) ) do @$(PERL) -i.bak -pe "s!\(swigCPtr, this!(checkZombie(swigCPtr), this!g" $(JAVADIR)\%%i
	-@for %%i in ( $(JAVA_COBJECTS) ) do @$(PERL) -i.bak -pe "s!0 : obj.swigCPtr;!0 : obj.checkZombie(obj.swigCPtr);!g" $(JAVADIR)\%%i
	-del $(JAVADIR:/=\)\*.bak >nul
	@:# Patch the generated simkernel_wrap.cc NOT to export the symbols (because we use registernatives.cc)
	$(PERL) -i.bak -pe "s/SWIGEXPORT +//g" simkernel_wrap.cxx
	$(PERL) -i.bak -pe "s/JNICALL +//g" simkernel_wrap.cxx
	$(PERL) registernatives.pl $(JAVADIR)/SimkernelJNI.java registernatives.cc
	-del simkernel_wrap.cxx.bak

$(OBJS): $O

$O $L:
	md $(@:/=\)

missing-dependency:
	@echo '  *** No JDK installation found, skipping GUIEnv.'
	@echo '  *** Install it, and edit configuser.vc accordingly.'

depend:
	$(MAKEDEPEND) -I../../include -fMakefile.vc -P^$O/ -- *.cc *.cxx

clean:
	-rmdir /s /q $(O:/=\) 2>nul
	-del /q $(L:/=\)\$(LIBNAME).* $(OMNETPP_LIB_DIR:/=\)\$(LIBNAME).* 2>nul

veryclean: clean
	-del /q simkernel_wrap.cxx registernatives.cc


# DO NOT DELETE THIS LINE -- make depend depends on it.

