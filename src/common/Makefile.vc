#
# Global definitions
#
!include ..\..\configuser.vc

# Make sure that output locations are set
!if "$(OMNETPP_BIN_DIR)"==""
!error OMNETPP_BIN_DIR must be correctly set
!endif
!if "$(OMNETPP_OUT_DIR)"==""
!error OMNETPP_OUT_DIR must be correctly set
!endif
!if "$(OMNETPP_LIB_DIR)"==""
!error OMNETPP_LIB_DIR must be correctly set
!endif

#
# Local definitions
#
LIBNAME=oppcommon$D
O=$(OMNETPP_OUT_DIR)/$(OUTPUT_PREFIX)$(TOOLCHAIN_NAME)-$(MODE)/src/common
L=$(OMNETPP_LIB_DIR)/$(OUTPUT_PREFIX)$(TOOLCHAIN_NAME)

COPTS=$(CFLAGS) -I"$(OMNETPP_INCL_DIR)/platdep" -I. /Fd"$O/$(LIBNAME).pdb"
IMPLIBS=

!if "$(BUILDING_UILIBS)"=="yes"
COPTS= $(COPTS) -DTHREADED $(PTHREAD_CFLAGS)
IMPLIBS= $(IMPLIBS) $(PTHREAD_LIBS)
!endif

OBJS= $O/lcgrandom.obj $O/filereader.obj $O/linetokenizer.obj \
      $O/stringpool.obj $O/stringtokenizer.obj $O/fnamelisttokenizer.obj \
      $O/expression.obj $O/lex.expressionyy.obj $O/expression.tab.obj \
      $O/matchexpression.obj $O/matchexpressionlexer.obj $O/matchexpression.tab.obj \
      $O/patternmatcher.obj $O/unitconversion.obj $O/displaystring.obj $O/fileglobber.obj \
      $O/fileutil.obj $O/stringutil.obj $O/commonutil.obj $O/exception.obj $O/bigdecimal.obj \
      $O/enumstr.obj $O/stringtokenizer2.obj

!if "$(BUILDING_UILIBS)"=="yes"
OBJS= $(OBJS) $O/rwlock.obj
!endif

GENERATED_SOURCES= expression.tab.hh expression.tab.cc lex.expressionyy.cc \
                   matchexpression.tab.hh matchexpression.tab.cc

!if "$(LIB_SUFFIX)"==".dll"
COPTS= $(COPTS) -DCOMMON_EXPORT
!endif

#
# Automatic rules
#
.SUFFIXES : .cc

{.}.cc{$O}.obj:
	$(Q)$(CXX) /Fo"$@" $(CXXFLAGS) $(COPTS) /c /Tp $<


#
# Targets
#
all : $O/$(LIBNAME)$(LIB_SUFFIX)

$O/$(LIBNAME).lib : $(OBJS) $L
	@echo Creating LIB: $@
	$(Q)$(AR) /out:"$@" $(OBJS)
	$(Q)copy $(O:/=\)\$(LIBNAME).lib $(L:/=\) 1>nul
	-$(Q)copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 1>nul

$O/$(LIBNAME).dll : $(OBJS) $L
	@echo Creating DLL: $@
	$(Q)$(SHLIB_LD) /out:"$@" /subsystem:console $(OBJS) $(IMPLIBS) $(LDFLAGS)
	$(Q)copy $(O:/=\)\$(LIBNAME).dll $(OMNETPP_BIN_DIR:/=\) 1>nul
	-$(Q)copy /b $(O:/=\)\$(LIBNAME).dll.manifest $(OMNETPP_BIN_DIR:/=\) 1>nul
	$(Q)copy $(O:/=\)\$(LIBNAME).lib $(L:/=\) 1>nul
	-$(Q)copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 1>nul

expression.tab.hh expression.tab.cc : expression.y
	$(qecho) YACC: $@
	$(Q)$(YACC:/=\) -o expression.tab.cc -p expressionyy -d expression.y

lex.expressionyy.cc: expression.lex
	$(qecho) LEX: $@
	$(Q)$(LEX:/=\) -olex.expressionyy.cc -Pexpressionyy expression.lex
	$(Q)$(FIXFLEX) lex.expressionyy.cc

matchexpression.tab.hh matchexpression.tab.cc : matchexpression.y
	$(qecho) YACC: $@
	$(Q)$(YACC:/=\) -o matchexpression.tab.cc --no-lines -p matchexpressionyy -d matchexpression.y

$(OBJS): $O

$O $L:
	@md $(@:/=\)

doc:
	@echo Generating documentation...
	$(Q)$(DOXYGEN:/=\) doxy.cfg

depend: $(GENERATED_SOURCES)
	$(qecho) Creating dependencies...
	$(Q)$(MAKEDEPEND) -I. -fMakefile.vc -P^$O/ -- *.cc

clean:
	$(qecho) Cleaning...
	-$(Q)del /q $(GENERATED_SOURCES) 2>nul
	-$(Q)rmdir /s /q $(O:/=\) 2>nul
	-$(Q)del /q $(L:/=\)\$(LIBNAME).* $(OMNETPP_LIB_DIR:/=\)\$(LIBNAME).* 2>nul

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/bigdecimal.obj: bigdecimal.cc \
  bigdecimal.h \
  exception.h \
  opp_ctype.h \
  commondefs.h \
  commonutil.h
$O/commonutil.obj: commonutil.cc \
  exception.h \
  commondefs.h \
  commonutil.h
$O/displaystring.obj: displaystring.cc \
  stringutil.h \
  exception.h \
  opp_ctype.h \
  commonutil.h \
  commondefs.h \
  displaystring.h
$O/enumstr.obj: enumstr.cc \
  enumstr.h \
  commondefs.h
$O/exception.obj: exception.cc \
  exception.h \
  commondefs.h \
  commonutil.h
$O/expression.obj: expression.cc \
  expressionyydefs.h \
  unitconversion.h \
  stringutil.h \
  expression.h \
  stringpool.h \
  exception.h \
  commondefs.h \
  commonutil.h
$O/expression.tab.obj: expression.tab.cc \
  expressionyydefs.h \
  unitconversion.h \
  stringutil.h \
  expression.h \
  stringpool.h \
  exception.h \
  commondefs.h \
  commonutil.h
$O/fileglobber.obj: fileglobber.cc \
  fileglobber.h \
  commondefs.h
$O/filereader.obj: filereader.cc \
  filereader.h \
  exception.h \
  commondefs.h \
  commonutil.h
$O/fileutil.obj: fileutil.cc \
  exception.h \
  fileutil.h \
  opp_ctype.h \
  commondefs.h \
  stringtokenizer.h
$O/fnamelisttokenizer.obj: fnamelisttokenizer.cc \
  fnamelisttokenizer.h \
  exception.h \
  commondefs.h \
  commonutil.h
$O/lcgrandom.obj: lcgrandom.cc \
  lcgrandom.h \
  exception.h \
  commondefs.h
$O/lex.expressionyy.obj: lex.expressionyy.cc \
  expressionyydefs.h \
  expression.h \
  stringutil.h \
  stringpool.h \
  exception.h \
  commonutil.h \
  commondefs.h \
  expression.tab.hh
$O/linetokenizer.obj: linetokenizer.cc \
  linetokenizer.h \
  exception.h \
  commondefs.h
$O/matchexpression.obj: matchexpression.cc \
  exception.h \
  patternmatcher.h \
  commondefs.h \
  commonutil.h \
  matchexpression.h
$O/matchexpression.tab.obj: matchexpression.tab.cc \
  exception.h \
  matchexpressionlexer.h \
  patternmatcher.h \
  commondefs.h \
  matchexpression.h
$O/matchexpressionlexer.obj: matchexpressionlexer.cc \
  matchexpression.tab.hh \
  stringutil.h \
  exception.h \
  matchexpressionlexer.h \
  commondefs.h \
  commonutil.h
$O/patternmatcher.obj: patternmatcher.cc \
  stringutil.h \
  exception.h \
  patternmatcher.h \
  opp_ctype.h \
  commonutil.h \
  commondefs.h
$O/rwlock.obj: rwlock.cc \
  exception.h \
  commondefs.h \
  rwlock.h
$O/stringpool.obj: stringpool.cc \
  stringpool.h \
  commondefs.h
$O/stringtokenizer.obj: stringtokenizer.cc \
  commondefs.h \
  stringtokenizer.h
$O/stringtokenizer2.obj: stringtokenizer2.cc \
  exception.h \
  commondefs.h \
  commonutil.h \
  stringtokenizer2.h
$O/stringutil.obj: stringutil.cc \
  stringutil.h \
  exception.h \
  opp_ctype.h \
  commondefs.h \
  stringtokenizer.h \
  commonutil.h
$O/unitconversion.obj: unitconversion.cc \
  unitconversion.h \
  stringutil.h \
  exception.h \
  opp_ctype.h \
  commonutil.h \
  commondefs.h
