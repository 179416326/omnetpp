<!--
**
** OMNeT++/OMNEST Network Description v2 (NED2)
**
-->

<!ELEMENT files ((ned-file|msg-file)*)>

<!--
  **  NED-2.
  -->

<!ELEMENT ned-file (comment*, (import|property-decl|property|channel|
                    channel-interface|simple-module|compound-module|module-interface)*)>
<!ATTLIST ned-file
     filename           CDATA     #REQUIRED
     version            CDATA     #IMPLIED
     package            CDATA     #IMPLIED>

<!-- comments and whitespace; comments include '//' marks. Note that although
     nearly all elements may contain comment elements, there are places
     (e.g. within expressions) where they are ignored by actual code.
     Default value is a space or a newline, depending on the context.
 -->
<!ELEMENT comment EMPTY>
<!ATTLIST comment
     locid              NMTOKEN   #REQUIRED
     content            CDATA     #IMPLIED>

<!ELEMENT import (comment*)>
<!ATTLIST import
     filename           CDATA     #REQUIRED>

<!ELEMENT property-decl (comment*, property-key*, property*)>
<!ATTLIST property-decl
     name               NMTOKEN   #REQUIRED
     is-array           (true|false) "false">

<!ELEMENT extends (comment*)>
<!ATTLIST extends
     name               NMTOKEN   #REQUIRED>

<!ELEMENT interface-name (comment*)>
<!ATTLIST interface-name
     name               NMTOKEN   #REQUIRED>

<!ELEMENT simple-module (comment*, extends?, interface-name*, parameters?, gates?)>
<!ATTLIST simple-module
     name               NMTOKEN   #REQUIRED
     is-network         (true|false) "false">

<!ELEMENT module-interface (comment*, extends*, parameters?, gates?)>
<!ATTLIST module-interface
     name               NMTOKEN   #REQUIRED>

<!ELEMENT compound-module (comment*, extends?, interface-name*,
                           parameters?, gates?, types?, submodules?, connections?)>
<!ATTLIST compound-module
     name               NMTOKEN   #REQUIRED
     is-network         (true|false) "false">

<!ELEMENT channel-interface (comment*, extends*, parameters?)>
<!ATTLIST channel-interface
     name                NMTOKEN   #REQUIRED>

<!-- if there is no "extends", it defaults to "BasicChannel" -->
<!ELEMENT channel (comment*, extends?, interface-name*, parameters?)>
<!ATTLIST channel
     is-withcppclass     (true|false)  "false"
     name                NMTOKEN   #REQUIRED>

<!ELEMENT parameters (comment*, (property|param|pattern)*)>
<!ATTLIST parameters
    is-implicit         (true|false)  "false">

<!ELEMENT param (comment*, expression?, property*)>
<!ATTLIST param
     type               (double|int|string|bool|xml) #IMPLIED
     is-volatile        (true|false)  "false"
     name               NMTOKEN   #REQUIRED
     value              CDATA     #IMPLIED
     is-default         (true|false)  "false">

<!ELEMENT pattern (comment*, expression?, property*)>
<!ATTLIST pattern
     pattern            CDATA     #REQUIRED
     value              CDATA     #IMPLIED
     is-default         (true|false)  "false">

<!ELEMENT property (comment*, property-key*)>
<!ATTLIST property
     is-implicit        (true|false) "false"
     name               NMTOKEN   #REQUIRED
     index              NMTOKEN   #IMPLIED>

<!ELEMENT property-key (comment*, literal*)>
<!ATTLIST property-key
     name               CDATA     #IMPLIED>

<!ELEMENT gates (comment*, gate*)>

<!ELEMENT gate (comment*, expression?, property*)>
<!ATTLIST gate
     name               NMTOKEN   #REQUIRED
     type               (input|output|inout) #IMPLIED
     is-vector          (true|false) "false"
     vector-size        CDATA     #IMPLIED>

<!ELEMENT types (comment*, (channel|channel-interface|simple-module|
                               compound-module|module-interface)*)>

<!ELEMENT submodules (comment*, submodule*)>

<!ELEMENT submodule (comment*, expression*, parameters?, gates?)>
<!ATTLIST submodule
     name               NMTOKEN   #REQUIRED
     type               NMTOKEN   #IMPLIED
     like-type          NMTOKEN   #IMPLIED
     like-any           (true|false) "false" <!-- set if "like *" -->
     like-param         CDATA     #IMPLIED
     vector-size        CDATA     #IMPLIED>

<!ELEMENT connections (comment*, (connection|connection-group)*)>
<!ATTLIST connections
     allow-unconnected (true|false) "false">

<!ELEMENT connection (comment*, expression*, channel-spec?, (loop|condition)*)>
<!ATTLIST connection
     src-module          NMTOKEN   #IMPLIED
     src-module-index    CDATA     #IMPLIED
     src-gate            NMTOKEN   #REQUIRED
     src-gate-plusplus  (true|false) "false"
     src-gate-index      CDATA     #IMPLIED
     src-gate-subg       (i|o)     #IMPLIED
     dest-module         NMTOKEN   #IMPLIED
     dest-module-index   CDATA     #IMPLIED
     dest-gate           NMTOKEN   #REQUIRED
     dest-gate-plusplus (true|false) "false"
     dest-gate-index     CDATA     #IMPLIED
     dest-gate-subg      (i|o)     #IMPLIED
     arrow-direction    (l2r|r2l|bidir) #REQUIRED>

<!ELEMENT channel-spec (comment*, expression*, parameters?)>
<!ATTLIST channel-spec
     type               NMTOKEN   #IMPLIED
     like-type          NMTOKEN   #IMPLIED
     like-any           (true|false) "false" <!-- set if "like *" -->
     like-param         CDATA     #IMPLIED>

<!ELEMENT connection-group (comment*, (loop|condition)*, connection*)>

<!ELEMENT loop (comment*, expression*)>
<!ATTLIST loop
     param-name          NMTOKEN   #REQUIRED
     from-value          CDATA     #IMPLIED
     to-value            CDATA     #IMPLIED>

<!ELEMENT condition (comment*, expression?)>
<!ATTLIST condition
     condition           CDATA     #IMPLIED>

<!--
  **  Expressions
  -->

<!ELEMENT expression (comment*, (operator|function|ident|literal))>
<!ATTLIST expression
     target              CDATA     #IMPLIED>

<!ELEMENT operator (comment*, (operator|function|ident|literal)+)>
<!ATTLIST operator
     name                CDATA     #REQUIRED>

<!ELEMENT function (comment*, (operator|function|ident|literal)*)>
<!ATTLIST function
     name                NMTOKEN   #REQUIRED>

<!-- Ident is either a parameter reference or an identifier for 'sizeof' operator
     format is 'name' or 'module.name' or 'module[n].name'
-->
<!ELEMENT ident (comment*, expression*)>
<!ATTLIST ident
     module              CDATA     #IMPLIED
     module-index        CDATA     #IMPLIED
     name                NMTOKEN   #REQUIRED>


<!ELEMENT literal (comment*)>
<!-- Note: value is in fact REQUIRED, but empty attr value should
     also be accepted because that represents the "" string literal;
     "spec" is for properties, to store the null value and "-",
     the antivalue.
 -->
<!ATTLIST literal
     type  (double|int|string|bool|unit|spec)  #REQUIRED
     unit-type           CDATA     #IMPLIED
     text                CDATA     #IMPLIED
     value               CDATA     #IMPLIED>

<!--**********************************************************************-->

<!--
**
** OMNeT++/OMNEST Message Definitions (MSG)
**
-->

<!ELEMENT msg-file (comment*, (cplusplus|struct-decl|class-decl|message-decl|enum-decl|
                     enum|message|class|struct)*)>

<!ATTLIST msg-file
     filename            CDATA     #IMPLIED
     package             CDATA     #IMPLIED >

<!ELEMENT cplusplus (comment*)>
<!ATTLIST cplusplus
     body                CDATA     #REQUIRED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!-- C++ type announcements -->

<!ELEMENT struct-decl (comment*)>
<!ATTLIST struct-decl
     name                NMTOKEN   #REQUIRED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT class-decl (comment*)>
<!ATTLIST class-decl
     name                NMTOKEN   #REQUIRED
     is-cobject      (true|false)  "false"
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT message-decl (comment*)>
<!ATTLIST message-decl
     name                NMTOKEN   #REQUIRED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT enum-decl (comment*)>
<!ATTLIST enum-decl
     name                NMTOKEN   #REQUIRED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!-- Enums -->

<!ELEMENT enum (comment*, enum-fields?)>
<!ATTLIST enum
     name                NMTOKEN   #REQUIRED
     extends-name        NMTOKEN   #IMPLIED
     source-code         CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT enum-fields (comment*, enum-field*)>
<!ATTLIST enum-fields
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!ELEMENT enum-field (comment*)>
<!ATTLIST enum-field
     name                NMTOKEN   #REQUIRED
     value               CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!-- Message, class, struct -->

<!ELEMENT message (comment*, properties?, fields?)>
<!ATTLIST message
     name                NMTOKEN   #REQUIRED
     extends-name        NMTOKEN   #IMPLIED
     source-code         CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT class (comment*, properties?, fields?)>
<!ATTLIST class
     name                NMTOKEN   #REQUIRED
     extends-name        NMTOKEN   #IMPLIED
     source-code         CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT struct (comment*, properties?,fields?)>
<!ATTLIST struct
     name                NMTOKEN   #REQUIRED
     extends-name        NMTOKEN   #IMPLIED
     source-code         CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;"
     trailing-comment    CDATA     "&#10;" >

<!ELEMENT fields (comment*, field*)>
<!ATTLIST fields
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!ELEMENT field (comment*)>
<!ATTLIST field
     name                NMTOKEN   #REQUIRED
     data-type           CDATA     #IMPLIED
     is-abstract     (true|false)  "false"
     is-readonly     (true|false)  "false"
     is-vector       (true|false)  "false"
     vector-size         CDATA     #IMPLIED
     enum-name           NMTOKEN   #IMPLIED
     default-value       CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!ELEMENT properties (comment*, msgproperty*)>
<!ATTLIST properties
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!ELEMENT msgproperty (comment*)>
<!ATTLIST msgproperty
     name                NMTOKEN   #REQUIRED
     value               CDATA     #IMPLIED
     banner-comment      CDATA     #IMPLIED
     right-comment       CDATA     "&#10;" >

<!--
  **  'unknown' is used internally to represent elements not in this NED DTD
  -->
<!ELEMENT unknown        ANY>
<!ATTLIST unknown
     element             NMTOKEN   #REQUIRED>


