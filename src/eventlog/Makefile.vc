#
# Global definitions
#
!include ..\..\configuser.vc

# Make sure that output locations are set
!if "$(OMNETPP_BIN_DIR)"==""
!error OMNETPP_BIN_DIR must be correctly set
!endif
!if "$(OMNETPP_OUT_DIR)"==""
!error OMNETPP_OUT_DIR must be correctly set
!endif
!if "$(OMNETPP_LIB_DIR)"==""
!error OMNETPP_LIB_DIR must be correctly set
!endif

#
# Local definitions
#
LIBNAME=eventlog$D
O=$(OMNETPP_OUT_DIR)/$(TOOLCHAIN_NAME)-$(MODE)/src/eventlog
L=$(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)

COPTS= $(CFLAGS) -I. -I../common -I"$(OMNETPP_INCL_DIR)/platdep" /Fd"$O/$(LIBNAME).pdb"
IMPLIBS= $O/../common/common$D.lib

OBJS= $O/ievent.obj $O/ieventlog.obj $O/eventlogfacade.obj $O/eventlogtablefacade.obj \
      $O/sequencechartfacade.obj $O/eventlog.obj $O/eventlogindex.obj \
      $O/messagedependency.obj $O/event.obj $O/eventlogentry.obj $O/eventlogentries.obj \
      $O/filteredevent.obj $O/filteredeventlog.obj $O/eventlogentryfactory.obj

!if "$(LIB_SUFFIX)"==".dll"
COPTS= $(COPTS) -DEVENTLOG_EXPORT
!endif

#
# Automatic rules
#
.SUFFIXES : .cc

{.}.cc{$O}.obj:
	$(CXX) /Fo"$@" $(COPTS) /c /Tp $<

#
# Targets
#
all : eventlogentries.cc $O/$(LIBNAME)$(LIB_SUFFIX) $O/eventlogtool.exe

eventlogentries.cc eventlogentries.h eventlogfactory.cc : eventlogentries.txt eventlogentries.pl
	$(PERL) eventlogentries.pl >nul

$O/$(LIBNAME).lib : $(OBJS) $L
	$(AR) /out:"$@" $(OBJS)
	copy $(O:/=\)\$(LIBNAME).lib $(L:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 2>nul

$O/$(LIBNAME).dll : $(OBJS) $L
	$(SHLIB_LD) /out:"$@" /subsystem:console $(OBJS) $(IMPLIBS) $(LDFLAGS)
	copy $(O:/=\)\$(LIBNAME).dll $(OMNETPP_BIN_DIR:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).dll.manifest $(OMNETPP_BIN_DIR:/=\) 2>nul
	copy $(O:/=\)\$(LIBNAME).lib $(L:/=\)
	-copy /b $(O:/=\)\$(LIBNAME).pdb $(L:/=\) 2>nul

$O/eventlogtool.exe : $O/eventlogtool.obj $O/$(LIBNAME)$(LIB_SUFFIX)
	$(LINK) $(LDFLAGS) /nologo /out:"$@" $O/eventlogtool.obj $(O:/=\)\$(LIBNAME).lib $(IMPLIBS)
	copy $(O:/=\)\eventlogtool.exe $(OMNETPP_BIN_DIR:/=\)
	-copy $(O:/=\)\eventlogtool.exe.manifest $(OMNETPP_BIN_DIR:/=\) 2>nul

$O/eventlogtool.obj : eventlogtool.cc $O
	@: Note: not in OBJS because eventlogtool.cc must be compiled *without* -DEVENTLOG_EXPORT
	$(CXX) $(CFLAGS) -I. -I../common -I"$(OMNETPP_INCL_DIR)/platdep" /c /Fo"$@" /Tp eventlogtool.cc

$(OBJS) : $O

$O $L:
	md $(@:/=\)

depend:
	$(MAKEDEPEND) -I. -fMakefile.vc -P^$O/ -- *.cc

clean:
	-del -f eventlogentries.cc eventlogentries.h eventlogfactory.cc 2>nul
	-rmdir /s /q $(O:/=\) 2>nul
	-del /q $(L:/=\)\$(LIBNAME).* $(OMNETPP_LIB_DIR:/=\)\$(LIBNAME).* 2>nul
	-cd $(OMNETPP_BIN_DIR:/=\) && del /q eventlogtool.exe* 2>nul

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/event.obj: event.cc \
  event.h \
  eventlog.h \
  eventlogentry.h \
  ievent.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h \
  ieventlog.h \
  eventlogindex.h
$O/eventlog.obj: eventlog.cc \
  eventlog.h \
  event.h \
  ieventlog.h \
  eventlogindex.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h
$O/eventlogentries.obj: eventlogentries.cc \
  event.h \
  eventlogentries.h \
  ievent.h \
  eventlogentry.h \
  messagedependency.h \
  eventlogdefs.h
$O/eventlogentry.obj: eventlogentry.cc \
  eventlog.h \
  eventlogentry.h \
  eventlogentryfactory.h \
  event.h \
  ieventlog.h \
  eventlogindex.h \
  ievent.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h
$O/eventlogentryfactory.obj: eventlogentryfactory.cc \
  event.h \
  eventlogentryfactory.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h
$O/eventlogfacade.obj: eventlogfacade.cc \
  ievent.h \
  ieventlog.h \
  event.h \
  eventlog.h \
  filteredevent.h \
  filteredeventlog.h \
  eventlogfacade.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h \
  eventlogindex.h
$O/eventlogindex.obj: eventlogindex.cc \
  eventlogindex.h \
  eventlogdefs.h
$O/eventlogtablefacade.obj: eventlogtablefacade.cc \
  ievent.h \
  ieventlog.h \
  event.h \
  eventlogtablefacade.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h \
  eventlogfacade.h
$O/eventlogtool.obj: eventlogtool.cc \
  ../utils/ver.h \
  eventlogindex.h \
  eventlog.h \
  filteredeventlog.h \
  eventlogdefs.h \
  event.h \
  ieventlog.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  filteredevent.h
$O/filteredevent.obj: filteredevent.cc \
  event.h \
  filteredevent.h \
  filteredeventlog.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h \
  ieventlog.h \
  eventlog.h \
  eventlogindex.h
$O/filteredeventlog.obj: filteredeventlog.cc \
  filteredeventlog.h \
  eventlogdefs.h \
  ieventlog.h \
  eventlog.h \
  filteredevent.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  event.h \
  eventlogindex.h
$O/ievent.obj: ievent.cc \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h \
  eventlogdefs.h
$O/ieventlog.obj: ieventlog.cc \
  ieventlog.h \
  eventlogdefs.h \
  ievent.h \
  eventlogentry.h \
  eventlogentries.h \
  messagedependency.h
$O/messagedependency.obj: messagedependency.cc \
  eventlogdefs.h \
  ievent.h \
  ieventlog.h \
  eventlogentry.h \
  messagedependency.h \
  eventlogentries.h
$O/sequencechartfacade.obj: sequencechartfacade.cc \
  ievent.h \
  ieventlog.h \
  event.h \
  messagedependency.h \
  sequencechartfacade.h \
  eventlogentry.h \
  eventlogentries.h \
  eventlogdefs.h \
  eventlogfacade.h
