#
# configure.user
#
# This file contains additional input for 'configure'. It is read (sourced)
# during the configuration process. You are free to edit the settings in here.
#
# The settings in this file are all optional in the sense that they all
# have reasonable default values in the configure script.
#

#
# Compiler optimization switches. Choose -O3 for speed, -g for debugging the libs.
# (Note: For maximum debugging info use switch -ggdb or -gstabs+3 when using gcc and gdb)
#
#CFLAGS='-g -Wno-unused'
#CFLAGS='-g -Wall'
CFLAGS='-gstabs+3 -Wall'
#CFLAGS='-O3 -DNDEBUG=1'

# To suppress the 'unused variable' warnings in ned-generated _n.cc files
# -Wno-unused is added to NEDCFLAGS
NEDCFLAGS='-Wno-unused'

#
# Select here whether you want to build static or shared libraries.
# If you change this setting, remember to delete the other set of libraries
# (or at least the soft links from lib/).
# On CYGWIN, only static libraries can be used. The default setting is
# `if-not-cygwin'.
#
#build_shared_libs=yes
build_shared_libs=no

#
# It is possible to have the Tcl files embedded into the compiled OMNeT++
# libraries and executables. This can be useful if you want to ship
# self-contained standalone executables which do not rely on external
# Tcl scripts.
#
# This option is available at present for Tkenv, GNED and Plove.
#
TKENV_EMBED_TCL=no
#TKENV_EMBED_TCL=yes

GNED_EMBED_TCL=no
#GNED_EMBED_TCL=yes

PLOVE_EMBED_TCL=no
#PLOVE_EMBED_TCL=yes

#
# You can explicitly tell 'configure' what compile switches (TK_CFLAGS)
# and linker switches (TK_LIBS) are needed to build an application with Tcl/Tk.
# Normally these settings are autodetected by 'configure', so you only need to
# edit here if autodetection doesn't work.
#
# With gcc, settings typically look like this:
#
# TK_CFLAGS="-I/usr/local/include -fwritable-strings"
# TK_LIBS="-L/usr/local/lib -ltk8.4 -ltcl8.4"
#
# /usr/local/include should be replaced with the directory where tcl.h and tk.h
# live. If they are in two different directories, use two -I switches.
# The '-fwritable-strings' flag is a gcc option Tcl needs.
#
# /usr/local/lib should be replaced with the directory that contains the Tcl/Tk
# library files (something like libtcl84.so, libtk8.4.a etc; search for libtcl*
# and libtk* to find them.) The -l options contain the library names: the
# library file names, with the leading 'lib' and trailing '.so*' or '.a*' cut
# off. Sometimes you need to explicitly link with the X11 libraries too, in that
# case add -lX11 to TK_LIBS.
#
TK_CFLAGS="-I/d/home/tools/Tcl-8.4.1/include -fwritable-strings"
TK_LIBS="-L/d/home/tools/Tcl-8.4.1/lib -ltk84 -ltcl84"

#
# Similar settings for PVM
#
PVM_CFLAGS=
PVM_LIBS=

#
# for MPI
#
MPI_CFLAGS=
MPI_LIBS=

#
# for Expat
#
EXPAT_CFLAGS="-I/d/home/tools/expat-1.95.2/Source/lib"
EXPAT_LIBS="-L/d/home/tools/expat-1.95.2/libs -lexpat"

#
# for LIBXML
#
LIBXML_CFLAGS="-I/d/home/tools/libxml2-2.4.26.win32/include"
LIBXML_LIBS="-L/d/home/tools/libxml2-2.4.26.win32/lib -lxml2 -L/d/home/tools/iconv-1.8.win32/lib -liconv"

#
# for Akaroa
#
AKAROA_CFLAGS="-I/d/home/tools/akaroa-2.7.2/src/include"
AKAROA_LIBS=

#
# You may override the settings below. This is only useful if you have moved
# (or want to move) parts of the OMNeT++ distribution to other places
# in the file system (e.g. libraries to /usr/lib, sim headers to
# /usr/include/omnetpp and so on).
#
# At this point, $OMNETPP_ROOT is already set to something like ${HOME}/omnetpp.
#
OMNETPP_SRC_DIR="$OMNETPP_ROOT/src"
OMNETPP_SAMPLES_DIR="$OMNETPP_ROOT/samples"
OMNETPP_TUTORIAL_DIR="$OMNETPP_ROOT/tutorial"
OMNETPP_BITMAP_PATH=".;./bitmaps;$OMNETPP_ROOT/bitmaps"

OMNETPP_BIN_DIR="$OMNETPP_ROOT/bin"
OMNETPP_INCL_DIR="$OMNETPP_ROOT/include"
OMNETPP_LIB_DIR="$OMNETPP_ROOT/lib"

