#
#  makefile for hcube
#
#  ** This file was automatically generated by the command:
#  makemake -f
#

# Name of simulation executable to be created (-o option)
TARGET = hcube

# User interface (uncomment one) (-u option)
# USERIF_LIBS = $(CMDENV_LIBS)
USERIF_LIBS = $(TKENV_LIBS)
# USERIF_LIBS = $(TVENV_LIBS)

# Uncomment the second line for parallel execution (PVM3) support (-p option):
KERNEL_LIBS = $(STD_KERNEL_LIBS)
# KERNEL_LIBS = $(PVM_KERNEL_LIBS)

# .ned or .h include paths with -I (-I, -r options)
INCLUDE_PATH =

# If you use simple modules from outside this dir, compile them
# and put the names of the .o or .a files here (-x, -r options)
EXRA_OBJS =

# Additional libraries (-l option)
LIBS =

#------------------------------------------------------------------------------

# NOTE: The following variables (paths etc.) are set by the configure script.
#       Any changes you make here will be lost with the next configure.

OMNETPP_ROOT=@OMNETPP_ROOT@
OMNETPP_SRC_DIR=@OMNETPP_SRC_DIR@

CXX=@CXX@
NEDC=@NEDC@
LD=@LD@
AR=@AR@

OMNETPP_INCL_PATH=@OMNETPP_INCL_PATH@
OMNETPP_LIB_PATH=@OMNETPP_LIB_PATH@

TV_LIBS=@TV_LIBS@
X_LIBS=@X_LIBS@
TK_LIBS=@TK_LIBS@
PVM_LIBS=@PVM_LIBS@
SYS_LIBS=@SYS_LIBS@

TV_LIB_PATH=
TK_LIB_PATH=@TK_LIB_PATH@
X_LIB_PATH=@X_LIB_PATH@
PVM_LIB_PATH=@PVM_LIB_PATH@

# User interface libs
CMDENV_LIBS = -lenvir -lcmdenv
TVENV_LIBS = -lenvir -ltvenv $(TV_LIB_PATH) $(TV_LIBS)
TKENV_LIBS = -lenvir -ltkenv $(TK_LIB_PATH) $(TK_LIBS) $(X_LIB_PATH) $(X_LIBS)

# Simulation kernel
STD_KERNEL_LIBS = -lsim_std
PVM_KERNEL_LIBS = -lsim_pvm $(PVM_LIB_PATH) $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS = $(OMNETPP_LIB_PATH) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS)

OMNETPP_INCLUDES=@OMNETPP_INCLUDES@

#------------------------------------------------------------------------------

# Object files from this directory to link
OBJS = gensink_n.o hc_net_n.o hc_rte_n.o hcube_n.o gensink.o hc_rte.o

$(TARGET): $(OBJS) $(EXRA_OBJS) makefile
	$(LD) $(OBJS) $(EXRA_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

gensink_n.o: gensink.h gensink_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) gensink_n.cc

gensink_n.cc: gensink.ned
	$(NEDC) $(INCLUDE_PATH) gensink.ned

hc_net_n.o: hc_net_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) hc_net_n.cc

hc_net_n.cc: hc_net.ned
	$(NEDC) $(INCLUDE_PATH) hc_net.ned

hc_rte_n.o: hc_rte.h hc_rte_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) hc_rte_n.cc

hc_rte_n.cc: hc_rte.ned
	$(NEDC) $(INCLUDE_PATH) hc_rte.ned

hcube_n.o: hcube_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) hcube_n.cc

hcube_n.cc: hcube.ned
	$(NEDC) $(INCLUDE_PATH) hcube.ned

gensink.o: gensink.cc gensink.h hc_rte.h $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) gensink.cc

hc_rte.o: hc_rte.cc gensink.h hc_rte.h $(OMNETPP_INCLUDES)
	$(CXX) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) hc_rte.cc

clean:
	rm -f *.o *_n.cc $(TARGET)
