#
#  Makefile for hcube
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = hcube.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../configuser.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=sim_std.lib
MPI_KERNEL_LIBS=sim_mpi.lib $(MPI_LIBS)
PVM_KERNEL_LIBS=sim_pvm.lib $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# Object files from this directory to link
OBJS= gensink_n.obj hc_net_n.obj hc_rte_n.obj hcube_n.obj hcpacket_m.obj gensink.obj hc_rte.obj

$(TARGET): $(OBJS) $(EXRA_OBJS) Makefile.vc 
	$(LINK) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)

# purify: $(OBJS) $(EXRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

gensink_n.obj: gensink_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp gensink_n.cc

gensink_n.cc: gensink.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) gensink.ned

hc_net_n.obj: hc_net_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp hc_net_n.cc

hc_net_n.cc: hc_net.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) hc_net.ned

hc_rte_n.obj: hc_rte_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp hc_rte_n.cc

hc_rte_n.cc: hc_rte.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) hc_rte.ned

hcube_n.obj: hcube_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp hcube_n.cc

hcube_n.cc: hcube.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) hcube.ned

hcpacket_m.obj: hcpacket_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp hcpacket_m.cc

hcpacket_m.cc: hcpacket.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) hcpacket.msg

gensink.obj: gensink.cc
	$(CXX) -c $(COPTS) /Tp gensink.cc

hc_rte.obj: hc_rte.cc
	$(CXX) -c $(COPTS) /Tp hc_rte.cc


doc: neddoc.html htmldocs

neddoc.html: 
	@opp_neddoc  > neddoc.html
	@echo File neddoc.html generated.

htmldocs:
	@doxygen -g- | sed "s/^PROJECT_NAME.*/PROJECT_NAME = hcube/;\
	s|^INPUT *=.*|INPUT = . |;\
	s/^EXTRACT_ALL *=.*/EXTRACT_ALL = yes/;\
	s/^EXTRACT_PRIVATE *=.*/EXTRACT_PRIVATE = yes/;\
	s/^EXCLUDE_PATTERNS *=.*/EXCLUDE_PATTERNS = *_n.cc *_n.h/;\
	s/^ALPHABETICAL_INDEX *=.*/ALPHABETICAL_INDEX = yes/;\
	s/^HTML_OUTPUT *=.*/HTML_OUTPUT = htmldoc/;\
	s/^GENERATE_LATEX *=.*/GENERATE_LATEX = no/;\
	s/^GENERATE_TREEVIEW *=.*/GENERATE_TREEVIEW = yes/;\
	s/^HIDE_UNDOC_RELATIONS *=.*/HIDE_UNDOC_RELATIONS = no/;\
	s|^TAGFILES *=.*|TAGFILES = $(OMNETPP_ROOT)/doc/api/opptags.xml=$(OMNETPP_ROOT)/doc/api|;\
	s|^GENERATE_TAGFILE *=.*|GENERATE_TAGFILE = htmldoc/tags.xml|;\
	s/^QUIET *=.*/QUIET = yes/" > doxy.cfg
	@doxygen doxy.cfg
	@echo Code documentation generated. Now, point your web browser to ./htmldoc/index.html.

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-del /S neddoc.html htmldoc 2>NUL

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.

