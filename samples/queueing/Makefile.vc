#
#  Makefile for queueing
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = queueing.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../configuser.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= classifier_n.obj delay_n.obj pqueue_n.obj qnet_n.obj server_n.obj sink_n.obj source_n.obj classifier.obj  delay.obj  pqueue.obj   server.obj  sink.obj  source.obj 

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

classifier_n.obj: classifier_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp classifier_n.cpp

classifier_n.cpp: classifier.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) classifier.ned

delay_n.obj: delay_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp delay_n.cpp

delay_n.cpp: delay.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) delay.ned

pqueue_n.obj: pqueue_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp pqueue_n.cpp

pqueue_n.cpp: pqueue.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) pqueue.ned

qnet_n.obj: qnet_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp qnet_n.cpp

qnet_n.cpp: qnet.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) qnet.ned

server_n.obj: server_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp server_n.cpp

server_n.cpp: server.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) server.ned

sink_n.obj: sink_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp sink_n.cpp

sink_n.cpp: sink.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) sink.ned

source_n.obj: source_n.cpp
	$(CXX) -c $(NEDCOPTS) /Tp source_n.cpp

source_n.cpp: source.ned
	$(NEDC:/=\) -s _n.cpp $(INCLUDE_PATH) source.ned

classifier.obj: classifier.cpp
	$(CXX) -c $(COPTS) /Tp classifier.cpp

delay.obj: delay.cpp
	$(CXX) -c $(COPTS) /Tp delay.cpp

pqueue.obj: pqueue.cpp
	$(CXX) -c $(COPTS) /Tp pqueue.cpp

server.obj: server.cpp
	$(CXX) -c $(COPTS) /Tp server.cpp

sink.obj: sink.cpp
	$(CXX) -c $(COPTS) /Tp sink.cpp

source.obj: source.cpp
	$(CXX) -c $(COPTS) /Tp source.cpp


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cpp *_n.h *_m.cpp *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cpp

re-makemake:
	opp_nmakemake -f -f  #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.
classifier.obj: classifier.cpp
delay.obj: delay.cpp
pqueue.obj: pqueue.cpp \
  pqueue.h \
  server.h
server.obj: server.cpp \
  server.h \
  pqueue.h
sink.obj: sink.cpp
source.obj: source.cpp
