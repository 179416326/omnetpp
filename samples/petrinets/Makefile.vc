#
# OMNeT++/OMNEST Makefile for petrinets
#
# This file was generated with the command:
#  opp_makemake --nmake -f --deep
#

# Name of target to be created (-o option)
TARGET = petrinets.exe

# User interface (uncomment one) (-u option)
USERIF_LIBS = $(ALL_ENV_LIBS) # that is, $(TKENV_LIBS) $(CMDENV_LIBS)
#USERIF_LIBS = $(CMDENV_LIBS)
#USERIF_LIBS = $(TKENV_LIBS)

# C++ include paths (with -I)
INCLUDE_PATH = -I.

# Additional object and library files to link with
EXTRA_OBJS =

# Additional libraries (-L, -l options)
LIBS =

# Output directory
PROJECT_OUTPUT_DIR = out
PROJECTRELATIVE_PATH =
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc and .msg files
OBJS = $O/PetriNetBuilder.obj $O/Place.obj $O/Transition.obj

# Message files
MSGFILES =

MAKE=nmake -nologo -f Makefile.vc

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)
!if "$(OMNETPP_CONFIGFILE)"!=""
CONFIGFILE = $(OMNETPP_CONFIGFILE)
!elseif "$(OMNETPP_ROOT)"!=""
CONFIGFILE = $(OMNETPP_ROOT)/configuser.vc
!else
CONFIGFILE = C:\home\omnetpp40\omnetpp\bin\\..\configuser.vc
!endif

!if !exist($(CONFIGFILE))
!error '$(CONFIGFILE)' does not exist -- set OMNETPP_ROOT or OMNETPP_CONFIGFILE to point to configuser.vc. From the IDE, set the OMNeT++ install location on the Window | Preferences dialog.
!endif

!include $(CONFIGFILE)

# Simulation kernel and user interface libraries
OMNETPP_LIB_SUBDIR = $(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)
OMNETPP_LIBS = /libpath:"$(OMNETPP_LIB_SUBDIR)" /libpath:"$(OMNETPP_LIB_DIR)" $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# <<<
#------------------------------------------------------------------------------

# Main target
all: $(TARGET)

$(TARGET) : $O/$(TARGET)
	copy $(O:/=\)\$(TARGET) .
	-copy $(O:/=\)\$(TARGET).manifest . >NUL

$O/$(TARGET): $(OBJS)  $(EXTRA_OBJS) Makefile.vc
	-@md $(O:/=\) 2>nul
	$(LINK) $(LDFLAGS) /out:$O/$(TARGET)  $(OBJS) $(EXTRA_OBJS) $(WHOLE_ARCHIVE_ON) $(LIBS) $(WHOLE_ARCHIVE_OFF) $(OMNETPP_LIBS)

.SUFFIXES: .cc

{.}.cc{$O}.obj:
	-@md $(O:/=\) 2>nul
	$(CXX) -c $(COPTS) /Fo"$@" -Tp $<

{.}.cc{$O/.}.obj:
	-@md $(O:/=\)\. 2>nul
	$(CXX) -c $(COPTS) /Fo"$@" -Tp $<

msgheaders: $(MSGFILES:.msg=_m.h)

clean:
	-rmdir /s /q $(O:/=\) 2>nul
	-del $(VC_AUX_FILES) 2>nul
	-del $(TARGET) $(TARGET:.exe=.lib) $(TARGET:.exe=.dll) 2>nul
	-del .\*_m.cc .\*_m.h 2>nul

cleanall: clean
	-rmdir /s /q $(PROJECT_OUTPUT_DIR:/=\) 2>nul

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -P^$O/ -- $(MSG_CC_FILES)  ./*.cc

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/PetriNetBuilder.obj: PetriNetBuilder.cc
$O/Place.obj: Place.cc \
  ./IPlace.h \
  ./ITransition.h \
  ./Place.h
$O/Transition.obj: Transition.cc \
  ./ITransition.h \
  ./IPlace.h \
  ./Transition.h
