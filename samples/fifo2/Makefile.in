#
#  makefile for fifo2
#
#  ** This file was automatically generated by the command:
#  makemake -f
#

# Name of target to be created (-o option)
TARGET = fifo2

# User interface (uncomment one) (-u option)
# USERIF_LIBS = $(CMDENV_LIBS)
USERIF_LIBS = $(TKENV_LIBS)
# USERIF_LIBS = $(TVENV_LIBS)

# Uncomment the second line for parallel execution (PVM3) support (-p option):
KERNEL_LIBS = $(STD_KERNEL_LIBS)
# KERNEL_LIBS = $(PVM_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH =

# misc additional object and library files to link
EXRA_OBJS =

# object files in subdirectories
SUBDIR_OBJS =

# Additional libraries (-l option)
LIBS =

#------------------------------------------------------------------------------

# NOTE: The following variables (paths etc.) are set by the configure script.
#       Any changes you make here will be lost with the next configure.

OMNETPP_ROOT = /home/andras/omnetpp
OMNETPP_SRC_DIR = /home/andras/omnetpp/src

CC = gcc -g -I. -c -x c++
NEDC = nedc
LD = gcc
AR = ar rs
MAKE_SO = gcc -shared -o

OMNETPP_INCL_PATH=-I/home/andras/omnetpp/src/sim
OMNETPP_LIB_PATH=-L/home/andras/omnetpp/lib

TV_LIBS=-ltv
X_LIBS=-lX11
TK_LIBS=-ltk -ltcl -ldl
PVM_LIBS=-lgpvm3 -lpvm3
SYS_LIBS=-ldl -lm -lstdc++

TV_LIB_PATH=
TK_LIB_PATH=-L/usr/lib -L/usr/lib
X_LIB_PATH=-L/usr/X11R6/lib
PVM_LIB_PATH=-L/home/andras/download/pvm3/lib/LINUX

# User interface libs
CMDENV_LIBS = -lenvir -lcmdenv
TVENV_LIBS = -lenvir -ltvenv $(TV_LIB_PATH) $(TV_LIBS)
TKENV_LIBS = -lenvir -ltkenv $(TK_LIB_PATH) $(TK_LIBS) $(X_LIB_PATH) $(X_LIBS)

# Simulation kernel
STD_KERNEL_LIBS = -lsim_std
PVM_KERNEL_LIBS = -lsim_pvm $(PVM_LIB_PATH) $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS = $(OMNETPP_LIB_PATH) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS)

OMNETPP_INCLUDES = /home/andras/omnetpp/src/sim/*.h

#------------------------------------------------------------------------------

# Object files from this directory to link
OBJS = fifo_n.o fifonet_n.o gen_n.o sink_n.o fifo.o gen.o sink.o

$(TARGET): $(OBJS) $(EXRA_OBJS)   makefile
	$(LD) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

fifo_n.o: fifo.h fifo_n.cc $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) fifo_n.cc

fifo_n.cc: fifo.ned
	$(NEDC) $(INCLUDE_PATH) fifo.ned

fifonet_n.o: fifonet_n.cc $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) fifonet_n.cc

fifonet_n.cc: fifonet.ned
	$(NEDC) $(INCLUDE_PATH) fifonet.ned

gen_n.o: gen_n.cc $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) gen_n.cc

gen_n.cc: gen.ned
	$(NEDC) $(INCLUDE_PATH) gen.ned

sink_n.o: sink_n.cc $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) sink_n.cc

sink_n.cc: sink.ned
	$(NEDC) $(INCLUDE_PATH) sink.ned

fifo.o: fifo.cc fifo.h $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) fifo.cc

gen.o: gen.cc fifo.h $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) gen.cc

sink.o: sink.cc fifo.h $(OMNETPP_INCLUDES)
	$(CC) $(INCLUDE_PATH) $(OMNETPP_INCL_PATH) sink.cc

clean:
	rm -f *.o *_n.cc $(TARGET)
