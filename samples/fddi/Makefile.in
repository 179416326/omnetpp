#
# *** This file was automatically generated by utils/makemake ***
#
#  This makefile assumes that .ned, .cc and .h files are in one directory
#  Program name defaults to the name of the directory (e.g.myproject).
#

# Name of simulation program to be created
PROGRAM = fddi

# Select a user interface by uncommenting one of the following lines:
# USERIF_LIBS = $(CMDENV_LIBS)
USERIF_LIBS = $(TKENV_LIBS)
# USERIF_LIBS = $(TVENV_LIBS)

# Uncomment the second line for parallel execution (PVM3) support:
KERNEL_LIBS = $(STD_KERNEL_LIBS)
# KERNEL_LIBS = $(PVM_KERNEL_LIBS)

# If you include NED files from outside this dir, their paths
# NED_INCL_PATH = -I../library

# If you use simple modules from outside this dir, compile them
# and put the names of the .o or .a files here
# OTHERSIMPLES =../library/module1.o ../library/modules.a

#---- end user configurable part -----

# NOTE:
# The following variables (paths etc.) are set by the configure script
# Modify that if you have problems!

OMNETPP_ROOT=@OMNETPP_ROOT@
OMNETPP_SRC_DIR=@OMNETPP_SRC_DIR@

CXX=@CXX@
NEDC=@NEDC@
LD=@LD@

OMNETPP_INCL_PATH=@OMNETPP_INCL_PATH@
OMNETPP_LIB_PATH=@OMNETPP_LIB_PATH@

TV_LIBS=@TV_LIBS@
X_LIBS=@X_LIBS@
TK_LIBS=@TK_LIBS@
PVM_LIBS=@PVM_LIBS@
SYS_LIBS=@SYS_LIBS@

TV_LIB_PATH=@TV_LIB_PATH@
TK_LIB_PATH=@TK_LIB_PATH@
X_LIB_PATH=@X_LIB_PATH@
PVM_LIB_PATH=@PVM_LIB_PATH@

# User interface libs
CMDENV_LIBS = -lenvir -lcmdenv
TVENV_LIBS = -lenvir -ltvenv $(TV_LIB_PATH) $(TV_LIBS)
TKENV_LIBS = -lenvir -ltkenv $(TK_LIB_PATH) $(TK_LIBS) $(X_LIB_PATH) $(X_LIBS)

# Simulation kernel
STD_KERNEL_LIBS = -lsim_std
PVM_KERNEL_LIBS = -lsim_pvm $(PVM_LIB_PATH) $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS = $(OMNETPP_LIB_PATH) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS)

OMNETPP_INCLUDES=@OMNETPP_INCLUDES@

# Object files from this directory to link
OBJS = fddi_mac_n.o fddi_net_n.o othermod_n.o ssm_ifs_n.o fddi_mac.o othermod.o ssm_ifs.o

#----------------------------------------------

$(PROGRAM): $(OBJS) $(OTHERSIMPLES) makefile
	$(LD) $(OBJS) $(OTHERSIMPLES) $(OMNETPP_LIBS) -o $(PROGRAM)

fddi_mac_n.o: fddi_mac.h fddi_mac_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) fddi_mac_n.cc

fddi_mac_n.cc: fddi_mac.ned
	$(NEDC) $(NED_INCL_PATH) fddi_mac.ned

fddi_net_n.o: fddi_net_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) fddi_net_n.cc

fddi_net_n.cc: fddi_net.ned
	$(NEDC) $(NED_INCL_PATH) fddi_net.ned

othermod_n.o: othermod.h othermod_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) othermod_n.cc

othermod_n.cc: othermod.ned
	$(NEDC) $(NED_INCL_PATH) othermod.ned

ssm_ifs_n.o: ssm_ifs.h ssm_ifs_n.cc $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) ssm_ifs_n.cc

ssm_ifs_n.cc: ssm_ifs.ned
	$(NEDC) $(NED_INCL_PATH) ssm_ifs.ned

fddi_mac.o: fddi_mac.cc fddi_def.h fddi_mac.h otherdef.h othermod.h ssm_ifs.h ssmifdef.h $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) fddi_mac.cc

othermod.o: othermod.cc fddi_def.h fddi_mac.h otherdef.h othermod.h ssm_ifs.h ssmifdef.h $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) othermod.cc

ssm_ifs.o: ssm_ifs.cc fddi_def.h fddi_mac.h otherdef.h othermod.h ssm_ifs.h ssmifdef.h $(OMNETPP_INCLUDES)
	$(CXX) $(OMNETPP_INCL_PATH) ssm_ifs.cc

clean:
	rm -f *.o *_n.cc $(PROGRAM)
