#
#  Makefile for fifo
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = fifo.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../configuser.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= fifo_n.obj fifonet_n.obj gen_n.obj sink_n.obj fifo.obj gen.obj sink.obj

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

fifo_n.obj: fifo_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp fifo_n.cc

fifo_n.cc: fifo.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) fifo.ned

fifonet_n.obj: fifonet_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp fifonet_n.cc

fifonet_n.cc: fifonet.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) fifonet.ned

gen_n.obj: gen_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp gen_n.cc

gen_n.cc: gen.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) gen.ned

sink_n.obj: sink_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp sink_n.cc

sink_n.cc: sink.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) sink.ned

fifo.obj: fifo.cc
	$(CXX) -c $(COPTS) /Tp fifo.cc

gen.obj: gen.cc
	$(CXX) -c $(COPTS) /Tp gen.cc

sink.obj: sink.cc
	$(CXX) -c $(COPTS) /Tp sink.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.

