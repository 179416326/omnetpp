<#-- template include for network.ned.ftl -->
<#if !NedUtils.isVisibleType(nodeType,targetFolder)>
<#assign nodeType = StringUtils.makeValidIdentifier(nodeType)>
module ${nodeType} {
    parameters:
        @display("i=misc/node_vs");
    gates:
        inout g[];
}
</#if>

<#if star || wheel>
 <#if !NedUtils.isVisibleType(hubType,targetFolder)>
    <#assign hubType = StringUtils.makeValidIdentifier(hubType)>
module ${hubType} {
    parameters:
        @display("i=misc/node_vs");
    gates:
        inout g[];
}
  </#if>
</#if>

<#if channelType!="" && !NedUtils.isVisibleType(channelType,targetFolder)>
  <#assign channelType = StringUtils.makeValidIdentifier(channelType)>
channel ${channelType} extends ned.DatarateChannel {
    parameters:
        int cost = default(0);
}
</#if>

<#-- TODO: generateCoordinates -->
<#if parametricNED>
network ${targetTypeName}
{
    parameters:
        int n = default(${nodes});
    submodules:
<#if star || wheel>
        hub: ${hubType};
</#if>
        node[n]: ${nodeType};
    connections:
<#if star || wheel>
        for i=0..n-1 {
            hub.g++ <-->${channelSpec} node[i].g++;
        }
</#if>
<#if ring || wheel>
        for i=0..n-1 {
            node[i].g++ <-->${channelSpec} node[(i+1)%n].g++;
        }
</#if>
}
<#else>
network ${targetTypeName}
{
    submodules:
<#if star || wheel>
        hub: ${hubType};
</#if>
<#list 0..nodes-1 as i>
        node${i}: ${nodeType};
</#list>
    connections:
<#if star || wheel>
  <#list 0..nodes-1 as i>
        hub.g++ <-->${channelSpec} node${i}.g++;
  </#list>
</#if>
<#if ring || wheel>
  <#list 0..nodes-1 as i>
        node${i}.g++ <-->${channelSpec} node${(i+1)%nodes}.g++;
  </#list>
</#if>
}
</#if>
