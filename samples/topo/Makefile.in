#
#  Makefile for ned
#
#  ** This file was automatically generated by the command:
#  opp_makemake -m -f
#

# Name of target to be created (-o option)
TARGET = ned

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------

NEDC=@NEDC@
CXX=@CXX@
CC=@CC@
AR=@AR@
SHLIB_LD=@SHLIB_LD@
MAKEDEPEND=@MAKEDEPEND@

CFLAGS=@CFLAGS@
NEDCFLAGS=@NEDCFLAGS@
LDFLAGS=@LDFLAGS@
EXE_SUFFIX=@EXE_SUFFIX@

OMNETPP_INCL_DIR=@OMNETPP_INCL_DIR@
OMNETPP_LIB_DIR=@OMNETPP_LIB_DIR@

TK_LIBS=@TK_LIBS@
MPI_LIBS=@MPI_LIBS@
PVM_LIBS=@PVM_LIBS@
SYS_LIBS=@SYS_LIBS@
SYS_LIBS_PURE=-lm $(shell $(CXX) -print-file-name=libstdc++.a)

# User interface libs
CMDENV_LIBS=-lenvir -lcmdenv
TKENV_LIBS=-lenvir -ltkenv $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=-lsim_std
MPI_KERNEL_LIBS=-lsim_mpi $(MPI_LIBS)
PVM_KERNEL_LIBS=-lsim_pvm $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=-L$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------

# Object files from this directory to link
OBJS= binarytree_n.o chain_n.o fullgraph_n.o hexgrid_n.o mesh_n.o randomgraph_n.o star_n.o node.o

$(TARGET): $(OBJS) $(EXRA_OBJS) Makefile 
	$(CXX) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

purify: $(OBJS) $(EXRA_OBJS)   Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

binarytree_n.o: binarytree_n.cc
	$(CXX) -c $(NEDCOPTS) binarytree_n.cc

binarytree_n.cc: binarytree.ned
	$(NEDC) $(INCLUDE_PATH) binarytree.ned

chain_n.o: chain_n.cc
	$(CXX) -c $(NEDCOPTS) chain_n.cc

chain_n.cc: chain.ned
	$(NEDC) $(INCLUDE_PATH) chain.ned

fullgraph_n.o: fullgraph_n.cc
	$(CXX) -c $(NEDCOPTS) fullgraph_n.cc

fullgraph_n.cc: fullgraph.ned
	$(NEDC) $(INCLUDE_PATH) fullgraph.ned

hexgrid_n.o: hexgrid_n.cc
	$(CXX) -c $(NEDCOPTS) hexgrid_n.cc

hexgrid_n.cc: hexgrid.ned
	$(NEDC) $(INCLUDE_PATH) hexgrid.ned

mesh_n.o: mesh_n.cc
	$(CXX) -c $(NEDCOPTS) mesh_n.cc

mesh_n.cc: mesh.ned
	$(NEDC) $(INCLUDE_PATH) mesh.ned

randomgraph_n.o: randomgraph_n.cc
	$(CXX) -c $(NEDCOPTS) randomgraph_n.cc

randomgraph_n.cc: randomgraph.ned
	$(NEDC) $(INCLUDE_PATH) randomgraph.ned

star_n.o: star_n.cc
	$(CXX) -c $(NEDCOPTS) star_n.cc

star_n.cc: star.ned
	$(NEDC) $(INCLUDE_PATH) star.ned

node.o: node.cc
	$(CXX) -c $(COPTS) node.cc


doc: neddoc.html htmldocs

neddoc.html:  binarytree.ned chain.ned fullgraph.ned hexgrid.ned mesh.ned randomgraph.ned star.ned
	@opp_neddoc  binarytree.ned chain.ned fullgraph.ned hexgrid.ned mesh.ned randomgraph.ned star.ned > neddoc.html
	@echo File neddoc.html generated.

htmldocs:
	@doxygen -g- | sed "s/^PROJECT_NAME.*/PROJECT_NAME = ned/;\
	s|^INPUT *=.*|INPUT = . |;\
	s/^EXTRACT_ALL *=.*/EXTRACT_ALL = yes/;\
	s/^EXTRACT_PRIVATE *=.*/EXTRACT_PRIVATE = yes/;\
	s/^EXCLUDE_PATTERNS *=.*/EXCLUDE_PATTERNS = *_n.cc *_n.h/;\
	s/^ALPHABETICAL_INDEX *=.*/ALPHABETICAL_INDEX = yes/;\
	s/^HTML_OUTPUT *=.*/HTML_OUTPUT = htmldoc/;\
	s/^GENERATE_LATEX *=.*/GENERATE_LATEX = no/;\
	s/^GENERATE_TREEVIEW *=.*/GENERATE_TREEVIEW = yes/;\
	s/^HIDE_UNDOC_RELATIONS *=.*/HIDE_UNDOC_RELATIONS = no/;\
	s|^TAGFILES *=.*|TAGFILES = d:/home/omnetpp/doc/api/opptags.xml=d:/home/omnetpp/doc/api|;\
	s|^GENERATE_TAGFILE *=.*|GENERATE_TAGFILE = htmldoc/tags.xml|;\
	s/^QUIET *=.*/QUIET = yes/" > doxy.cfg
	@doxygen doxy.cfg
	@echo Code documentation generated. Now, point your web browser to ./htmldoc/index.html.

clean:
	rm -f *.o *_n.cc *_n.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	rm -rf neddoc.html htmldoc

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f    #recreate Makefile

re-makemake-m:
	opp_makemake -f -m    #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
node.o: node.cc
