DYNA
====

Models a client-server application.

Demonstrates:
 - experimental message subclassing
 - dynamic module creation
 - using WATCH()
 - star topology (with the number of modules passed as parameters)

---------------------------------------------------------------
***IMPORTANT***IMPORTANT***IMPORTANT***IMPORTANT***IMPORTANT***

Experimental message subclassing must be enabled explicitly when
running configure in the OMNeT++ top level directory:

$ configure --enable-nedc-subcl

After recompiling you can cd back into this directory and type:

$ opp_makemake
$ make

Please note that there is currently no support given for experimental
message subclassing.

Please read the documentation in ${OMNETPP_ROOT}/src/nedc/msgdoc.txt

---------------------------------------------------------------

Dyna is a model of a simple client-server network. The network contains
several clients and one server, connected in star topology:

   client  <--->
   client  <--->  switch  <--->  server
   client  <--->

The number of clients is configurable. Each client computer periodically
connects to the server for data exchange. In each connection, the client
sends a random number of "queries" then closes the connection.

The server handles several incoming connections concurrently. Each
connection is served by a separate process (i.e. a dynamically created
simple module).

The module types are:
  Client:
    A client computer which periodically connects to the
    server for data exchange.

  Switch:
    A very simple module which models the network between
    the server and the clients.

  Server:
    Models a simple server which accepts connections from the
    client computers. It serves multiple connections at a time;
    each connection is handled by a ServerProcess module, created
    on demand.

  ServerProcess:
    Handles one connection in the server.

  ClientServer:
    Model of the network, consisting of several clients, a server
    and a switch. The number of clients is a parameter.


