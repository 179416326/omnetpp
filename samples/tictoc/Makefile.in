#
#  Makefile for tictoc
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -m
#

# Name of target to be created (-o option)
TARGET = tictoc

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------

NEDC=@NEDC@
MSGC=@MSGC@
CXX=@CXX@
CC=@CC@
AR=@AR@
SHLIB_LD=@SHLIB_LD@
MAKEDEPEND=@MAKEDEPEND@

CFLAGS=@CFLAGS@
NEDCFLAGS=@NEDCFLAGS@
LDFLAGS=@LDFLAGS@
EXE_SUFFIX=@EXE_SUFFIX@

WITH_PARSIM=@WITH_PARSIM@
WITH_NETBUILDER=@WITH_NETBUILDER@

OMNETPP_INCL_DIR=@OMNETPP_INCL_DIR@
OMNETPP_LIB_DIR=@OMNETPP_LIB_DIR@

TK_LIBS=@TK_LIBS@
MPI_LIBS=@MPI_LIBS@
XML_LIBS=@XML_LIBS@
SYS_LIBS=@SYS_LIBS@
SYS_LIBS_PURE=-lm $(shell $(CXX) -print-file-name=libstdc++.a)

# User interface libs
CMDENV_LIBS=-lenvir -lcmdenv
TKENV_LIBS=-lenvir -ltkenv $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=-lsim_std

ifeq ($(WITH_NETBUILDER),yes)
KERNEL_LIBS += -lnedxml $(XML_LIBS)
endif

ifeq ($(WITH_PARSIM),yes)
KERNEL_LIBS += $(MPI_LIBS)
endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=-L$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= tictoc1_n.o tictoc10_n.o tictoc11_n.o tictoc2_n.o tictoc3_n.o tictoc4_n.o tictoc6_n.o tictoc7_n.o tictoc8_n.o tictoc9_n.o tictoc10_m.o tictoc11_m.o txc1.o txc10.o txc11.o txc3.o txc4.o txc5.o txc6.o txc7.o txc8.o txc9.o

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) $(EXTRA_OBJS) Makefile
	$(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

purify: $(OBJS) $(EXTRA_OBJS) Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

tictoc1_n.o: tictoc1_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc1_n.cc

tictoc1_n.cc: tictoc1.ned
	$(NEDC) $(INCLUDE_PATH) tictoc1.ned

tictoc10_n.o: tictoc10_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc10_n.cc

tictoc10_n.cc: tictoc10.ned
	$(NEDC) $(INCLUDE_PATH) tictoc10.ned

tictoc11_n.o: tictoc11_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc11_n.cc

tictoc11_n.cc: tictoc11.ned
	$(NEDC) $(INCLUDE_PATH) tictoc11.ned

tictoc2_n.o: tictoc2_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc2_n.cc

tictoc2_n.cc: tictoc2.ned
	$(NEDC) $(INCLUDE_PATH) tictoc2.ned

tictoc3_n.o: tictoc3_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc3_n.cc

tictoc3_n.cc: tictoc3.ned
	$(NEDC) $(INCLUDE_PATH) tictoc3.ned

tictoc4_n.o: tictoc4_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc4_n.cc

tictoc4_n.cc: tictoc4.ned
	$(NEDC) $(INCLUDE_PATH) tictoc4.ned

tictoc6_n.o: tictoc6_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc6_n.cc

tictoc6_n.cc: tictoc6.ned
	$(NEDC) $(INCLUDE_PATH) tictoc6.ned

tictoc7_n.o: tictoc7_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc7_n.cc

tictoc7_n.cc: tictoc7.ned
	$(NEDC) $(INCLUDE_PATH) tictoc7.ned

tictoc8_n.o: tictoc8_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc8_n.cc

tictoc8_n.cc: tictoc8.ned
	$(NEDC) $(INCLUDE_PATH) tictoc8.ned

tictoc9_n.o: tictoc9_n.cc
	$(CXX) -c $(NEDCOPTS) tictoc9_n.cc

tictoc9_n.cc: tictoc9.ned
	$(NEDC) $(INCLUDE_PATH) tictoc9.ned

tictoc10_m.o: tictoc10_m.cc
	$(CXX) -c $(NEDCOPTS) tictoc10_m.cc

tictoc10_m.cc tictoc10_m.h: tictoc10.msg
	$(MSGC) $(INCLUDE_PATH) tictoc10.msg

tictoc11_m.o: tictoc11_m.cc
	$(CXX) -c $(NEDCOPTS) tictoc11_m.cc

tictoc11_m.cc tictoc11_m.h: tictoc11.msg
	$(MSGC) $(INCLUDE_PATH) tictoc11.msg

txc1.o: txc1.cc
	$(CXX) -c $(COPTS) txc1.cc

txc10.o: txc10.cc
	$(CXX) -c $(COPTS) txc10.cc

txc11.o: txc11.cc
	$(CXX) -c $(COPTS) txc11.cc

txc3.o: txc3.cc
	$(CXX) -c $(COPTS) txc3.cc

txc4.o: txc4.cc
	$(CXX) -c $(COPTS) txc4.cc

txc5.o: txc5.cc
	$(CXX) -c $(COPTS) txc5.cc

txc6.o: txc6.cc
	$(CXX) -c $(COPTS) txc6.cc

txc7.o: txc7.cc
	$(CXX) -c $(COPTS) txc7.cc

txc8.o: txc8.cc
	$(CXX) -c $(COPTS) txc8.cc

txc9.o: txc9.cc
	$(CXX) -c $(COPTS) txc9.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f    #recreate Makefile

re-makemake-m:
	opp_makemake -f -m    #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
txc1.o: txc1.cc
txc10.o: txc10.cc
txc11.o: txc11.cc
txc3.o: txc3.cc
txc4.o: txc4.cc
txc5.o: txc5.cc
txc6.o: txc6.cc
txc7.o: txc7.cc
txc8.o: txc8.cc
txc9.o: txc9.cc
