#
#  Makefile for tictoc
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = tictoc.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=

# Additional libraries (-L, -l, -t options)
LIBS=

#------------------------------------------------------------------------------


!include "../../configuser.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib layout.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=common.lib sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(COPTS) $(NEDCFLAGS)
MSGCOPTS= $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= tictoc10_m.obj tictoc11_m.obj tictoc12_m.obj txc1.obj txc10.obj txc11.obj txc12.obj txc2.obj txc3.obj txc4.obj txc5.obj txc6.obj txc7.obj txc8.obj txc9.obj

# header files generated (from msg files)
GENERATEDHEADERS= tictoc10_m.h tictoc11_m.h tictoc12_m.h

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

tictoc10_m.obj: tictoc10_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp tictoc10_m.cc

tictoc10_m.cc tictoc10_m.h: tictoc10.msg
	$(MSGC:/=\) -s _m.cc $(MSGCOPTS) tictoc10.msg

tictoc11_m.obj: tictoc11_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp tictoc11_m.cc

tictoc11_m.cc tictoc11_m.h: tictoc11.msg
	$(MSGC:/=\) -s _m.cc $(MSGCOPTS) tictoc11.msg

tictoc12_m.obj: tictoc12_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp tictoc12_m.cc

tictoc12_m.cc tictoc12_m.h: tictoc12.msg
	$(MSGC:/=\) -s _m.cc $(MSGCOPTS) tictoc12.msg

txc1.obj: txc1.cc
	$(CXX) -c $(COPTS) /Tp txc1.cc

txc10.obj: txc10.cc
	$(CXX) -c $(COPTS) /Tp txc10.cc

txc11.obj: txc11.cc
	$(CXX) -c $(COPTS) /Tp txc11.cc

txc12.obj: txc12.cc
	$(CXX) -c $(COPTS) /Tp txc12.cc

txc2.obj: txc2.cc
	$(CXX) -c $(COPTS) /Tp txc2.cc

txc3.obj: txc3.cc
	$(CXX) -c $(COPTS) /Tp txc3.cc

txc4.obj: txc4.cc
	$(CXX) -c $(COPTS) /Tp txc4.cc

txc5.obj: txc5.cc
	$(CXX) -c $(COPTS) /Tp txc5.cc

txc6.obj: txc6.cc
	$(CXX) -c $(COPTS) /Tp txc6.cc

txc7.obj: txc7.cc
	$(CXX) -c $(COPTS) /Tp txc7.cc

txc8.obj: txc8.cc
	$(CXX) -c $(COPTS) /Tp txc8.cc

txc9.obj: txc9.cc
	$(CXX) -c $(COPTS) /Tp txc9.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && echo [opp_msgc in %%i] && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj .tstamp *.idb *.pdb *.ilk *.exp $(TARGET) $(TARGET:.exe=.lib) $(TARGET:.dll=.lib) 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && echo [clean in %%i] && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [depend in %%i] && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [makemake in %%i] && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.
txc1.obj: txc1.cc
txc10.obj: txc10.cc
txc11.obj: txc11.cc
txc12.obj: txc12.cc
txc2.obj: txc2.cc
txc3.obj: txc3.cc
txc4.obj: txc4.cc
txc5.obj: txc5.cc
txc6.obj: txc6.cc
txc7.obj: txc7.cc
txc8.obj: txc8.cc
txc9.obj: txc9.cc
