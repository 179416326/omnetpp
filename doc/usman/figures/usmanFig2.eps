%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 294.63789 419.92214 569.13789 513.94479 
%%Creator: CorelDRAW 8
%%Title: \\Inssv1\usershome\tmp\opp-usman\usmanFig2.eps
%%CreationDate: Tue Mar 19 10:27:50 2002
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generisches CMYK Drucker - Profil
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.12
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
335.77880 443.59739 388.27247 466.98180 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.64948 1.64948 0.00000 @w
/$fm 0 def
335.77880 443.59739 m
335.77880 466.98180 L
388.27247 466.98180 L
388.27247 443.59739 L
335.77880 443.59739 L
@c
S

@rax %Note: Object
411.46299 443.59739 463.95666 466.98180 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.64948 1.64948 0.00000 @w
/$fm 0 def
411.46299 443.59739 m
411.46299 466.98180 L
463.95666 466.98180 L
463.95666 443.59739 L
411.46299 443.59739 L
@c
S

@rax %Note: Object
318.31342 431.95380 481.42205 484.44746 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.77613 0.77613 0.00000 @w
/$fm 0 def
318.31342 431.95380 m
318.31342 484.44746 L
481.42205 484.44746 L
481.42205 431.95380 L
318.31342 431.95380 L
@c
S

@rax %Note: Object
504.61257 443.59739 545.46236 466.98180 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 1.64948 1.64948 0.00000 @w
/$fm 0 def
504.61257 443.59739 m
504.61257 466.98180 L
545.46236 466.98180 L
545.46236 443.59739 L
504.61257 443.59739 L
@c
S

@rax %Note: Object
295.02595 420.31020 568.74983 513.55672 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.77613 0.77613 0.00000 @w
/$fm 0 def
295.02595 420.31020 m
295.02595 513.55672 L
568.74983 513.55672 L
568.74983 420.31020 L
295.02595 420.31020 L
@c
S

@rax 441.34838 496.00715 508.37216 504.88044 @E
[0.00028346 0.00000000 0.00000000 0.00028346 441.34836181 497.93469045] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_Arial 34230.00000 z
%CHAR: 0 0 (s) @t
1055 5300 m
4028 5768 L
4193 4575 4661 3663 5425 3024 c
6184 2390 7251 2071 8626 2071 c
10007 2071 11033 2356 11701 2915 c
12368 3480 12705 4142 12705 4895 c
12705 5579 12408 6110 11815 6504 c
11404 6772 10377 7108 8740 7519 c
6538 8078 5003 8558 4153 8968 c
3303 9373 2653 9938 2214 10657 c
1774 11376 1552 12169 1552 13036 c
1552 13829 1734 14559 2099 15232 c
2459 15911 2955 16470 3577 16915 c
4045 17258 4684 17554 5488 17794 c
6298 18034 7165 18153 8090 18153 c
9482 18153 10703 17948 11758 17549 c
12813 17149 13589 16607 14091 15923 c
14593 15232 14936 14320 15124 13173 C
12186 12768 L
12049 13681 11661 14394 11022 14907 c
10383 15421 9476 15677 8306 15677 c
6926 15677 5939 15449 5351 14993 c
4758 14536 4461 14000 4461 13390 c
4461 12996 4587 12648 4832 12334 c
5077 12009 5460 11747 5985 11530 c
6287 11421 7171 11165 8643 10765 c
10771 10195 12254 9733 13093 9368 c
13937 9008 14599 8478 15078 7787 c
15558 7097 15797 6241 15797 5214 c
15797 4210 15500 3269 14919 2379 c
14331 1495 13487 810 12386 325 c
11284 -160 10035 -399 8643 -399 c
6333 -399 4575 80 3366 1038 c
2156 1997 1386 3417 1055 5300 C
@c
F
%CHAR: 17115 0 (i) @t
19386 21040 m
19386 24503 L
22398 24503 L
22398 21040 L
19386 21040 L
@c
19386 0 m
19386 17748 L
22398 17748 L
22398 0 L
19386 0 L
@c
F
%CHAR: 24714 0 (m) @t
26973 0 m
26973 17748 L
29660 17748 L
29660 15261 L
30219 16128 30961 16830 31885 17355 c
32809 17885 33865 18153 35046 18153 c
36358 18153 37436 17879 38275 17332 c
39119 16784 39712 16025 40055 15044 C
41464 17115 43289 18153 45537 18153 c
47300 18153 48652 17663 49599 16687 c
50546 15712 51020 14211 51020 12186 c
51020 0 L
48030 0 L
48030 11182 l
48030 12386 47933 13253 47739 13783 c
47540 14308 47186 14736 46678 15061 c
46165 15381 45560 15546 44870 15546 c
43620 15546 42588 15130 41761 14297 c
40939 13470 40523 12140 40523 10315 c
40523 0 L
37516 0 L
37516 11530 l
37516 12870 37271 13875 36780 14542 c
36289 15210 35491 15546 34373 15546 c
33528 15546 32747 15324 32028 14873 c
31309 14428 30784 13778 30465 12922 c
30139 12060 29980 10822 29980 9208 c
29980 0 L
26973 0 L
@c
F
%CHAR: 53228 0 (p) @t
55487 -6800 m
55487 17748 L
58226 17748 L
58226 15443 L
58870 16345 59600 17024 60416 17474 c
61226 17925 62213 18153 63371 18153 c
64889 18153 66224 17760 67382 16984 c
68546 16202 69419 15101 70006 13681 c
70600 12260 70896 10703 70896 9008 c
70896 7194 70571 5557 69915 4102 c
69265 2647 68318 1535 67074 759 c
65830 -11 64524 -399 63155 -399 c
62151 -399 61255 -188 60456 234 c
59658 656 59007 1192 58494 1837 C
58494 -6800 L
55487 -6800 L
@c
58208 8774 m
58208 6492 58671 4804 59595 3708 c
60519 2619 61643 2071 62955 2071 c
64290 2071 65437 2636 66389 3771 c
67342 4901 67821 6652 67821 9025 c
67821 11290 67354 12979 66424 14108 c
65494 15232 64381 15797 63092 15797 c
61808 15797 60673 15198 59686 14000 c
58699 12802 58208 11056 58208 8774 c
@c
F
%CHAR: 72260 0 (l) @t
74451 0 m
74451 24503 L
77457 24503 L
77457 0 L
74451 0 L
@c
F
%CHAR: 79859 0 (e) @t
94264 5716 m
97373 5334 L
96883 3514 95976 2105 94652 1101 c
93323 103 91628 -399 89569 -399 c
86973 -399 84914 399 83396 1997 c
81873 3594 81114 5836 81114 8723 c
81114 11712 81884 14029 83419 15677 c
84959 17326 86950 18153 89403 18153 c
91777 18153 93716 17343 95217 15729 c
96723 14114 97476 11838 97476 8911 c
97476 8729 97470 8461 97459 8107 C
84223 8107 L
84332 6156 84885 4661 85878 3628 c
86870 2590 88103 2071 89586 2071 c
90687 2071 91628 2362 92410 2944 c
93192 3520 93808 4444 94264 5716 C
@c
84389 10583 m
94298 10583 L
94167 12072 93785 13196 93163 13937 c
92205 15095 90961 15677 89438 15677 c
88057 15677 86893 15215 85952 14291 c
85011 13367 84491 12129 84389 10583 C
@c
F
%CHAR: 108407 0 (m) @t
110666 0 m
110666 17748 L
113353 17748 L
113353 15261 L
113912 16128 114654 16830 115578 17355 c
116502 17885 117558 18153 118739 18153 c
120051 18153 121129 17879 121968 17332 c
122812 16784 123405 16025 123748 15044 C
125157 17115 126982 18153 129230 18153 c
130993 18153 132345 17663 133292 16687 c
134239 15712 134713 14211 134713 12186 c
134713 0 L
131723 0 L
131723 11182 l
131723 12386 131626 13253 131432 13783 c
131233 14308 130879 14736 130371 15061 c
129858 15381 129253 15546 128563 15546 c
127313 15546 126281 15130 125454 14297 c
124632 13470 124216 12140 124216 10315 c
124216 0 L
121209 0 L
121209 11530 l
121209 12870 120964 13875 120473 14542 c
119982 15210 119184 15546 118066 15546 c
117221 15546 116440 15324 115721 14873 c
115002 14428 114477 13778 114158 12922 c
113832 12060 113673 10822 113673 9208 c
113673 0 L
110666 0 L
@c
F
%CHAR: 136921 0 (o) @t
138056 8877 m
138056 12163 138969 14599 140800 16179 c
142324 17492 144183 18153 146380 18153 c
148822 18153 150818 17355 152364 15752 c
153916 14154 154686 11946 154686 9128 c
154686 6840 154344 5043 153659 3737 c
152975 2425 151976 1409 150670 685 c
149358 -40 147932 -399 146380 -399 c
143898 -399 141890 394 140355 1991 c
138821 3583 138056 5876 138056 8877 c
@c
141148 8877 m
141148 6601 141645 4901 142637 3771 c
143630 2636 144879 2071 146380 2071 c
147875 2071 149118 2641 150111 3777 c
151098 4912 151594 6646 151594 8974 c
151594 11170 151098 12836 150100 13966 c
149101 15095 147863 15660 146380 15660 c
144879 15660 143630 15095 142637 13972 c
141645 12848 141148 11148 141148 8877 c
@c
F
%CHAR: 155953 0 (d) @t
169725 0 m
169725 2242 L
168601 479 166947 -399 164762 -399 c
163347 -399 162046 -11 160859 770 c
159673 1546 158754 2636 158098 4039 c
157448 5437 157123 7040 157123 8860 c
157123 10628 157419 12237 158007 13681 c
158600 15124 159484 16231 160665 16995 c
161846 17765 163170 18153 164630 18153 c
165697 18153 166650 17925 167483 17474 c
168321 17024 169000 16436 169525 15712 C
169525 24503 L
172515 24503 L
172515 0 L
169725 0 L
@c
160215 8860 m
160215 6584 160694 4883 161652 3760 c
162611 2636 163740 2071 165047 2071 c
166359 2071 167477 2613 168396 3685 c
169314 4758 169776 6401 169776 8609 c
169776 11039 169308 12819 168373 13954 c
167437 15095 166285 15660 164910 15660 c
163575 15660 162457 15113 161561 14023 c
160665 12933 160215 11210 160215 8860 c
@c
F
%CHAR: 174985 0 (u) @t
188877 0 m
188877 2607 L
187490 599 185613 -399 183240 -399 c
182196 -399 181215 -200 180308 200 c
179401 599 178727 1107 178288 1712 c
177843 2322 177535 3064 177358 3942 c
177238 4535 177176 5471 177176 6755 c
177176 17748 L
180182 17748 L
180182 7907 l
180182 6333 180245 5277 180365 4729 c
180559 3936 180958 3320 181569 2864 c
182185 2413 182943 2191 183845 2191 c
184746 2191 185591 2419 186384 2881 c
187177 3343 187736 3976 188061 4769 c
188392 5568 188557 6726 188557 8238 c
188557 17748 L
191564 17748 L
191564 0 L
188877 0 L
@c
F
%CHAR: 194017 0 (l) @t
196208 0 m
196208 24503 L
199214 24503 L
199214 0 L
196208 0 L
@c
F
%CHAR: 201616 0 (e) @t
216021 5716 m
219130 5334 L
218640 3514 217733 2105 216409 1101 c
215080 103 213385 -399 211326 -399 c
208730 -399 206671 399 205153 1997 c
203630 3594 202871 5836 202871 8723 c
202871 11712 203641 14029 205176 15677 c
206716 17326 208707 18153 211160 18153 c
213534 18153 215473 17343 216974 15729 c
218480 14114 219233 11838 219233 8911 c
219233 8729 219227 8461 219216 8107 C
205980 8107 L
206089 6156 206642 4661 207635 3628 c
208627 2590 209860 2071 211343 2071 c
212444 2071 213385 2362 214167 2944 c
214949 3520 215565 4444 216021 5716 C
@c
206146 10583 m
216055 10583 L
215924 12072 215542 13196 214920 13937 c
213962 15095 212718 15677 211195 15677 c
209814 15677 208650 15215 207709 14291 c
206768 13367 206248 12129 206146 10583 C
@c
F
%CHAR: 220648 0 (s) @t
221703 5300 m
224676 5768 L
224841 4575 225309 3663 226073 3024 c
226832 2390 227899 2071 229274 2071 c
230655 2071 231681 2356 232349 2915 c
233016 3480 233353 4142 233353 4895 c
233353 5579 233056 6110 232463 6504 c
232052 6772 231025 7108 229388 7519 c
227186 8078 225651 8558 224801 8968 c
223951 9373 223301 9938 222862 10657 c
222422 11376 222200 12169 222200 13036 c
222200 13829 222382 14559 222747 15232 c
223107 15911 223603 16470 224225 16915 c
224693 17258 225332 17554 226136 17794 c
226946 18034 227813 18153 228738 18153 c
230130 18153 231351 17948 232406 17549 c
233461 17149 234237 16607 234739 15923 c
235241 15232 235584 14320 235772 13173 C
232834 12768 L
232697 13681 232309 14394 231670 14907 c
231031 15421 230124 15677 228954 15677 c
227574 15677 226587 15449 225999 14993 c
225406 14536 225109 14000 225109 13390 c
225109 12996 225235 12648 225480 12334 c
225725 12009 226108 11747 226633 11530 c
226935 11421 227819 11165 229291 10765 c
231419 10195 232902 9733 233741 9368 c
234585 9008 235247 8478 235726 7787 c
236206 7097 236445 6241 236445 5214 c
236445 4210 236148 3269 235567 2379 c
234979 1495 234135 810 233034 325 c
231932 -160 230683 -399 229291 -399 c
226981 -399 225223 80 224014 1038 c
222804 1997 222034 3417 221703 5300 C
@c
F
T
@rax 319.08954 472.71969 398.50583 481.59298 @E
[0.00028346 0.00000000 0.00000000 0.00028346 319.08953163 474.64722673] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_Arial 34230.00000 z
%CHAR: 0 0 (c) @t
13840 6504 m
16796 6116 L
16476 4079 15649 2482 14314 1329 c
12985 177 11347 -399 9408 -399 c
6983 -399 5026 394 3554 1980 c
2077 3566 1335 5842 1335 8809 c
1335 10725 1654 12403 2288 13840 c
2927 15278 3891 16356 5192 17075 c
6487 17794 7901 18153 9425 18153 c
11353 18153 12933 17663 14154 16687 c
15381 15712 16168 14331 16516 12534 C
13589 12083 L
13310 13276 12819 14171 12112 14776 c
11404 15375 10549 15677 9544 15677 c
8027 15677 6795 15135 5848 14046 c
4901 12962 4427 11245 4427 8894 c
4427 6509 4883 4775 5802 3691 c
6715 2613 7907 2071 9379 2071 c
10560 2071 11541 2436 12334 3161 c
13127 3885 13629 4998 13840 6504 C
@c
F
%CHAR: 17115 0 (o) @t
18250 8877 m
18250 12163 19163 14599 20994 16179 c
22518 17492 24377 18153 26574 18153 c
29016 18153 31012 17355 32558 15752 c
34110 14154 34880 11946 34880 9128 c
34880 6840 34538 5043 33853 3737 c
33169 2425 32170 1409 30864 685 c
29552 -40 28126 -399 26574 -399 c
24092 -399 22084 394 20549 1991 c
19015 3583 18250 5876 18250 8877 c
@c
21342 8877 m
21342 6601 21839 4901 22831 3771 c
23824 2636 25073 2071 26574 2071 c
28069 2071 29312 2641 30305 3777 c
31292 4912 31788 6646 31788 8974 c
31788 11170 31292 12836 30294 13966 c
29295 15095 28057 15660 26574 15660 c
25073 15660 23824 15095 22831 13972 c
21839 12848 21342 11148 21342 8877 c
@c
F
%CHAR: 36147 0 (m) @t
38406 0 m
38406 17748 L
41093 17748 L
41093 15261 L
41652 16128 42394 16830 43318 17355 c
44242 17885 45298 18153 46479 18153 c
47791 18153 48869 17879 49708 17332 c
50552 16784 51145 16025 51488 15044 C
52897 17115 54722 18153 56970 18153 c
58733 18153 60085 17663 61032 16687 c
61979 15712 62453 14211 62453 12186 c
62453 0 L
59463 0 L
59463 11182 l
59463 12386 59366 13253 59172 13783 c
58973 14308 58619 14736 58111 15061 c
57598 15381 56993 15546 56303 15546 c
55053 15546 54021 15130 53194 14297 c
52372 13470 51956 12140 51956 10315 c
51956 0 L
48949 0 L
48949 11530 l
48949 12870 48704 13875 48213 14542 c
47722 15210 46924 15546 45806 15546 c
44961 15546 44180 15324 43461 14873 c
42742 14428 42217 13778 41898 12922 c
41572 12060 41413 10822 41413 9208 c
41413 0 L
38406 0 L
@c
F
%CHAR: 64661 0 (p) @t
66920 -6800 m
66920 17748 L
69659 17748 L
69659 15443 L
70303 16345 71033 17024 71849 17474 c
72659 17925 73646 18153 74804 18153 c
76322 18153 77657 17760 78815 16984 c
79979 16202 80852 15101 81439 13681 c
82033 12260 82329 10703 82329 9008 c
82329 7194 82004 5557 81348 4102 c
80698 2647 79751 1535 78507 759 c
77263 -11 75957 -399 74588 -399 c
73584 -399 72688 -188 71889 234 c
71091 656 70440 1192 69927 1837 C
69927 -6800 L
66920 -6800 L
@c
69641 8774 m
69641 6492 70104 4804 71028 3708 c
71952 2619 73076 2071 74388 2071 c
75723 2071 76870 2636 77822 3771 c
78775 4901 79254 6652 79254 9025 c
79254 11290 78787 12979 77857 14108 c
76927 15232 75814 15797 74525 15797 c
73241 15797 72106 15198 71119 14000 c
70132 12802 69641 11056 69641 8774 c
@c
F
%CHAR: 83693 0 (o) @t
84828 8877 m
84828 12163 85741 14599 87572 16179 c
89096 17492 90955 18153 93152 18153 c
95594 18153 97590 17355 99136 15752 c
100688 14154 101458 11946 101458 9128 c
101458 6840 101116 5043 100431 3737 c
99747 2425 98748 1409 97442 685 c
96130 -40 94704 -399 93152 -399 c
90670 -399 88662 394 87127 1991 c
85593 3583 84828 5876 84828 8877 c
@c
87920 8877 m
87920 6601 88417 4901 89409 3771 c
90402 2636 91651 2071 93152 2071 c
94647 2071 95890 2641 96883 3777 c
97870 4912 98366 6646 98366 8974 c
98366 11170 97870 12836 96872 13966 c
95873 15095 94635 15660 93152 15660 c
91651 15660 90402 15095 89409 13972 c
88417 12848 87920 11148 87920 8877 c
@c
F
%CHAR: 102725 0 (u) @t
116617 0 m
116617 2607 L
115230 599 113353 -399 110980 -399 c
109936 -399 108955 -200 108048 200 c
107141 599 106467 1107 106028 1712 c
105583 2322 105275 3064 105098 3942 c
104978 4535 104916 5471 104916 6755 c
104916 17748 L
107922 17748 L
107922 7907 l
107922 6333 107985 5277 108105 4729 c
108299 3936 108698 3320 109309 2864 c
109925 2413 110683 2191 111585 2191 c
112486 2191 113331 2419 114124 2881 c
114917 3343 115476 3976 115801 4769 c
116132 5568 116297 6726 116297 8238 c
116297 17748 L
119304 17748 L
119304 0 L
116617 0 L
@c
F
%CHAR: 121757 0 (n) @t
124016 0 m
124016 17748 L
126720 17748 L
126720 15227 L
128027 17178 129909 18153 132368 18153 c
133441 18153 134422 17959 135318 17577 c
136219 17189 136887 16687 137332 16060 c
137782 15438 138090 14696 138273 13840 c
138381 13281 138438 12306 138438 10914 c
138438 0 L
135426 0 L
135426 10800 l
135426 12020 135312 12939 135078 13549 c
134844 14154 134428 14639 133834 14998 c
133235 15364 132539 15546 131735 15546 c
130451 15546 129350 15135 128415 14325 c
127485 13509 127023 11969 127023 9693 c
127023 0 L
124016 0 L
@c
F
%CHAR: 140789 0 (d) @t
154561 0 m
154561 2242 L
153437 479 151783 -399 149598 -399 c
148183 -399 146882 -11 145695 770 c
144509 1546 143590 2636 142934 4039 c
142284 5437 141959 7040 141959 8860 c
141959 10628 142255 12237 142843 13681 c
143436 15124 144320 16231 145501 16995 c
146682 17765 148006 18153 149466 18153 c
150533 18153 151486 17925 152319 17474 c
153157 17024 153836 16436 154361 15712 C
154361 24503 L
157351 24503 L
157351 0 L
154561 0 L
@c
145051 8860 m
145051 6584 145530 4883 146488 3760 c
147447 2636 148576 2071 149883 2071 c
151195 2071 152313 2613 153232 3685 c
154150 4758 154612 6401 154612 8609 c
154612 11039 154144 12819 153209 13954 c
152273 15095 151121 15660 149746 15660 c
148411 15660 147293 15113 146397 14023 c
145501 12933 145051 11210 145051 8860 c
@c
F
%CHAR: 169337 0 (m) @t
171596 0 m
171596 17748 L
174283 17748 L
174283 15261 L
174842 16128 175584 16830 176508 17355 c
177432 17885 178488 18153 179669 18153 c
180981 18153 182059 17879 182898 17332 c
183742 16784 184335 16025 184678 15044 C
186087 17115 187912 18153 190160 18153 c
191923 18153 193275 17663 194222 16687 c
195169 15712 195643 14211 195643 12186 c
195643 0 L
192653 0 L
192653 11182 l
192653 12386 192556 13253 192362 13783 c
192163 14308 191809 14736 191301 15061 c
190788 15381 190183 15546 189493 15546 c
188243 15546 187211 15130 186384 14297 c
185562 13470 185146 12140 185146 10315 c
185146 0 L
182139 0 L
182139 11530 l
182139 12870 181894 13875 181403 14542 c
180912 15210 180114 15546 178996 15546 c
178151 15546 177370 15324 176651 14873 c
175932 14428 175407 13778 175088 12922 c
174762 12060 174603 10822 174603 9208 c
174603 0 L
171596 0 L
@c
F
%CHAR: 197851 0 (o) @t
198986 8877 m
198986 12163 199899 14599 201730 16179 c
203254 17492 205113 18153 207310 18153 c
209752 18153 211748 17355 213294 15752 c
214846 14154 215616 11946 215616 9128 c
215616 6840 215274 5043 214589 3737 c
213905 2425 212906 1409 211600 685 c
210288 -40 208862 -399 207310 -399 c
204828 -399 202820 394 201285 1991 c
199751 3583 198986 5876 198986 8877 c
@c
202078 8877 m
202078 6601 202575 4901 203567 3771 c
204560 2636 205809 2071 207310 2071 c
208805 2071 210048 2641 211041 3777 c
212028 4912 212524 6646 212524 8974 c
212524 11170 212028 12836 211030 13966 c
210031 15095 208793 15660 207310 15660 c
205809 15660 204560 15095 203567 13972 c
202575 12848 202078 11148 202078 8877 c
@c
F
%CHAR: 216883 0 (d) @t
230655 0 m
230655 2242 L
229531 479 227877 -399 225692 -399 c
224277 -399 222976 -11 221789 770 c
220603 1546 219684 2636 219028 4039 c
218378 5437 218053 7040 218053 8860 c
218053 10628 218349 12237 218937 13681 c
219530 15124 220414 16231 221595 16995 c
222776 17765 224100 18153 225560 18153 c
226627 18153 227580 17925 228413 17474 c
229251 17024 229930 16436 230455 15712 C
230455 24503 L
233445 24503 L
233445 0 L
230655 0 L
@c
221145 8860 m
221145 6584 221624 4883 222582 3760 c
223541 2636 224670 2071 225977 2071 c
227289 2071 228407 2613 229326 3685 c
230244 4758 230706 6401 230706 8609 c
230706 11039 230238 12819 229303 13954 c
228367 15095 227215 15660 225840 15660 c
224505 15660 223387 15113 222491 14023 c
221595 12933 221145 11210 221145 8860 c
@c
F
%CHAR: 235915 0 (u) @t
249807 0 m
249807 2607 L
248420 599 246543 -399 244170 -399 c
243126 -399 242145 -200 241238 200 c
240331 599 239657 1107 239218 1712 c
238773 2322 238465 3064 238288 3942 c
238168 4535 238106 5471 238106 6755 c
238106 17748 L
241112 17748 L
241112 7907 l
241112 6333 241175 5277 241295 4729 c
241489 3936 241888 3320 242499 2864 c
243115 2413 243873 2191 244775 2191 c
245676 2191 246521 2419 247314 2881 c
248107 3343 248666 3976 248991 4769 c
249322 5568 249487 6726 249487 8238 c
249487 17748 L
252494 17748 L
252494 0 L
249807 0 L
@c
F
%CHAR: 254947 0 (l) @t
257138 0 m
257138 24503 L
260144 24503 L
260144 0 L
257138 0 L
@c
F
%CHAR: 262546 0 (e) @t
276951 5716 m
280060 5334 L
279570 3514 278663 2105 277339 1101 c
276010 103 274315 -399 272256 -399 c
269660 -399 267601 399 266083 1997 c
264560 3594 263801 5836 263801 8723 c
263801 11712 264571 14029 266106 15677 c
267646 17326 269637 18153 272090 18153 c
274464 18153 276403 17343 277904 15729 c
279410 14114 280163 11838 280163 8911 c
280163 8729 280157 8461 280146 8107 C
266910 8107 L
267019 6156 267572 4661 268565 3628 c
269557 2590 270790 2071 272273 2071 c
273374 2071 274315 2362 275097 2944 c
275879 3520 276495 4444 276951 5716 C
@c
267076 10583 m
276985 10583 L
276854 12072 276472 13196 275850 13937 c
274892 15095 273648 15677 272125 15677 c
270744 15677 269580 15215 268639 14291 c
267698 13367 267178 12129 267076 10583 C
@c
F
T
@rax 295.80236 501.71414 360.64460 510.70224 @E
[0.00028346 0.00000000 0.00000000 0.00028346 295.80235138 503.75648551] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_Arial 34230.00000 z
%CHAR: 0 0 (s) @t
1055 5300 m
4028 5768 L
4193 4575 4661 3663 5425 3024 c
6184 2390 7251 2071 8626 2071 c
10007 2071 11033 2356 11701 2915 c
12368 3480 12705 4142 12705 4895 c
12705 5579 12408 6110 11815 6504 c
11404 6772 10377 7108 8740 7519 c
6538 8078 5003 8558 4153 8968 c
3303 9373 2653 9938 2214 10657 c
1774 11376 1552 12169 1552 13036 c
1552 13829 1734 14559 2099 15232 c
2459 15911 2955 16470 3577 16915 c
4045 17258 4684 17554 5488 17794 c
6298 18034 7165 18153 8090 18153 c
9482 18153 10703 17948 11758 17549 c
12813 17149 13589 16607 14091 15923 c
14593 15232 14936 14320 15124 13173 C
12186 12768 L
12049 13681 11661 14394 11022 14907 c
10383 15421 9476 15677 8306 15677 c
6926 15677 5939 15449 5351 14993 c
4758 14536 4461 14000 4461 13390 c
4461 12996 4587 12648 4832 12334 c
5077 12009 5460 11747 5985 11530 c
6287 11421 7171 11165 8643 10765 c
10771 10195 12254 9733 13093 9368 c
13937 9008 14599 8478 15078 7787 c
15558 7097 15797 6241 15797 5214 c
15797 4210 15500 3269 14919 2379 c
14331 1495 13487 810 12386 325 c
11284 -160 10035 -399 8643 -399 c
6333 -399 4575 80 3366 1038 c
2156 1997 1386 3417 1055 5300 C
@c
F
%CHAR: 17115 0 (y) @t
19237 -6835 m
18901 -4011 L
19562 -4187 20133 -4279 20624 -4279 c
21291 -4279 21827 -4165 22227 -3942 c
22632 -3720 22957 -3412 23214 -3007 c
23408 -2710 23710 -1963 24132 -770 c
24189 -599 24280 -354 24400 -34 C
17668 17748 L
20909 17748 L
24606 7474 l
25079 6167 25513 4798 25889 3360 C
26237 4741 26648 6087 27127 7405 c
30921 17748 L
33928 17748 L
27179 -302 l
26454 -2253 25889 -3594 25490 -4330 c
24954 -5323 24343 -6047 23653 -6509 c
22957 -6972 22135 -7205 21177 -7205 c
20595 -7205 19950 -7080 19237 -6835 C
@c
F
%CHAR: 34230 0 (s) @t
35285 5300 m
38258 5768 L
38423 4575 38891 3663 39655 3024 c
40414 2390 41481 2071 42856 2071 c
44237 2071 45263 2356 45931 2915 c
46598 3480 46935 4142 46935 4895 c
46935 5579 46638 6110 46045 6504 c
45634 6772 44607 7108 42970 7519 c
40768 8078 39233 8558 38383 8968 c
37533 9373 36883 9938 36444 10657 c
36004 11376 35782 12169 35782 13036 c
35782 13829 35964 14559 36329 15232 c
36689 15911 37185 16470 37807 16915 c
38275 17258 38914 17554 39718 17794 c
40528 18034 41395 18153 42320 18153 c
43712 18153 44933 17948 45988 17549 c
47043 17149 47819 16607 48321 15923 c
48823 15232 49166 14320 49354 13173 C
46416 12768 L
46279 13681 45891 14394 45252 14907 c
44613 15421 43706 15677 42536 15677 c
41156 15677 40169 15449 39581 14993 c
38988 14536 38691 14000 38691 13390 c
38691 12996 38817 12648 39062 12334 c
39307 12009 39690 11747 40215 11530 c
40517 11421 41401 11165 42873 10765 c
45001 10195 46484 9733 47323 9368 c
48167 9008 48829 8478 49308 7787 c
49788 7097 50027 6241 50027 5214 c
50027 4210 49730 3269 49149 2379 c
48561 1495 47717 810 46616 325 c
45514 -160 44265 -399 42873 -399 c
40563 -399 38805 80 37596 1038 c
36386 1997 35616 3417 35285 5300 C
@c
F
%CHAR: 51345 0 (t) @t
60171 2693 m
60604 34 L
59760 -143 59001 -234 58334 -234 c
57238 -234 56394 -63 55789 285 c
55190 628 54768 1084 54523 1649 c
54277 2208 54152 3394 54152 5197 c
54152 15409 L
51944 15409 L
51944 17748 L
54152 17748 L
54152 22147 L
57147 23950 L
57147 17748 L
60171 17748 L
60171 15409 L
57147 15409 L
57147 5032 l
57147 4170 57198 3623 57301 3377 c
57409 3132 57581 2938 57820 2790 c
58060 2647 58402 2573 58847 2573 c
59184 2573 59623 2613 60171 2693 C
@c
F
%CHAR: 60861 0 (e) @t
75266 5716 m
78375 5334 L
77885 3514 76978 2105 75654 1101 c
74325 103 72630 -399 70571 -399 c
67975 -399 65916 399 64398 1997 c
62875 3594 62116 5836 62116 8723 c
62116 11712 62886 14029 64421 15677 c
65961 17326 67952 18153 70405 18153 c
72779 18153 74718 17343 76219 15729 c
77725 14114 78478 11838 78478 8911 c
78478 8729 78472 8461 78461 8107 C
65225 8107 L
65334 6156 65887 4661 66880 3628 c
67872 2590 69105 2071 70588 2071 c
71689 2071 72630 2362 73412 2944 c
74194 3520 74810 4444 75266 5716 C
@c
65391 10583 m
75300 10583 L
75169 12072 74787 13196 74165 13937 c
73207 15095 71963 15677 70440 15677 c
69059 15677 67895 15215 66954 14291 c
66013 13367 65493 12129 65391 10583 C
@c
F
%CHAR: 79893 0 (m) @t
82152 0 m
82152 17748 L
84839 17748 L
84839 15261 L
85398 16128 86140 16830 87064 17355 c
87988 17885 89044 18153 90225 18153 c
91537 18153 92615 17879 93454 17332 c
94298 16784 94891 16025 95234 15044 C
96643 17115 98468 18153 100716 18153 c
102479 18153 103831 17663 104778 16687 c
105725 15712 106199 14211 106199 12186 c
106199 0 L
103209 0 L
103209 11182 l
103209 12386 103112 13253 102918 13783 c
102719 14308 102365 14736 101857 15061 c
101344 15381 100739 15546 100049 15546 c
98799 15546 97767 15130 96940 14297 c
96118 13470 95702 12140 95702 10315 c
95702 0 L
92695 0 L
92695 11530 l
92695 12870 92450 13875 91959 14542 c
91468 15210 90670 15546 89552 15546 c
88707 15546 87926 15324 87207 14873 c
86488 14428 85963 13778 85644 12922 c
85318 12060 85159 10822 85159 9208 c
85159 0 L
82152 0 L
@c
F
%CHAR: 117923 0 (m) @t
120182 0 m
120182 17748 L
122869 17748 L
122869 15261 L
123428 16128 124170 16830 125094 17355 c
126018 17885 127074 18153 128255 18153 c
129567 18153 130645 17879 131484 17332 c
132328 16784 132921 16025 133264 15044 C
134673 17115 136498 18153 138746 18153 c
140509 18153 141861 17663 142808 16687 c
143755 15712 144229 14211 144229 12186 c
144229 0 L
141239 0 L
141239 11182 l
141239 12386 141142 13253 140948 13783 c
140749 14308 140395 14736 139887 15061 c
139374 15381 138769 15546 138079 15546 c
136829 15546 135797 15130 134970 14297 c
134148 13470 133732 12140 133732 10315 c
133732 0 L
130725 0 L
130725 11530 l
130725 12870 130480 13875 129989 14542 c
129498 15210 128700 15546 127582 15546 c
126737 15546 125956 15324 125237 14873 c
124518 14428 123993 13778 123674 12922 c
123348 12060 123189 10822 123189 9208 c
123189 0 L
120182 0 L
@c
F
%CHAR: 146437 0 (o) @t
147572 8877 m
147572 12163 148485 14599 150316 16179 c
151840 17492 153699 18153 155896 18153 c
158338 18153 160334 17355 161880 15752 c
163432 14154 164202 11946 164202 9128 c
164202 6840 163860 5043 163175 3737 c
162491 2425 161492 1409 160186 685 c
158874 -40 157448 -399 155896 -399 c
153414 -399 151406 394 149871 1991 c
148337 3583 147572 5876 147572 8877 c
@c
150664 8877 m
150664 6601 151161 4901 152153 3771 c
153146 2636 154395 2071 155896 2071 c
157391 2071 158634 2641 159627 3777 c
160614 4912 161110 6646 161110 8974 c
161110 11170 160614 12836 159616 13966 c
158617 15095 157379 15660 155896 15660 c
154395 15660 153146 15095 152153 13972 c
151161 12848 150664 11148 150664 8877 c
@c
F
%CHAR: 165469 0 (d) @t
179241 0 m
179241 2242 L
178117 479 176463 -399 174278 -399 c
172863 -399 171562 -11 170375 770 c
169189 1546 168270 2636 167614 4039 c
166964 5437 166639 7040 166639 8860 c
166639 10628 166935 12237 167523 13681 c
168116 15124 169000 16231 170181 16995 c
171362 17765 172686 18153 174146 18153 c
175213 18153 176166 17925 176999 17474 c
177837 17024 178516 16436 179041 15712 C
179041 24503 L
182031 24503 L
182031 0 L
179241 0 L
@c
169731 8860 m
169731 6584 170210 4883 171168 3760 c
172127 2636 173256 2071 174563 2071 c
175875 2071 176993 2613 177912 3685 c
178830 4758 179292 6401 179292 8609 c
179292 11039 178824 12819 177889 13954 c
176953 15095 175801 15660 174426 15660 c
173091 15660 171973 15113 171077 14023 c
170181 12933 169731 11210 169731 8860 c
@c
F
%CHAR: 184501 0 (u) @t
198393 0 m
198393 2607 L
197006 599 195129 -399 192756 -399 c
191712 -399 190731 -200 189824 200 c
188917 599 188243 1107 187804 1712 c
187359 2322 187051 3064 186874 3942 c
186754 4535 186692 5471 186692 6755 c
186692 17748 L
189698 17748 L
189698 7907 l
189698 6333 189761 5277 189881 4729 c
190075 3936 190474 3320 191085 2864 c
191701 2413 192459 2191 193361 2191 c
194262 2191 195107 2419 195900 2881 c
196693 3343 197252 3976 197577 4769 c
197908 5568 198073 6726 198073 8238 c
198073 17748 L
201080 17748 L
201080 0 L
198393 0 L
@c
F
%CHAR: 203533 0 (l) @t
205724 0 m
205724 24503 L
208730 24503 L
208730 0 L
205724 0 L
@c
F
%CHAR: 211132 0 (e) @t
225537 5716 m
228646 5334 L
228156 3514 227249 2105 225925 1101 c
224596 103 222901 -399 220842 -399 c
218246 -399 216187 399 214669 1997 c
213146 3594 212387 5836 212387 8723 c
212387 11712 213157 14029 214692 15677 c
216232 17326 218223 18153 220676 18153 c
223050 18153 224989 17343 226490 15729 c
227996 14114 228749 11838 228749 8911 c
228749 8729 228743 8461 228732 8107 C
215496 8107 L
215605 6156 216158 4661 217151 3628 c
218143 2590 219376 2071 220859 2071 c
221960 2071 222901 2362 223683 2944 c
224465 3520 225081 4444 225537 5716 C
@c
215662 10583 m
225571 10583 L
225440 12072 225058 13196 224436 13937 c
223478 15095 222234 15677 220711 15677 c
219330 15677 218166 15215 217225 14291 c
216284 13367 215764 12129 215662 10583 C
@c
F
T
@rax %Note: Object
382.35373 461.16000 452.21584 496.09106 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.77613 0.77613 0.00000 @w
/$fm 0 def
382.35373 461.16000 m
452.21584 496.09106 L
S

@rax %Note: Object
446.39405 461.16000 463.85943 496.09106 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.77613 0.77613 0.00000 @w
/$fm 0 def
463.85943 496.09106 m
446.39405 461.16000 L
S

@rax %Note: Object
492.96869 461.16000 522.07795 496.09106 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.77613 0.77613 0.00000 @w
/$fm 0 def
492.96869 496.09106 m
522.07795 461.16000 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
