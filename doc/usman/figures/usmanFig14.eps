%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 295.12545 425.57443 485.27830 560.97496 
%%Creator: CorelDRAW 8
%%Title: \\Inssv1\usershome\tmp\opp-usman\usmanFig14.eps
%%CreationDate: Tue Mar 19 10:26:14 2002
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generisches CMYK Drucker - Profil
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.12
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
295.12545 462.55408 485.27830 462.55521 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
295.12545 462.55465 m
485.27830 462.55465 L
S

@rax %Note: Object
331.69323 462.43276 346.44246 506.43609 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
331.69323 462.43276 m
331.69323 506.43609 L
346.44246 506.43609 L
346.44246 462.43276 L
331.69323 462.43276 L
@c
S

@rax %Note: Object
346.32057 462.43276 361.06951 513.74948 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
346.32057 462.43276 m
346.32057 513.74948 L
361.06951 513.74948 L
361.06951 462.43276 L
346.32057 462.43276 L
@c
S

@rax %Note: Object
360.94762 462.43276 375.69657 499.12243 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
360.94762 462.43276 m
360.94762 499.12243 L
375.69657 499.12243 L
375.69657 462.43276 L
360.94762 462.43276 L
@c
S

@rax %Note: Object
375.57468 462.43276 390.32391 491.80876 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
375.57468 462.43276 m
375.57468 491.80876 L
390.32391 491.80876 L
390.32391 462.43276 L
375.57468 462.43276 L
@c
S

@rax %Note: Object
390.20173 462.43276 434.20507 469.86831 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
390.20173 462.43276 m
390.20173 469.86831 L
434.20507 469.86831 L
434.20507 462.43276 L
390.20173 462.43276 L
@c
S

@rax %Note: Object
334.13131 440.61392 360.94762 460.72630 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
360.94762 440.61392 m
334.13131 460.72630 L
S

@rax %Note: Object
331.69323 458.04444 336.44721 462.55465 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
333.39969 458.04444 m
336.44721 462.18898 L
331.69323 462.55465 L
333.39969 458.04444 L
@c
B

@rax %Note: Object
348.02702 440.61392 360.94762 459.99496 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
360.94762 440.61392 m
348.02702 459.99496 L
S

@rax %Note: Object
346.32057 457.67877 350.70860 462.55465 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
346.44246 457.67877 m
350.70860 460.60441 L
346.32057 462.55465 L
346.44246 457.67877 L
@c
B

@rax %Note: Object
360.94706 440.61392 360.94819 459.50740 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
360.94762 440.61392 m
360.94762 459.50740 L
S

@rax %Note: Object
358.38794 458.53228 363.50731 462.55465 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
358.38794 458.53228 m
363.50731 458.53228 L
360.94762 462.55465 L
358.38794 458.53228 L
@c
B

@rax %Note: Object
339.00633 509.48334 339.00746 550.31754 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
339.00690 550.31754 m
339.00690 509.48334 L
S

@rax %Note: Object
336.44721 506.43609 341.56658 510.45846 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
341.56658 510.45846 m
336.44721 510.45846 L
339.00690 506.43609 L
341.56658 510.45846 L
@c
B

@rax %Note: Object
339.00690 516.55323 352.53694 550.31754 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97512 0.97512 0.00000 @w
/$fm 0 def
339.00690 550.31754 m
352.53694 516.55323 L
S

@rax %Note: Object
349.73348 513.74948 354.48718 518.50346 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
354.48718 518.50346 m
349.73348 516.55323 L
353.63395 513.74948 L
354.48718 518.50346 L
@c
B

@rax 328.12781 425.57443 407.53672 436.64428 @E
[0.00028346 0.00000000 0.00000000 0.00028346 328.15841319 428.18086623] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 43001.00000 z
%CHAR: 0 0 (b) @t
6615 15918 m
8478 18505 10485 19802 12642 19802 c
14613 19802 16333 18956 17802 17272 c
19272 15581 20010 13280 20010 10349 c
20010 6937 18877 4185 16606 2100 c
14663 308 12492 -588 10098 -588 c
8980 -588 7841 -387 6687 22 c
5533 430 4350 1039 3146 1849 C
3146 21773 l
3146 23959 3096 25299 2989 25808 c
2888 26309 2723 26653 2501 26833 c
2272 27019 1992 27105 1656 27105 c
1269 27105 774 26997 186 26768 C
-108 27506 L
5669 29857 L
6615 29857 L
6615 15918 L
@c
6615 14570 m
6615 3067 L
7325 2365 8063 1835 8830 1484 c
9589 1125 10370 946 11173 946 c
12442 946 13631 1648 14728 3046 c
15824 4443 16376 6479 16376 9152 c
16376 11617 15824 13509 14728 14835 c
13631 16154 12384 16821 10980 16821 c
10241 16821 9496 16627 8758 16254 c
8199 15975 7482 15409 6615 14570 C
@c
F
%CHAR: 21501 0 (a) @t
33742 2774 m
31771 1247 30531 366 30022 129 c
29270 -222 28467 -401 27614 -401 c
26281 -401 25185 57 24325 968 c
23465 1878 23035 3075 23035 4558 c
23035 5497 23243 6307 23665 6995 c
24239 7941 25235 8837 26654 9682 c
28073 10521 30438 11539 33742 12743 C
33742 13502 l
33742 15416 33441 16735 32832 17451 c
32223 18161 31334 18519 30173 18519 c
29291 18519 28589 18283 28073 17802 c
27543 17329 27277 16785 27277 16168 c
27320 14950 l
27320 14305 27156 13810 26826 13459 c
26496 13108 26066 12936 25536 12936 c
25013 12936 24590 13115 24260 13481 c
23931 13846 23766 14341 23766 14972 c
23766 16176 24382 17279 25615 18290 c
26847 19293 28575 19802 30804 19802 c
32509 19802 33907 19515 35003 18942 c
35827 18505 36437 17824 36831 16899 c
37082 16297 37204 15072 37204 13208 c
37204 6679 l
37204 4845 37239 3720 37311 3304 c
37383 2895 37497 2616 37655 2480 c
37820 2336 38006 2265 38214 2265 c
38436 2265 38637 2315 38802 2415 c
39096 2594 39662 3110 40500 3949 C
40500 2774 L
38938 674 37440 -380 36007 -380 c
35326 -380 34781 -143 34373 337 c
33964 810 33756 1627 33742 2774 C
@c
33742 4135 m
33742 11467 L
31628 10621 30266 10026 29650 9682 c
28539 9066 27750 8421 27277 7747 c
26797 7074 26561 6343 26561 5540 c
26561 4537 26862 3698 27464 3032 c
28066 2372 28761 2035 29542 2035 c
30610 2035 32008 2738 33742 4135 C
@c
F
%CHAR: 40593 0 (s) @t
54368 19802 m
54368 13251 L
53672 13251 L
53142 15308 52461 16706 51630 17451 c
50791 18189 49731 18562 48448 18562 c
47466 18562 46678 18304 46076 17781 c
45474 17265 45173 16692 45173 16061 c
45173 15280 45395 14606 45839 14047 c
46276 13474 47158 12864 48491 12219 c
51551 10729 l
54396 9346 55815 7518 55815 5246 c
55815 3497 55156 2093 53830 1018 c
52511 -50 51028 -588 49394 -588 c
48211 -588 46871 -380 45359 43 c
44900 179 44520 251 44227 251 c
43904 251 43653 72 43467 -294 C
42779 -294 L
42779 6572 L
43467 6572 L
43861 4615 44614 3139 45717 2143 c
46821 1147 48061 652 49430 652 c
50397 652 51186 932 51795 1498 c
52404 2071 52705 2752 52705 3548 c
52705 4515 52368 5325 51687 5984 c
51014 6644 49659 7475 47624 8486 c
45595 9489 44270 10399 43639 11209 c
43008 12012 42693 13015 42693 14233 c
42693 15817 43238 17143 44320 18204 c
45402 19264 46807 19802 48527 19802 c
49286 19802 50204 19637 51279 19315 c
51995 19107 52468 18999 52705 18999 c
52934 18999 53106 19049 53235 19150 c
53357 19250 53508 19465 53672 19802 C
54368 19802 L
@c
F
%CHAR: 57320 0 (e) @t
61900 11990 m
61885 9131 62573 6894 63978 5268 c
65376 3648 67024 2838 68909 2838 c
70170 2838 71267 3182 72198 3877 c
73130 4565 73904 5755 74535 7432 C
75187 7016 L
74893 5096 74040 3347 72628 1777 c
71209 201 69439 -588 67318 -588 c
65003 -588 63025 308 61384 2107 c
59735 3906 58918 6328 58918 9367 c
58918 12657 59757 15222 61448 17057 c
63132 18899 65247 19823 67798 19823 c
69955 19823 71725 19114 73109 17688 c
74492 16269 75187 14370 75187 11990 C
61900 11990 L
@c
61900 13208 m
70801 13208 L
70729 14441 70586 15308 70356 15810 c
70012 16591 69489 17208 68794 17659 c
68099 18103 67375 18333 66623 18333 c
65462 18333 64422 17881 63505 16978 c
62588 16075 62050 14814 61900 13208 C
@c
F
%CHAR: 87162 0 (p) @t
87119 17322 m
93039 19716 L
93841 19716 L
93841 15222 L
94831 16914 95827 18103 96830 18784 c
97833 19458 98887 19802 99991 19802 c
101926 19802 103531 19042 104821 17530 c
106405 15681 107193 13280 107193 10306 c
107193 6995 106240 4250 104334 2078 c
102771 301 100793 -588 98414 -588 c
97382 -588 96486 -444 95726 -143 c
95167 65 94537 480 93841 1111 C
93841 -4744 l
93841 -6063 93920 -6894 94078 -7253 c
94243 -7611 94522 -7898 94924 -8106 c
95318 -8314 96042 -8421 97095 -8421 C
97095 -9195 L
87019 -9195 L
87019 -8421 L
87542 -8421 l
88309 -8435 88968 -8285 89513 -7977 c
89778 -7826 89986 -7575 90136 -7231 c
90280 -6887 90351 -6020 90351 -4623 c
90351 13567 l
90351 14807 90301 15602 90186 15939 c
90072 16276 89893 16527 89649 16692 c
89405 16864 89076 16942 88653 16942 c
88316 16942 87893 16849 87370 16649 C
87119 17322 L
@c
93841 13982 m
93841 6801 l
93841 5246 93899 4228 94028 3734 c
94221 2924 94702 2215 95468 1598 c
96228 982 97188 674 98357 674 c
99754 674 100886 1218 101754 2308 c
102886 3734 103452 5748 103452 8335 c
103452 11273 102814 13538 101524 15115 c
100628 16211 99561 16756 98335 16756 c
97661 16756 96995 16584 96336 16254 c
95834 15996 95003 15244 93841 13982 C
@c
F
%CHAR: 108663 0 (o) @t
119413 19802 m
122323 19802 124659 18691 126430 16484 c
127927 14592 128673 12420 128673 9976 c
128673 8249 128257 6507 127433 4744 c
126609 2981 125469 1648 124022 753 c
122574 -143 120961 -588 119184 -588 c
116281 -588 113981 566 112275 2874 c
110835 4823 110111 7009 110111 9424 c
110111 11195 110548 12943 111422 14685 c
112297 16426 113450 17716 114877 18548 c
116303 19386 117815 19802 119413 19802 c
@c
118761 18433 m
118023 18433 117278 18218 116525 17774 c
115780 17329 115170 16563 114712 15452 c
114246 14348 114017 12929 114017 11195 c
114017 8392 114576 5977 115686 3949 c
116797 1921 118267 903 120087 903 c
121441 903 122559 1462 123448 2580 c
124330 3705 124767 5626 124767 8357 c
124767 11775 124036 14463 122559 16419 c
121570 17767 120302 18433 118761 18433 c
@c
F
%CHAR: 130164 0 (i) @t
136399 29857 m
136987 29857 137489 29649 137904 29241 c
138313 28825 138521 28323 138521 27736 c
138521 27148 138313 26646 137904 26223 c
137489 25808 136987 25593 136399 25593 c
135811 25593 135310 25808 134887 26223 c
134471 26646 134256 27148 134256 27736 c
134256 28323 134464 28825 134880 29241 c
135288 29649 135797 29857 136399 29857 c
@c
138141 19802 m
138141 4343 l
138141 3139 138227 2344 138406 1942 c
138578 1541 138836 1247 139180 1046 c
139524 853 140155 753 141065 753 C
141065 0 L
131719 0 L
131719 753 L
132658 753 133289 846 133604 1032 c
133927 1211 134185 1512 134371 1935 c
134564 2351 134658 3153 134658 4343 c
134658 11761 l
134658 13846 134593 15194 134471 15810 c
134371 16262 134213 16570 134005 16742 c
133798 16921 133511 17007 133145 17007 c
132751 17007 132278 16899 131719 16692 C
131425 17451 L
137216 19802 L
138141 19802 L
@c
F
%CHAR: 142118 0 (n) @t
149070 15724 m
151320 18440 153470 19802 155513 19802 c
156566 19802 157469 19537 158222 19014 c
158982 18490 159584 17623 160028 16419 c
160336 15581 160487 14291 160487 12556 c
160487 4343 l
160487 3132 160587 2301 160788 1871 c
160938 1519 161189 1247 161533 1046 c
161870 853 162508 753 163432 753 C
163432 0 L
153915 0 L
153915 753 L
154316 753 l
155212 753 155842 896 156194 1168 c
156552 1441 156803 1842 156939 2372 c
156996 2580 157025 3239 157025 4343 c
157025 12219 l
157025 13968 156796 15237 156344 16032 c
155885 16821 155119 17215 154044 17215 c
152381 17215 150718 16305 149070 14484 C
149070 4343 l
149070 3046 149141 2243 149299 1935 c
149493 1527 149765 1226 150109 1039 c
150453 853 151148 753 152195 753 C
152195 0 L
142684 0 L
142684 753 L
143107 753 l
144082 753 144748 1003 145092 1498 c
145429 2000 145601 2946 145601 4343 c
145601 11488 l
145601 13796 145551 15201 145443 15703 c
145343 16211 145178 16555 144963 16735 c
144748 16914 144454 17007 144089 17007 c
143702 17007 143229 16899 142684 16692 C
142369 17451 L
148167 19802 L
149070 19802 L
149070 15724 L
@c
F
%CHAR: 163619 0 (t) @t
170549 25550 m
170549 19236 L
175043 19236 L
175043 17767 L
170549 17767 L
170549 5289 l
170549 4042 170728 3204 171087 2774 c
171438 2336 171897 2121 172456 2121 c
172922 2121 173366 2265 173803 2551 c
174233 2838 174570 3261 174814 3820 C
175631 3820 L
175136 2451 174448 1419 173552 724 c
172656 29 171732 -315 170779 -315 c
170134 -315 169503 -136 168887 222 c
168270 581 167819 1089 167525 1756 c
167231 2415 167081 3440 167081 4830 c
167081 17767 L
164042 17767 L
164042 18455 L
164809 18763 165597 19286 166400 20017 c
167202 20755 167926 21630 168550 22633 c
168872 23163 169324 24138 169897 25550 C
170549 25550 L
@c
F
%CHAR: 186323 0 (0) @t
187878 14068 m
187878 17315 188366 20110 189347 22454 c
190329 24797 191626 26546 193253 27693 c
194515 28603 195812 29062 197159 29062 c
199338 29062 201302 27943 203036 25722 c
205208 22963 206290 19229 206290 14506 c
206290 11202 205817 8400 204864 6092 c
203910 3777 202699 2100 201223 1061 c
199746 14 198320 -502 196944 -502 c
194235 -502 191970 1097 190164 4307 c
188638 7009 187878 10263 187878 14068 c
@c
191992 13545 m
191992 9625 192472 6421 193440 3949 c
194235 1863 195432 817 197009 817 c
197768 817 198550 1161 199359 1835 c
200176 2516 200793 3655 201209 5246 c
201854 7654 202176 11051 202176 15430 c
202176 18677 201839 21386 201166 23557 c
200664 25170 200012 26309 199216 26983 c
198643 27442 197948 27671 197138 27671 c
196185 27671 195339 27248 194594 26395 c
193590 25234 192902 23407 192537 20913 c
192171 18419 191992 15968 191992 13545 c
@c
F
%CHAR: 207824 0 (,) @t
210132 -7160 m
210132 -6235 L
211572 -5762 212690 -5024 213486 -4021 c
214274 -3017 214668 -1957 214668 -839 c
214668 -573 214604 -351 214482 -165 c
214382 -43 214281 22 214188 22 c
214030 22 213694 -122 213178 -401 c
212927 -523 212662 -588 212382 -588 c
211694 -588 211149 -387 210741 22 c
210340 430 210132 989 210132 1699 c
210132 2387 210397 2974 210920 3462 c
211443 3956 212088 4200 212841 4200 c
213765 4200 214589 3798 215306 2989 c
216030 2186 216388 1118 216388 -208 c
216388 -1648 215887 -2989 214890 -4228 c
213887 -5468 212303 -6443 210132 -7160 C
@c
F
%CHAR: 218574 0 (1) @t
223612 25679 m
230543 29062 L
231238 29062 L
231238 5017 l
231238 3426 231302 2430 231431 2035 c
231567 1648 231847 1347 232263 1132 c
232685 925 233538 803 234828 774 C
234828 0 L
224114 0 L
224114 774 L
225461 803 226329 917 226723 1125 c
227110 1326 227382 1598 227540 1942 c
227690 2286 227769 3311 227769 5017 c
227769 20390 l
227769 22461 227697 23787 227561 24374 c
227461 24826 227282 25156 227024 25363 c
226766 25571 226458 25679 226092 25679 c
225576 25679 224852 25464 223928 25027 C
223612 25679 L
@c
F
%CHAR: 240075 0 (,) @t
242383 -7160 m
242383 -6235 L
243823 -5762 244941 -5024 245737 -4021 c
246525 -3017 246919 -1957 246919 -839 c
246919 -573 246855 -351 246733 -165 c
246633 -43 246532 22 246439 22 c
246281 22 245945 -122 245429 -401 c
245178 -523 244913 -588 244633 -588 c
243945 -588 243400 -387 242992 22 c
242591 430 242383 989 242383 1699 c
242383 2387 242648 2974 243171 3462 c
243694 3956 244339 4200 245092 4200 c
246016 4200 246840 3798 247557 2989 c
248281 2186 248639 1118 248639 -208 c
248639 -1648 248138 -2989 247141 -4228 c
246138 -5468 244554 -6443 242383 -7160 C
@c
F
%CHAR: 250825 0 (.) @t
256200 4071 m
256859 4071 257411 3849 257856 3390 c
258307 2938 258529 2387 258529 1742 c
258529 1097 258300 552 257848 93 c
257397 -358 256845 -588 256200 -588 c
255555 -588 255003 -358 254552 93 c
254100 552 253871 1097 253871 1742 c
253871 2401 254100 2953 254552 3404 c
255003 3849 255555 4071 256200 4071 c
@c
F
%CHAR: 261575 0 (.) @t
266950 4071 m
267609 4071 268161 3849 268606 3390 c
269057 2938 269279 2387 269279 1742 c
269279 1097 269050 552 268598 93 c
268147 -358 267595 -588 266950 -588 c
266305 -588 265753 -358 265302 93 c
264850 552 264621 1097 264621 1742 c
264621 2401 264850 2953 265302 3404 c
265753 3849 266305 4071 266950 4071 c
@c
F
%CHAR: 272325 0 (.) @t
277700 4071 m
278359 4071 278911 3849 279356 3390 c
279807 2938 280029 2387 280029 1742 c
280029 1097 279800 552 279348 93 c
278897 -358 278345 -588 277700 -588 c
277055 -588 276503 -358 276052 93 c
275600 552 275371 1097 275371 1742 c
275371 2401 275600 2953 276052 3404 c
276503 3849 277055 4071 277700 4071 c
@c
F
T
@rax 322.30743 550.48195 369.51789 560.97496 @E
[0.00028346 0.00000000 0.00000000 0.00028346 322.30742128 552.51153884] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 43001.00000 z
%CHAR: 0 0 (c) @t
17681 7310 m
17165 4773 16147 2824 14635 1462 c
13122 93 11453 -588 9618 -588 c
7432 -588 5526 330 3906 2164 c
2279 3999 1469 6472 1469 9596 c
1469 12621 2372 15079 4171 16964 c
5970 18856 8127 19802 10643 19802 c
12535 19802 14090 19300 15308 18297 c
16527 17301 17136 16262 17136 15179 c
17136 14649 16964 14219 16620 13889 c
16276 13560 15796 13395 15179 13395 c
14355 13395 13732 13660 13309 14190 c
13072 14484 12915 15050 12843 15875 c
12764 16699 12477 17329 11990 17767 c
11496 18182 10822 18390 9955 18390 c
8550 18390 7425 17874 6572 16842 c
5440 15466 4873 13653 4873 11402 c
4873 9109 5432 7081 6565 5325 c
7690 3569 9209 2688 11130 2688 c
12499 2688 13732 3153 14821 4092 c
15595 4737 16340 5905 17071 7604 C
17681 7310 L
@c
F
%CHAR: 19092 0 (e) @t
23672 11990 m
23657 9131 24345 6894 25750 5268 c
27148 3648 28796 2838 30681 2838 c
31942 2838 33039 3182 33970 3877 c
34902 4565 35676 5755 36307 7432 C
36959 7016 L
36665 5096 35812 3347 34400 1777 c
32981 201 31211 -588 29090 -588 c
26775 -588 24797 308 23156 2107 c
21507 3906 20690 6328 20690 9367 c
20690 12657 21529 15222 23220 17057 c
24904 18899 27019 19823 29570 19823 c
31727 19823 33497 19114 34881 17688 c
36264 16269 36959 14370 36959 11990 C
23672 11990 L
@c
23672 13208 m
32573 13208 L
32501 14441 32358 15308 32128 15810 c
31784 16591 31261 17208 30566 17659 c
29871 18103 29147 18333 28395 18333 c
27234 18333 26194 17881 25277 16978 c
24360 16075 23822 14814 23672 13208 C
@c
F
%CHAR: 38184 0 (l) @t
46139 29857 m
46139 4343 l
46139 3139 46232 2344 46404 1949 c
46576 1562 46849 1261 47214 1061 c
47580 860 48253 753 49250 753 C
49250 0 L
39825 0 L
39825 753 L
40707 753 41309 846 41624 1032 c
41947 1211 42205 1512 42384 1935 c
42563 2351 42656 3153 42656 4343 c
42656 21816 l
42656 23987 42606 25320 42513 25815 c
42412 26309 42255 26653 42040 26833 c
41818 27019 41545 27105 41208 27105 c
40843 27105 40384 26997 39825 26768 C
39467 27506 L
45200 29857 L
46139 29857 L
@c
F
%CHAR: 50138 0 (l) @t
58093 29857 m
58093 4343 l
58093 3139 58186 2344 58358 1949 c
58530 1562 58803 1261 59168 1061 c
59534 860 60207 753 61204 753 C
61204 0 L
51779 0 L
51779 753 L
52661 753 53263 846 53578 1032 c
53901 1211 54159 1512 54338 1935 c
54517 2351 54610 3153 54610 4343 c
54610 21816 l
54610 23987 54560 25320 54467 25815 c
54366 26309 54209 26653 53994 26833 c
53772 27019 53499 27105 53162 27105 c
52797 27105 52338 26997 51779 26768 C
51421 27506 L
57154 29857 L
58093 29857 L
@c
F
%CHAR: 72842 0 (0) @t
74397 14068 m
74397 17315 74885 20110 75866 22454 c
76848 24797 78145 26546 79772 27693 c
81034 28603 82331 29062 83678 29062 c
85857 29062 87821 27943 89555 25722 c
91727 22963 92809 19229 92809 14506 c
92809 11202 92336 8400 91383 6092 c
90429 3777 89218 2100 87742 1061 c
86265 14 84839 -502 83463 -502 c
80754 -502 78489 1097 76683 4307 c
75157 7009 74397 10263 74397 14068 c
@c
78511 13545 m
78511 9625 78991 6421 79959 3949 c
80754 1863 81951 817 83528 817 c
84287 817 85069 1161 85878 1835 c
86695 2516 87312 3655 87728 5246 c
88373 7654 88695 11051 88695 15430 c
88695 18677 88358 21386 87685 23557 c
87183 25170 86531 26309 85735 26983 c
85162 27442 84467 27671 83657 27671 c
82704 27671 81858 27248 81113 26395 c
80109 25234 79421 23407 79056 20913 c
78690 18419 78511 15968 78511 13545 c
@c
F
%CHAR: 94343 0 (,) @t
96651 -7160 m
96651 -6235 L
98091 -5762 99209 -5024 100005 -4021 c
100793 -3017 101187 -1957 101187 -839 c
101187 -573 101123 -351 101001 -165 c
100901 -43 100800 22 100707 22 c
100549 22 100213 -122 99697 -401 c
99446 -523 99181 -588 98901 -588 c
98213 -588 97668 -387 97260 22 c
96859 430 96651 989 96651 1699 c
96651 2387 96916 2974 97439 3462 c
97962 3956 98607 4200 99360 4200 c
100284 4200 101108 3798 101825 2989 c
102549 2186 102907 1118 102907 -208 c
102907 -1648 102406 -2989 101409 -4228 c
100406 -5468 98822 -6443 96651 -7160 C
@c
F
%CHAR: 105093 0 (1) @t
110131 25679 m
117062 29062 L
117757 29062 L
117757 5017 l
117757 3426 117821 2430 117950 2035 c
118086 1648 118366 1347 118782 1132 c
119204 925 120057 803 121347 774 C
121347 0 L
110633 0 L
110633 774 L
111980 803 112848 917 113242 1125 c
113629 1326 113901 1598 114059 1942 c
114209 2286 114288 3311 114288 5017 c
114288 20390 l
114288 22461 114216 23787 114080 24374 c
113980 24826 113801 25156 113543 25363 c
113285 25571 112977 25679 112611 25679 c
112095 25679 111371 25464 110447 25027 C
110131 25679 L
@c
F
%CHAR: 126594 0 (,) @t
128902 -7160 m
128902 -6235 L
130342 -5762 131460 -5024 132256 -4021 c
133044 -3017 133438 -1957 133438 -839 c
133438 -573 133374 -351 133252 -165 c
133152 -43 133051 22 132958 22 c
132800 22 132464 -122 131948 -401 c
131697 -523 131432 -588 131152 -588 c
130464 -588 129919 -387 129511 22 c
129110 430 128902 989 128902 1699 c
128902 2387 129167 2974 129690 3462 c
130213 3956 130858 4200 131611 4200 c
132535 4200 133359 3798 134076 2989 c
134800 2186 135158 1118 135158 -208 c
135158 -1648 134657 -2989 133660 -4228 c
132657 -5468 131073 -6443 128902 -7160 C
@c
F
%CHAR: 137344 0 (.) @t
142719 4071 m
143378 4071 143930 3849 144375 3390 c
144826 2938 145048 2387 145048 1742 c
145048 1097 144819 552 144367 93 c
143916 -358 143364 -588 142719 -588 c
142074 -588 141522 -358 141071 93 c
140619 552 140390 1097 140390 1742 c
140390 2401 140619 2953 141071 3404 c
141522 3849 142074 4071 142719 4071 c
@c
F
%CHAR: 148094 0 (.) @t
153469 4071 m
154128 4071 154680 3849 155125 3390 c
155576 2938 155798 2387 155798 1742 c
155798 1097 155569 552 155117 93 c
154666 -358 154114 -588 153469 -588 c
152824 -588 152272 -358 151821 93 c
151369 552 151140 1097 151140 1742 c
151140 2401 151369 2953 151821 3404 c
152272 3849 152824 4071 153469 4071 c
@c
F
%CHAR: 158844 0 (.) @t
164219 4071 m
164878 4071 165430 3849 165875 3390 c
166326 2938 166548 2387 166548 1742 c
166548 1097 166319 552 165867 93 c
165416 -358 164864 -588 164219 -588 c
163574 -588 163022 -358 162571 93 c
162119 552 161890 1097 161890 1742 c
161890 2401 162119 2953 162571 3404 c
163022 3849 163574 4071 164219 4071 c
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
