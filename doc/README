What is OMNeT++?
~~~~~~~~~~~~~~~~
(last updated: June 7, 1999)

OMNeT++ is an object-oriented modular discrete event simulator.
An OMNeT++ model consists of hierarchically nested modules which
communicate though gates and connections. The user defines the
module structure in the NED language.

The modules on the lowest level (termed "simple modules") contain
the algorithms. Those are written in C++ and use the simulation
object library. Simple modules appear to execute as something like
threads within a simulation. (In fact they use non-preemptive
scheduling; they are implemented as coroutines).

OMNeT++ is written in C++ and it is portable: it runs on any platform
where there's a C++ compiler. It has a Tcl/Tk user interface which is
supported on under Unix/X and NT/Win95/Win98. There's also a platform-
independent command-line user interface for batch execution.
There is also a text-mode windowing user interface (Turbo Vision).

OMNeT++ has a graphical topology editor called GNED and also a tool
called Plove for analyzing and plotting simulation output. Both tools
are written with Tcl/Tk.

We have extended OMNeT++ to execute in parallel using the popular
PVM library (Parallel Virtual Machine), for studying different
synchronisation methods.

OMNeT++ Home Page: http://www.hit.bme.hu/phd/vargaa/omnetpp.htm


What you'll find in the OMNeT++ directory
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The omnetpp directory contains the following subdirectories.
The simulation system itself:

omnetpp/              OMNeT++ root directory
   bin/               (soft links to) executables
   lib/               simulation library files
   doc/               readme, license etc.
   html/              manuals in HTML format
   src/
       nedc/          system description compiler
       gned/          graphical NED editor
       plove/         output vector analyzer and plotting tool
       sim/           simulation kernel
            std/      files for non-distributed execution
            pvm/      files for distributed execution over PVM
       envir/         common code for user interfaces
       cmdenv/        command-line user interface
       tkenv/         Tcl/Tk user interface
       tvenv/         Turbo Vision user interface
       utils/         makefile-autocreator etc

Sample simulations are within the samples directory.
Each of the sample directories contain a network description
(.ned file) and corresponding simple module code  (.h, .cc files).
UNIX makefiles and Borland C++ 3.1 project files are included.

omnetpp/
   samples/           directories for sample simulations
       nim/           a simple two-player game
       hcube/         hypercube network with deflection routing
       token/         Token-Ring network
       fddi/          an accurate FDDI MAC simulation
       hist/          demo of the histogram classes
       dyna/          dynamic module creation (client-server network)
       pvmex/         demonstrates distributed execution
       fifo1/         single-server queue
       fifo2/         another version of fifo, now with handleMessage() and FSM


The example programs
~~~~~~~~~~~~~~~~~~~~

Try them in the following order:
      nim -- fifo1 -- token -- hist -- hcube - dyna -- fifo2 -- fddi -- pvmex

Installation
~~~~~~~~~~~~

For installation instructions, read install.txt!

Legal notes
~~~~~~~~~~~
Please read the license file in the doc directory. For those who
hate reading stuff like that, here's the meat of it:

OMNeT++ can be freely used, copied, distributed and modified in educational
institutions, for educational and research purposes. For commercial usage,
please contact the authors.

If you use OMNeT++ in any work, please mention OMNeT++ in the resulting
document(s) (report, paper, article, book etc.), and let the authors know
about your work.

Authors
~~~~~~~

OMNeT++ has originally been developed at the Technical University of Budapest,
Department of Telecommunications (BME-HIT). The primary author and
maintainer is currently not affiliated with the University.

Here's a list of the people who have or had anything to do with OMNeT++:

Primary author and maintainer:
        Andras Varga            vandras@sch.bme.hu,vargaa@hit.bme.hu
Advisor:
        Gyorgy Pongor   BME-HIT : pongor@hit.bme.hu
Old NeD compiler, until 1993:
        Akos Kun                BME
Initial revision of JAR compiler, sample simulations; summer 1995:
        Jan Heijmans            TU Delft
        Alex Paalvast           TU Delft
        Robert van der Leij     TU Delft
New feaures, testing, new examples; fall 1995:
        Maurits Andre           TU Delft, M.J.A.Andre@twi.tudelft.nl
        George van Montfort     TU Delft, G.P.R.vanMontfort@twi.tudelft.nl
        Gerard van de Weerd     TU Delft, G.vandeweerd@twi.tudelft.nl
JAR support for distributed execution; also current user:
        Gabor Lencse            BME-HIT
Initial revision of PVM support (as final project), spring 1996:
        Zoltan Vass             BME-HIT


Feedback requested!
~~~~~~~~~~~~~~~~~~~

ANY note, opinion, suggestion, bug reports/bug fixes and contributions
are the most WELCOME! We'd like to hear your reflections.

The authors can be contacted via e-mail: vandras@sch.bme.hu, vargaa@hit.bme.hu

