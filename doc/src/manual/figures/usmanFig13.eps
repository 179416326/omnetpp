%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 295.12290 423.44731 527.87197 452.97524 
%%Creator: CorelDRAW 8
%%Title: \\Inssv1\usershome\tmp\opp-usman\usmanFig13.eps
%%CreationDate: Tue Mar 19 10:25:54 2002
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generisches CMYK Drucker - Profil
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.12
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
295.12290 445.70126 527.87197 445.70239 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.96973 0.96973 0.00000 @w
/$fm 0 def
295.12290 445.70183 m
527.87197 445.70183 L
S

@rax 478.77647 423.44731 525.60170 434.48031 @E
[0.00028346 0.00000000 0.00000000 0.00028346 478.77645493 426.06366945] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 42764.00000 z
%CHAR: 0 0 (o) @t
19771 12359 m
19771 10270 19222 8204 18118 6158 c
17006 4112 15466 2495 13492 1297 c
11511 100 9593 -499 7726 -499 c
5816 -499 4262 107 3058 1326 c
1853 2544 1254 4120 1254 6058 c
1254 8104 1839 10156 3015 12216 c
4191 14276 5766 15901 7733 17098 c
9707 18296 11610 18895 13449 18895 c
15288 18895 16799 18289 17989 17077 c
19180 15873 19771 14297 19771 12359 c
@c
16307 13806 m
16307 15096 15994 16086 15359 16778 c
14725 17469 13905 17811 12908 17811 c
10855 17811 8973 16343 7256 13414 c
5538 10484 4676 7576 4676 4676 c
4676 3357 5011 2338 5680 1618 c
6350 898 7191 542 8204 542 c
10171 542 12010 2003 13727 4918 c
15445 7833 16307 10798 16307 13806 c
@c
F
%CHAR: 21382 0 (v) @t
22301 17605 m
28338 18895 L
28766 17868 29115 16813 29379 15744 c
29757 14169 30063 12309 30298 10149 c
30412 9059 30562 6764 30754 3257 C
32501 5182 33534 6372 33869 6828 c
35708 9323 36763 10784 37041 11211 c
37504 11953 37825 12601 38003 13157 c
38160 13570 38231 13970 38231 14347 c
38231 14704 37910 15124 37262 15595 c
36613 16072 36292 16600 36292 17184 c
36292 17633 36471 18025 36827 18374 c
37176 18724 37597 18895 38088 18895 c
38673 18895 39186 18659 39635 18175 c
40077 17697 40298 17098 40298 16393 c
40298 15680 40191 14996 39963 14347 c
39607 13285 38929 11995 37939 10470 c
36955 8945 35359 6906 33156 4341 c
32878 4020 31332 2409 28524 -499 C
27754 -499 L
27419 8310 26720 13813 25666 15994 c
25316 16706 24739 17063 23926 17063 c
23584 17063 23085 16999 22444 16870 C
22301 17605 L
@c
F
%CHAR: 40369 0 (e) @t
45465 7876 m
45365 7177 45315 6600 45315 6137 c
45315 4904 45757 3849 46634 2972 c
47511 2103 48573 1668 49827 1668 c
50832 1668 51794 1874 52721 2288 c
53647 2694 55023 3606 56847 5011 C
57282 4405 L
53982 1133 50839 -499 47846 -499 c
45814 -499 44282 143 43248 1418 c
42222 2701 41709 4112 41709 5659 c
41709 7733 42343 9857 43626 12031 c
44909 14198 46513 15887 48451 17091 c
50383 18296 52379 18895 54424 18895 c
55899 18895 56990 18595 57703 17997 c
58408 17398 58765 16692 58765 15873 c
58765 14711 58308 13606 57389 12551 c
56177 11169 54396 10057 52044 9209 c
50483 8638 48287 8189 45465 7876 C
@c
45608 8895 m
47667 9130 49349 9536 50639 10107 c
52357 10869 53640 11789 54495 12851 c
55351 13920 55778 14932 55778 15894 c
55778 16478 55593 16949 55222 17312 c
54859 17676 54331 17854 53647 17854 c
52229 17854 50725 17098 49128 15587 c
47532 14076 46363 11846 45608 8895 C
@c
F
%CHAR: 59356 0 (r) @t
61587 17726 m
68793 18895 L
65785 8752 L
68222 12915 70439 15823 72428 17476 c
73554 18424 74473 18895 75186 18895 c
75642 18895 76005 18759 76269 18488 c
76533 18217 76668 17825 76668 17312 c
76668 16393 76433 15516 75956 14682 c
75621 14055 75143 13741 74516 13741 c
74195 13741 73917 13841 73689 14055 c
73461 14262 73318 14583 73261 15010 c
73233 15281 73169 15452 73076 15538 c
72962 15644 72834 15702 72677 15702 c
72442 15702 72221 15644 72007 15538 c
71651 15338 71095 14796 70361 13905 c
69206 12544 67952 10777 66604 8603 c
66020 7683 65514 6650 65101 5495 c
64516 3906 64181 2951 64096 2630 c
63426 0 L
60233 0 L
64096 12965 l
64545 14468 64766 15545 64766 16186 c
64766 16436 64659 16642 64452 16806 c
64174 17034 63803 17141 63347 17141 c
63055 17141 62513 17077 61737 16956 C
61587 17726 L
@c
F
%CHAR: 75991 0 (f) @t
88663 18396 m
88293 17020 L
85242 17020 L
82947 7890 l
81928 3870 80902 755 79875 -1440 c
78414 -4547 76839 -6685 75157 -7869 c
73874 -8774 72591 -9230 71315 -9230 c
70482 -9230 69769 -8980 69184 -8474 c
68750 -8132 68536 -7676 68536 -7120 c
68536 -6678 68714 -6286 69070 -5958 c
69427 -5638 69861 -5474 70375 -5474 c
70752 -5474 71066 -5588 71323 -5823 c
71579 -6065 71707 -6336 71707 -6643 c
71707 -6949 71565 -7234 71273 -7498 c
71052 -7690 70938 -7840 70938 -7933 c
70938 -8061 70988 -8161 71087 -8225 c
71209 -8325 71401 -8375 71672 -8375 c
72271 -8375 72898 -8182 73561 -7812 c
74216 -7434 74808 -6871 75321 -6130 c
75841 -5381 76326 -4305 76782 -2901 c
76982 -2316 77502 -392 78350 2879 c
81985 17020 L
78350 17020 L
78642 18396 L
79797 18396 80602 18474 81066 18638 c
81522 18795 81942 19101 82327 19557 c
82712 20006 83211 20855 83824 22095 c
84644 23763 85428 25060 86183 25979 c
87209 27212 88293 28146 89426 28766 c
90559 29386 91628 29692 92633 29692 c
93688 29692 94543 29422 95178 28887 c
95819 28353 96140 27768 96140 27148 c
96140 26656 95983 26250 95662 25915 c
95342 25580 94928 25409 94429 25409 c
93995 25409 93645 25537 93375 25787 c
93104 26036 92968 26335 92968 26685 c
92968 26906 93061 27184 93239 27512 c
93417 27839 93510 28060 93510 28167 c
93510 28367 93446 28509 93325 28609 c
93139 28745 92876 28816 92526 28816 c
91650 28816 90866 28538 90167 27982 c
89234 27241 88400 26086 87666 24511 c
87288 23691 86596 21653 85599 18396 C
88663 18396 L
@c
F
%CHAR: 87879 0 (l) @t
100594 29692 m
93453 4847 l
93103 3606 92932 2844 92932 2566 c
92932 2359 92996 2188 93132 2046 c
93260 1910 93424 1839 93624 1839 c
93887 1839 94172 1953 94479 2195 c
95199 2765 95961 3649 96753 4847 C
97380 4198 L
96054 2331 94842 1033 93723 292 c
92904 -235 92127 -499 91386 -499 c
90858 -499 90416 -321 90060 43 c
89704 406 89525 820 89525 1297 c
89525 1796 89753 2822 90195 4383 c
95854 23969 l
96318 25573 96546 26492 96546 26728 c
96546 27062 96410 27333 96147 27554 c
95883 27768 95470 27875 94914 27875 c
94593 27875 94108 27825 93453 27732 C
93453 28502 L
100594 29692 L
@c
F
%CHAR: 99767 0 (o) @t
119538 12359 m
119538 10270 118989 8204 117885 6158 c
116773 4112 115233 2495 113259 1297 c
111278 100 109360 -499 107493 -499 c
105583 -499 104029 107 102825 1326 c
101620 2544 101021 4120 101021 6058 c
101021 8104 101606 10156 102782 12216 c
103958 14276 105533 15901 107500 17098 c
109474 18296 111377 18895 113216 18895 c
115055 18895 116566 18289 117756 17077 c
118947 15873 119538 14297 119538 12359 c
@c
116074 13806 m
116074 15096 115761 16086 115126 16778 c
114492 17469 113672 17811 112675 17811 c
110622 17811 108740 16343 107023 13414 c
105305 10484 104443 7576 104443 4676 c
104443 3357 104778 2338 105447 1618 c
106117 898 106958 542 107971 542 c
109938 542 111777 2003 113494 4918 c
115212 7833 116074 10798 116074 13806 c
@c
F
%CHAR: 121149 0 (w) @t
139067 18895 m
140507 3236 L
142930 6080 144862 8745 146308 11233 c
147157 12694 147584 13756 147584 14404 c
147584 14711 147513 14989 147378 15224 c
147321 15345 147100 15530 146715 15773 c
146337 16022 146066 16272 145916 16528 c
145760 16785 145681 17063 145681 17355 c
145681 17783 145845 18146 146166 18446 c
146487 18745 146893 18895 147399 18895 c
147969 18895 148454 18688 148846 18260 c
149245 17833 149445 17270 149445 16557 c
149445 15837 149338 15160 149131 14533 c
148710 13335 147898 11789 146686 9900 c
145211 7626 143693 5524 142125 3578 c
140557 1639 139395 278 138625 -499 C
137855 -499 L
136494 13948 L
127870 -499 L
126951 -499 L
126858 5445 126559 10135 126053 13570 c
125846 15003 125497 15944 125012 16393 c
124663 16714 124135 16870 123423 16870 c
123023 16870 122503 16828 121883 16749 C
121883 17498 L
127870 18895 L
128711 16571 129253 13000 129502 8182 c
129588 6365 129652 5210 129709 4740 C
138290 18895 L
139067 18895 L
@c
F
%CHAR: 149673 0 (s) @t
165189 18895 m
163913 12487 L
163144 12487 L
163072 14354 162673 15709 161953 16557 c
161226 17405 160328 17833 159259 17833 c
158397 17833 157706 17597 157199 17120 c
156693 16649 156437 16079 156437 15409 c
156437 14953 156537 14511 156743 14098 c
156943 13677 157385 13093 158069 12337 c
159879 10363 161048 8874 161576 7876 c
162103 6871 162367 5923 162367 5032 c
162367 3585 161768 2302 160564 1183 c
159359 57 157841 -499 156002 -499 c
154997 -499 153842 -264 152531 207 c
152075 378 151719 456 151469 456 c
150842 456 150371 143 150051 -499 C
149274 -499 L
150550 6265 L
151319 6265 L
151405 4148 151847 2651 152638 1775 c
153429 898 154520 456 155895 456 c
156950 456 157791 755 158411 1347 c
159031 1939 159338 2666 159338 3528 c
159338 4084 159231 4604 159010 5075 c
158618 5909 157798 7063 156551 8539 c
155311 10014 154505 11126 154149 11860 c
153800 12601 153622 13335 153622 14076 c
153622 15424 154113 16564 155090 17498 c
156073 18431 157335 18895 158882 18895 c
159331 18895 159730 18859 160093 18795 c
160286 18752 160742 18595 161462 18324 c
162174 18054 162652 17918 162894 17918 c
163486 17918 163992 18246 164391 18895 C
165189 18895 L
@c
F
T
@rax 302.63868 423.44731 356.20384 434.48031 @E
[0.00028346 0.00000000 0.00000000 0.00028346 302.63866609 426.06366945] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 42764.00000 z
%CHAR: 0 0 (u) @t
20128 18396 m
16493 5951 l
15951 4098 15680 2929 15680 2445 c
15680 2195 15730 2010 15816 1889 c
15908 1775 16029 1711 16186 1711 c
16421 1711 16678 1817 16963 2038 c
17248 2252 17968 3115 19130 4611 C
19750 4134 L
18652 2395 17526 1112 16371 292 c
15602 -235 14868 -499 14155 -499 c
13613 -499 13193 -349 12886 -43 c
12580 264 12423 663 12423 1148 c
12423 1625 12516 2245 12694 3029 c
12922 4055 13549 6301 14597 9750 C
12231 5866 10249 3186 8653 1711 c
7063 235 5581 -499 4219 -499 c
3578 -499 3036 -278 2587 164 c
2145 613 1924 1176 1924 1860 c
1924 2901 2231 4504 2837 6664 c
4654 13114 l
5103 14661 5324 15616 5324 15994 c
5324 16165 5267 16307 5146 16421 c
5032 16543 4904 16600 4761 16600 c
4469 16600 4177 16493 3884 16286 c
3592 16079 2929 15302 1903 13970 C
1254 14426 L
2295 16044 3407 17234 4576 17997 c
5467 18595 6286 18895 7035 18895 c
7555 18895 7975 18731 8303 18410 c
8624 18082 8788 17662 8788 17141 c
8788 16393 8510 15046 7954 13114 c
5994 6372 l
5452 4533 5182 3371 5182 2879 c
5182 2616 5267 2402 5438 2245 c
5616 2081 5844 2003 6137 2003 c
6600 2003 7199 2231 7933 2694 c
8674 3150 9658 4169 10891 5752 c
12124 7334 13136 8817 13941 10199 c
14739 11582 15595 13791 16493 16806 c
16956 18396 L
20128 18396 L
@c
F
%CHAR: 21382 0 (n) @t
30819 18895 m
28046 9394 L
30648 13278 32643 15837 34026 17063 c
35409 18282 36741 18895 38024 18895 c
38723 18895 39293 18666 39749 18210 c
40198 17747 40426 17148 40426 16414 c
40426 15580 40227 14461 39820 13072 c
37276 4284 l
36977 3264 36834 2644 36834 2423 c
36834 2231 36891 2067 36998 1932 c
37112 1796 37233 1732 37354 1732 c
37525 1732 37725 1825 37960 2003 c
38701 2587 39507 3478 40383 4676 C
41032 4284 L
39735 2430 38509 1105 37354 314 c
36549 -228 35822 -499 35188 -499 c
34667 -499 34261 -342 33955 -29 c
33648 285 33491 706 33491 1233 c
33491 1903 33727 3050 34204 4676 c
36627 13072 l
36934 14112 37084 14932 37084 15516 c
37084 15794 36991 16022 36813 16193 c
36634 16364 36406 16457 36143 16457 c
35758 16457 35287 16286 34746 15951 c
33712 15324 32643 14290 31531 12851 c
30419 11411 29243 9572 28003 7327 c
27348 6144 26806 4854 26371 3443 c
25331 0 L
22195 0 L
25993 13072 l
26442 14647 26663 15595 26663 15908 c
26663 16215 26542 16486 26300 16714 c
26058 16942 25751 17063 25395 17063 c
25224 17063 24931 17034 24511 16977 c
23720 16849 L
23599 17605 L
30819 18895 L
@c
F
%CHAR: 42764 0 (d) @t
65899 29692 m
58715 5053 l
58330 3713 58131 2837 58131 2423 c
58131 2281 58195 2152 58309 2024 c
58430 1903 58551 1839 58672 1839 c
58858 1839 59071 1932 59321 2110 c
59798 2445 60589 3279 61701 4611 C
62414 4177 L
61409 2787 60397 1654 59378 791 c
58351 -71 57396 -499 56505 -499 c
56028 -499 55643 -335 55337 0 c
55030 335 54873 805 54873 1418 c
54873 2217 55087 3279 55501 4611 c
56313 7206 L
54296 4084 52457 1932 50804 734 c
49663 -93 48566 -499 47525 -499 c
46470 -499 45544 -29 44760 905 c
43969 1846 43577 3122 43577 4740 c
43577 6814 44239 9030 45565 11382 c
46884 13734 48630 15644 50804 17120 c
52514 18303 54089 18895 55522 18895 c
56277 18895 56919 18745 57468 18438 c
58009 18132 58544 17626 59071 16913 C
61117 24183 l
61274 24696 61395 25102 61495 25409 c
61659 25972 61744 26428 61744 26792 c
61744 27084 61637 27326 61430 27519 c
61138 27761 60761 27875 60304 27875 c
59984 27875 59456 27825 58715 27732 C
58715 28502 L
65899 29692 L
@c
58152 14868 m
58152 15759 57895 16478 57382 17020 c
56869 17562 56213 17833 55415 17833 c
53662 17833 51837 16386 49934 13492 c
48038 10591 47083 7826 47083 5182 c
47083 4134 47318 3336 47775 2787 c
48238 2238 48787 1960 49428 1960 c
50875 1960 52692 3528 54873 6664 c
57061 9793 58152 12530 58152 14868 c
@c
F
%CHAR: 64146 0 (e) @t
69242 7876 m
69142 7177 69092 6600 69092 6137 c
69092 4904 69534 3849 70411 2972 c
71288 2103 72350 1668 73604 1668 c
74609 1668 75571 1874 76498 2288 c
77424 2694 78800 3606 80624 5011 C
81059 4405 L
77759 1133 74616 -499 71623 -499 c
69591 -499 68059 143 67025 1418 c
65999 2701 65486 4112 65486 5659 c
65486 7733 66120 9857 67403 12031 c
68686 14198 70290 15887 72228 17091 c
74160 18296 76156 18895 78201 18895 c
79676 18895 80767 18595 81480 17997 c
82185 17398 82542 16692 82542 15873 c
82542 14711 82085 13606 81166 12551 c
79954 11169 78173 10057 75821 9209 c
74260 8638 72064 8189 69242 7876 C
@c
69385 8895 m
71444 9130 73126 9536 74416 10107 c
76134 10869 77417 11789 78272 12851 c
79128 13920 79555 14932 79555 15894 c
79555 16478 79370 16949 78999 17312 c
78636 17676 78108 17854 77424 17854 c
76006 17854 74502 17098 72905 15587 c
71309 14076 70140 11846 69385 8895 C
@c
F
%CHAR: 83133 0 (r) @t
85364 17726 m
92570 18895 L
89562 8752 L
91999 12915 94216 15823 96205 17476 c
97331 18424 98250 18895 98963 18895 c
99419 18895 99782 18759 100046 18488 c
100310 18217 100445 17825 100445 17312 c
100445 16393 100210 15516 99733 14682 c
99398 14055 98920 13741 98293 13741 c
97972 13741 97694 13841 97466 14055 c
97238 14262 97095 14583 97038 15010 c
97010 15281 96946 15452 96853 15538 c
96739 15644 96611 15702 96454 15702 c
96219 15702 95998 15644 95784 15538 c
95428 15338 94872 14796 94138 13905 c
92983 12544 91729 10777 90381 8603 c
89797 7683 89291 6650 88878 5495 c
88293 3906 87958 2951 87873 2630 c
87203 0 L
84010 0 L
87873 12965 l
88322 14468 88543 15545 88543 16186 c
88543 16436 88436 16642 88229 16806 c
87951 17034 87580 17141 87124 17141 c
86832 17141 86290 17077 85514 16956 C
85364 17726 L
@c
F
%CHAR: 99768 0 (f) @t
112440 18396 m
112070 17020 L
109019 17020 L
106724 7890 l
105705 3870 104679 755 103652 -1440 c
102191 -4547 100616 -6685 98934 -7869 c
97651 -8774 96368 -9230 95092 -9230 c
94259 -9230 93546 -8980 92961 -8474 c
92527 -8132 92313 -7676 92313 -7120 c
92313 -6678 92491 -6286 92847 -5958 c
93204 -5638 93638 -5474 94152 -5474 c
94529 -5474 94843 -5588 95100 -5823 c
95356 -6065 95484 -6336 95484 -6643 c
95484 -6949 95342 -7234 95050 -7498 c
94829 -7690 94715 -7840 94715 -7933 c
94715 -8061 94765 -8161 94864 -8225 c
94986 -8325 95178 -8375 95449 -8375 c
96048 -8375 96675 -8182 97338 -7812 c
97993 -7434 98585 -6871 99098 -6130 c
99618 -5381 100103 -4305 100559 -2901 c
100759 -2316 101279 -392 102127 2879 c
105762 17020 L
102127 17020 L
102419 18396 L
103574 18396 104379 18474 104843 18638 c
105299 18795 105719 19101 106104 19557 c
106489 20006 106988 20855 107601 22095 c
108421 23763 109205 25060 109960 25979 c
110986 27212 112070 28146 113203 28766 c
114336 29386 115405 29692 116410 29692 c
117465 29692 118320 29422 118955 28887 c
119596 28353 119917 27768 119917 27148 c
119917 26656 119760 26250 119439 25915 c
119119 25580 118705 25409 118206 25409 c
117772 25409 117422 25537 117152 25787 c
116881 26036 116745 26335 116745 26685 c
116745 26906 116838 27184 117016 27512 c
117194 27839 117287 28060 117287 28167 c
117287 28367 117223 28509 117102 28609 c
116916 28745 116653 28816 116303 28816 c
115427 28816 114643 28538 113944 27982 c
113011 27241 112177 26086 111443 24511 c
111065 23691 110373 21653 109376 18396 C
112440 18396 L
@c
F
%CHAR: 111656 0 (l) @t
124371 29692 m
117230 4847 l
116880 3606 116709 2844 116709 2566 c
116709 2359 116773 2188 116909 2046 c
117037 1910 117201 1839 117401 1839 c
117664 1839 117949 1953 118256 2195 c
118976 2765 119738 3649 120530 4847 C
121157 4198 L
119831 2331 118619 1033 117500 292 c
116681 -235 115904 -499 115163 -499 c
114635 -499 114193 -321 113837 43 c
113481 406 113302 820 113302 1297 c
113302 1796 113530 2822 113972 4383 c
119631 23969 l
120095 25573 120323 26492 120323 26728 c
120323 27062 120187 27333 119924 27554 c
119660 27768 119247 27875 118691 27875 c
118370 27875 117885 27825 117230 27732 C
117230 28502 L
124371 29692 L
@c
F
%CHAR: 123544 0 (o) @t
143315 12359 m
143315 10270 142766 8204 141662 6158 c
140550 4112 139010 2495 137036 1297 c
135055 100 133137 -499 131270 -499 c
129360 -499 127806 107 126602 1326 c
125397 2544 124798 4120 124798 6058 c
124798 8104 125383 10156 126559 12216 c
127735 14276 129310 15901 131277 17098 c
133251 18296 135154 18895 136993 18895 c
138832 18895 140343 18289 141533 17077 c
142724 15873 143315 14297 143315 12359 c
@c
139851 13806 m
139851 15096 139538 16086 138903 16778 c
138269 17469 137449 17811 136452 17811 c
134399 17811 132517 16343 130800 13414 c
129082 10484 128220 7576 128220 4676 c
128220 3357 128555 2338 129224 1618 c
129894 898 130735 542 131748 542 c
133715 542 135554 2003 137271 4918 c
138989 7833 139851 10798 139851 13806 c
@c
F
%CHAR: 144926 0 (w) @t
162844 18895 m
164284 3236 L
166707 6080 168639 8745 170085 11233 c
170934 12694 171361 13756 171361 14404 c
171361 14711 171290 14989 171155 15224 c
171098 15345 170877 15530 170492 15773 c
170114 16022 169843 16272 169693 16528 c
169537 16785 169458 17063 169458 17355 c
169458 17783 169622 18146 169943 18446 c
170264 18745 170670 18895 171176 18895 c
171746 18895 172231 18688 172623 18260 c
173022 17833 173222 17270 173222 16557 c
173222 15837 173115 15160 172908 14533 c
172487 13335 171675 11789 170463 9900 c
168988 7626 167470 5524 165902 3578 c
164334 1639 163172 278 162402 -499 C
161632 -499 L
160271 13948 L
151647 -499 L
150728 -499 L
150635 5445 150336 10135 149830 13570 c
149623 15003 149274 15944 148789 16393 c
148440 16714 147912 16870 147200 16870 c
146800 16870 146280 16828 145660 16749 C
145660 17498 L
151647 18895 L
152488 16571 153030 13000 153279 8182 c
153365 6365 153429 5210 153486 4740 C
162067 18895 L
162844 18895 L
@c
F
%CHAR: 173450 0 (s) @t
188966 18895 m
187690 12487 L
186921 12487 L
186849 14354 186450 15709 185730 16557 c
185003 17405 184105 17833 183036 17833 c
182174 17833 181483 17597 180976 17120 c
180470 16649 180214 16079 180214 15409 c
180214 14953 180314 14511 180520 14098 c
180720 13677 181162 13093 181846 12337 c
183656 10363 184825 8874 185353 7876 c
185880 6871 186144 5923 186144 5032 c
186144 3585 185545 2302 184341 1183 c
183136 57 181618 -499 179779 -499 c
178774 -499 177619 -264 176308 207 c
175852 378 175496 456 175246 456 c
174619 456 174148 143 173828 -499 C
173051 -499 L
174327 6265 L
175096 6265 L
175182 4148 175624 2651 176415 1775 c
177206 898 178297 456 179672 456 c
180727 456 181568 755 182188 1347 c
182808 1939 183115 2666 183115 3528 c
183115 4084 183008 4604 182787 5075 c
182395 5909 181575 7063 180328 8539 c
179088 10014 178282 11126 177926 11860 c
177577 12601 177399 13335 177399 14076 c
177399 15424 177890 16564 178867 17498 c
179850 18431 181112 18895 182659 18895 c
183108 18895 183507 18859 183870 18795 c
184063 18752 184519 18595 185239 18324 c
185951 18054 186429 17918 186671 17918 c
187263 17918 187769 18246 188168 18895 C
188966 18895 L
@c
F
T
@rax 407.61808 425.92224 429.52025 434.48031 @E
[0.00028346 0.00000000 0.00000000 0.00028346 407.61806383 426.06366945] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 42764.00000 z
%CHAR: 0 0 (c) @t
16514 4554 m
15067 2815 13606 1532 12131 720 c
10655 -93 9094 -499 7455 -499 c
5481 -499 3934 57 2830 1169 c
1725 2281 1169 3777 1169 5659 c
1169 7790 1768 9886 2958 11945 c
4148 14005 5745 15680 7755 16963 c
9772 18253 11739 18895 13677 18895 c
15195 18895 16329 18581 17077 17947 c
17833 17312 18210 16535 18210 15616 c
18210 14754 17947 14019 17412 13407 c
17027 12929 16543 12694 15972 12694 c
15545 12694 15181 12836 14896 13114 c
14611 13392 14468 13741 14468 14155 c
14468 14419 14526 14668 14625 14889 c
14732 15110 14946 15381 15274 15694 c
15602 16008 15801 16229 15873 16371 c
15937 16507 15972 16657 15972 16806 c
15972 17098 15844 17348 15580 17540 c
15174 17818 14604 17961 13863 17961 c
12501 17961 11147 17476 9814 16514 c
8474 15559 7334 14191 6386 12423 c
5246 10278 4676 8139 4676 5994 c
4676 4576 5082 3450 5887 2623 c
6693 1789 7797 1376 9187 1376 c
10256 1376 11318 1646 12373 2181 c
13421 2716 14604 3692 15908 5096 C
16514 4554 L
@c
F
%CHAR: 18987 0 (e) @t
24083 7876 m
23983 7177 23933 6600 23933 6137 c
23933 4904 24375 3849 25252 2972 c
26129 2103 27191 1668 28445 1668 c
29450 1668 30412 1874 31339 2288 c
32265 2694 33641 3606 35465 5011 C
35900 4405 L
32600 1133 29457 -499 26464 -499 c
24432 -499 22900 143 21866 1418 c
20840 2701 20327 4112 20327 5659 c
20327 7733 20961 9857 22244 12031 c
23527 14198 25131 15887 27069 17091 c
29001 18296 30997 18895 33042 18895 c
34517 18895 35608 18595 36321 17997 c
37026 17398 37383 16692 37383 15873 c
37383 14711 36926 13606 36007 12551 c
34795 11169 33014 10057 30662 9209 c
29101 8638 26905 8189 24083 7876 C
@c
24226 8895 m
26285 9130 27967 9536 29257 10107 c
30975 10869 32258 11789 33113 12851 c
33969 13920 34396 14932 34396 15894 c
34396 16478 34211 16949 33840 17312 c
33477 17676 32949 17854 32265 17854 c
30847 17854 29343 17098 27746 15587 c
26150 14076 24981 11846 24226 8895 C
@c
F
%CHAR: 37974 0 (l) @t
50689 29692 m
43548 4847 l
43198 3606 43027 2844 43027 2566 c
43027 2359 43091 2188 43227 2046 c
43355 1910 43519 1839 43719 1839 c
43982 1839 44267 1953 44574 2195 c
45294 2765 46056 3649 46848 4847 C
47475 4198 L
46149 2331 44937 1033 43818 292 c
42999 -235 42222 -499 41481 -499 c
40953 -499 40511 -321 40155 43 c
39799 406 39620 820 39620 1297 c
39620 1796 39848 2822 40290 4383 c
45949 23969 l
46413 25573 46641 26492 46641 26728 c
46641 27062 46505 27333 46242 27554 c
45978 27768 45565 27875 45009 27875 c
44688 27875 44203 27825 43548 27732 C
43548 28502 L
50689 29692 L
@c
F
%CHAR: 49862 0 (l) @t
62577 29692 m
55436 4847 l
55086 3606 54915 2844 54915 2566 c
54915 2359 54979 2188 55115 2046 c
55243 1910 55407 1839 55607 1839 c
55870 1839 56155 1953 56462 2195 c
57182 2765 57944 3649 58736 4847 C
59363 4198 L
58037 2331 56825 1033 55706 292 c
54887 -235 54110 -499 53369 -499 c
52841 -499 52399 -321 52043 43 c
51687 406 51508 820 51508 1297 c
51508 1796 51736 2822 52178 4383 c
57837 23969 l
58301 25573 58529 26492 58529 26728 c
58529 27062 58393 27333 58130 27554 c
57866 27768 57453 27875 56897 27875 c
56576 27875 56091 27825 55436 27732 C
55436 28502 L
62577 29692 L
@c
F
%CHAR: 61750 0 (s) @t
77266 18895 m
75990 12487 L
75221 12487 L
75149 14354 74750 15709 74030 16557 c
73303 17405 72405 17833 71336 17833 c
70474 17833 69783 17597 69276 17120 c
68770 16649 68514 16079 68514 15409 c
68514 14953 68614 14511 68820 14098 c
69020 13677 69462 13093 70146 12337 c
71956 10363 73125 8874 73653 7876 c
74180 6871 74444 5923 74444 5032 c
74444 3585 73845 2302 72641 1183 c
71436 57 69918 -499 68079 -499 c
67074 -499 65919 -264 64608 207 c
64152 378 63796 456 63546 456 c
62919 456 62448 143 62128 -499 C
61351 -499 L
62627 6265 L
63396 6265 L
63482 4148 63924 2651 64715 1775 c
65506 898 66597 456 67972 456 c
69027 456 69868 755 70488 1347 c
71108 1939 71415 2666 71415 3528 c
71415 4084 71308 4604 71087 5075 c
70695 5909 69875 7063 68628 8539 c
67388 10014 66582 11126 66226 11860 c
65877 12601 65699 13335 65699 14076 c
65699 15424 66190 16564 67167 17498 c
68150 18431 69412 18895 70959 18895 c
71408 18895 71807 18859 72170 18795 c
72363 18752 72819 18595 73539 18324 c
74251 18054 74729 17918 74971 17918 c
75563 17918 76069 18246 76468 18895 C
77266 18895 L
@c
F
T
@rax %Note: Object
367.85622 438.42841 367.85735 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 2.06079 2.06079 0.00000 @w
/$fm 0 def
367.85679 452.97524 m
367.85679 438.42841 L
S

@rax %Note: Object
382.40306 438.42841 382.40419 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.72709 0.72709 0.00000 @w
/$fm 0 def
382.40362 452.97524 m
382.40362 438.42841 L
S

@rax %Note: Object
396.94989 438.42841 396.95102 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.72709 0.72709 0.00000 @w
/$fm 0 def
396.95046 452.97524 m
396.95046 438.42841 L
S

@rax %Note: Object
411.49672 438.42841 411.49786 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.72709 0.72709 0.00000 @w
/$fm 0 def
411.49729 452.97524 m
411.49729 438.42841 L
S

@rax %Note: Object
426.04356 438.42841 426.04469 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.72709 0.72709 0.00000 @w
/$fm 0 def
426.04413 452.97524 m
426.04413 438.42841 L
S

@rax %Note: Object
440.59039 438.42841 440.59153 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.72709 0.72709 0.00000 @w
/$fm 0 def
440.59096 452.97524 m
440.59096 438.42841 L
S

@rax %Note: Object
469.68406 438.42841 469.68520 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 2.06079 2.06079 0.00000 @w
/$fm 0 def
469.68463 452.97524 m
469.68463 438.42841 L
S

@rax %Note: Object
455.13723 438.42841 455.13836 452.97524 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.96973 0.96973 0.00000 @w
/$fm 0 def
455.13780 452.97524 m
455.13780 438.42841 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
