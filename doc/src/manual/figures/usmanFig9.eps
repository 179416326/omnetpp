%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 294.76006 419.50035 464.01562 493.69465 
%%Creator: CorelDRAW 8
%%Title: \\Inssv1\usershome\tmp\opp-usman\usmanFig9.eps
%%CreationDate: Tue Mar 19 10:29:50 2002
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generisches CMYK Drucker - Profil
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.12
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
419.59672 441.83169 463.64967 471.24113 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.73191 0.73191 0.00000 @w
/$fm 0 def
419.59672 441.83169 m
419.59672 471.24113 L
463.64967 471.24113 L
463.64967 441.83169 L
419.59672 441.83169 L
@c
S

@rax 422.89172 451.28721 459.82403 459.73559 @E
[0.00028346 0.00000000 0.00000000 0.00028346 422.89170107 451.47229845] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 43049.00000 z
%CHAR: 0 0 (R) @t
29094 0 m
21481 0 L
11831 13324 L
11121 13302 10540 13288 10088 13288 c
9908 13288 9715 13288 9499 13295 c
9291 13302 9076 13309 8847 13324 C
8847 5044 l
8847 3250 9047 2138 9435 1700 c
9973 1083 10769 775 11831 775 c
12951 775 L
12951 0 L
739 0 L
739 775 L
1808 775 l
3013 775 3874 1169 4391 1952 c
4685 2389 4836 3422 4836 5044 c
4836 23462 l
4836 25255 4635 26368 4248 26798 c
3702 27415 2884 27724 1808 27724 c
739 27724 L
739 28506 L
11121 28506 l
14149 28506 16380 28283 17815 27838 c
19250 27401 20470 26590 21474 25406 c
22472 24215 22974 22809 22974 21166 c
22974 19415 22407 17894 21259 16603 c
20118 15318 18353 14407 15957 13876 C
21840 5697 l
23182 3817 24344 2569 25306 1952 c
26274 1342 27537 947 29094 775 C
29094 0 L
@c
8847 14651 m
9119 14651 9349 14651 9543 14644 c
9736 14637 9901 14629 10023 14629 c
12743 14629 14795 15218 16172 16394 c
17557 17571 18246 19071 18246 20893 c
18246 22672 17686 24122 16574 25234 c
15462 26346 13984 26906 12147 26906 c
11336 26906 10238 26769 8847 26504 C
8847 14651 L
@c
F
%CHAR: 28714 0 (x) @t
29281 19257 m
38343 19257 L
38343 18475 L
37769 18475 37367 18382 37130 18181 c
36900 17987 36786 17729 36786 17406 c
36786 17069 37030 16552 37525 15849 c
37675 15627 37905 15275 38213 14802 c
39584 12613 L
41155 14802 l
42167 16186 42669 17062 42669 17428 c
42669 17722 42554 17966 42317 18174 c
42074 18375 41693 18475 41155 18475 C
41155 19257 L
47677 19257 L
47677 18475 L
46988 18432 46393 18246 45891 17908 c
45202 17435 44262 16394 43071 14802 c
40445 11286 L
45238 4391 l
46414 2698 47254 1679 47756 1335 c
48265 990 48911 796 49715 753 C
49715 0 L
40631 0 L
40631 753 L
41263 753 41751 897 42102 1177 c
42368 1370 42504 1636 42504 1952 c
42504 2274 42052 3092 41155 4391 c
38343 8517 L
35250 4391 l
34296 3121 33822 2361 33822 2124 c
33822 1787 33980 1485 34296 1205 c
34612 933 35085 782 35717 753 C
35717 0 L
29431 0 L
29431 753 L
29934 825 30371 1004 30752 1284 c
31283 1686 32179 2726 33442 4391 c
37482 9751 L
33822 15053 l
32782 16567 31986 17514 31412 17901 c
30845 18281 30135 18475 29281 18475 C
29281 19257 L
@c
F
%CHAR: 50239 0 (G) @t
76664 29151 m
77396 20161 L
76664 20161 L
75918 22400 74956 24086 73780 25227 c
72086 26863 69905 27681 67243 27681 c
63613 27681 60851 26246 58964 23376 c
57378 20951 56589 18066 56589 14716 c
56589 11996 57112 9514 58160 7275 c
59215 5030 60592 3387 62293 2346 c
63993 1299 65744 775 67538 775 c
68592 775 69604 911 70587 1177 c
71570 1442 72510 1837 73421 2353 C
73421 10597 l
73421 12025 73313 12958 73098 13403 c
72883 13840 72546 14177 72086 14407 c
71634 14644 70831 14759 69683 14759 C
69683 15555 L
80718 15555 L
80718 14759 L
80194 14759 l
79096 14759 78350 14393 77941 13661 c
77661 13144 77525 12118 77525 10597 c
77525 1873 L
75911 1004 74318 366 72754 -43 c
71182 -445 69439 -653 67516 -653 c
62013 -653 57830 1112 54967 4642 c
52822 7297 51753 10346 51753 13812 c
51753 16316 52356 18719 53561 21022 c
54989 23756 56955 25858 59444 27329 c
61532 28549 64000 29151 66842 29151 c
67882 29151 68822 29072 69676 28900 c
70522 28735 71720 28362 73277 27788 c
74059 27494 74590 27350 74856 27350 c
75121 27350 75351 27472 75537 27716 c
75724 27960 75839 28441 75882 29151 C
76664 29151 L
@c
F
%CHAR: 81320 0 (a) @t
93575 2777 m
91602 1248 90360 366 89851 129 c
89098 -222 88294 -402 87440 -402 c
86106 -402 85008 57 84147 969 c
83286 1880 82855 3078 82855 4563 c
82855 5503 83063 6314 83487 7003 c
84061 7950 85058 8847 86479 9693 c
87899 10533 90267 11551 93575 12757 C
93575 13517 l
93575 15433 93273 16753 92663 17471 c
92054 18181 91164 18540 90002 18540 c
89119 18540 88416 18303 87899 17822 c
87368 17349 87103 16803 87103 16186 c
87146 14967 l
87146 14321 86981 13826 86651 13474 c
86321 13123 85890 12951 85359 12951 c
84836 12951 84412 13130 84082 13496 c
83752 13862 83587 14357 83587 14988 c
83587 16194 84204 17299 85438 18310 c
86672 19315 88402 19824 90633 19824 c
92341 19824 93740 19537 94837 18963 c
95662 18525 96272 17844 96667 16918 c
96918 16316 97040 15089 97040 13223 c
97040 6687 l
97040 4850 97076 3724 97148 3308 c
97219 2899 97334 2619 97492 2482 c
97657 2339 97844 2267 98052 2267 c
98274 2267 98475 2317 98640 2418 c
98934 2597 99501 3114 100340 3953 C
100340 2777 L
98776 674 97277 -380 95842 -380 c
95160 -380 94615 -143 94206 337 c
93797 811 93589 1629 93575 2777 C
@c
93575 4140 m
93575 11480 L
91458 10633 90095 10038 89478 9693 c
88366 9076 87576 8430 87103 7756 c
86622 7082 86385 6350 86385 5546 c
86385 4542 86687 3702 87289 3035 c
87892 2375 88588 2038 89370 2038 c
90439 2038 91838 2741 93575 4140 C
@c
F
%CHAR: 100434 0 (t) @t
107372 25578 m
107372 19257 L
111871 19257 L
111871 17786 L
107372 17786 L
107372 5295 l
107372 4047 107551 3207 107910 2777 c
108262 2339 108721 2124 109281 2124 c
109747 2124 110192 2267 110629 2554 c
111060 2841 111397 3265 111641 3824 C
112459 3824 L
111964 2454 111275 1421 110378 725 c
109481 29 108556 -316 107602 -316 c
106956 -316 106325 -136 105708 222 c
105090 581 104638 1091 104344 1758 c
104050 2418 103899 3444 103899 4836 c
103899 17786 L
100857 17786 L
100857 18475 L
101625 18784 102414 19307 103218 20039 c
104021 20778 104746 21654 105370 22658 c
105693 23189 106145 24165 106719 25578 C
107372 25578 L
@c
F
%CHAR: 112402 0 (e) @t
116987 12003 m
116972 9141 117661 6902 119067 5274 c
120467 3652 122117 2841 124004 2841 c
125266 2841 126364 3186 127297 3882 c
128230 4570 129005 5761 129636 7440 C
130289 7024 L
129995 5101 129141 3351 127727 1779 c
126307 201 124535 -588 122411 -588 c
120093 -588 118113 309 116470 2109 c
114820 3910 114002 6335 114002 9378 c
114002 12671 114841 15239 116535 17076 c
118221 18920 120337 19846 122892 19846 c
125051 19846 126823 19135 128208 17707 c
129593 16287 130289 14386 130289 12003 C
116987 12003 L
@c
116987 13223 m
125898 13223 L
125826 14457 125683 15325 125453 15828 c
125109 16610 124585 17227 123889 17679 c
123193 18124 122468 18353 121715 18353 c
120553 18353 119512 17901 118594 16997 c
117676 16093 117137 14830 116987 13223 C
@c
F
T
@rax %Note: Object
295.12602 441.83169 339.17896 471.24113 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.73191 0.73191 0.00000 @w
/$fm 0 def
295.12602 441.83169 m
295.12602 471.24113 L
339.17896 471.24113 L
339.17896 441.83169 L
295.12602 441.83169 L
@c
S

@rax 348.81931 456.18463 402.05934 467.26668 @E
[0.00028346 0.00000000 0.00000000 0.00028346 348.81929433 458.79390448] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 43049.00000 z
%CHAR: 0 0 (2) @t
14859 0 m
674 0 L
674 775 L
7907 7110 12685 12082 15010 15684 c
16086 17349 16624 19099 16624 20936 c
16624 22393 16179 23584 15282 24502 c
14386 25413 13223 25872 11795 25872 c
9815 25872 8194 24933 6917 23038 C
6178 23376 L
6895 25184 7935 26590 9313 27587 c
10683 28592 12169 29094 13769 29094 c
15577 29094 17098 28470 18332 27228 c
19566 25994 20183 24488 20183 22723 c
20183 21489 19960 20348 19530 19293 c
18855 17657 17614 15821 15806 13790 c
13058 10676 9399 7096 4814 3049 C
11960 3049 l
13108 3049 14055 3286 14802 3760 c
15541 4240 16072 4879 16394 5675 C
17234 5675 L
14859 0 L
@c
F
%CHAR: 21525 0 (8) @t
36047 15957 m
37396 14500 38379 13130 39003 11853 c
39627 10583 39936 9306 39936 8029 c
39936 5747 39067 3752 37331 2052 c
35595 344 33450 -502 30903 -502 c
28614 -502 26755 187 25320 1578 c
23886 2963 23168 4585 23168 6429 c
23168 8014 23749 9571 24919 11099 c
26088 12628 28298 14099 31548 15512 C
30307 17040 29460 18303 29016 19293 c
28578 20290 28355 21281 28355 22264 c
28355 24122 29051 25729 30450 27071 c
31842 28420 33600 29094 35717 29094 c
37733 29094 39376 28513 40653 27350 c
41930 26181 42569 24825 42569 23268 c
42569 21725 42052 20326 41019 19064 c
39993 17801 38336 16768 36047 15957 C
@c
35229 16839 m
36743 17356 37919 18203 38752 19379 c
39584 20556 40000 21912 40000 23440 c
40000 24868 39598 25994 38795 26812 c
37984 27630 36929 28039 35631 28039 c
34382 28039 33371 27652 32603 26863 c
31835 26081 31448 25062 31448 23813 c
31448 22873 31649 22005 32058 21209 c
32646 20032 33701 18576 35229 16839 C
@c
32330 14651 m
30242 13783 28664 12527 27588 10877 c
26519 9234 25981 7462 25981 5568 c
25981 4039 26454 2813 27401 1880 c
28348 947 29590 481 31132 481 c
32732 481 34074 1048 35164 2167 c
36262 3286 36807 4628 36807 6178 c
36807 7354 36485 8595 35853 9887 c
35215 11186 34038 12771 32330 14651 C
@c
F
%CHAR: 43050 0 (,) @t
42605 -4728 m
43660 -4255 44514 -3652 45174 -2920 c
45676 -2361 45927 -1822 45927 -1306 c
45927 -1048 45891 -818 45805 -610 c
45748 -495 45554 -273 45217 65 c
44880 402 44693 631 44650 753 c
44550 997 44499 1270 44499 1578 c
44499 2181 44707 2698 45124 3135 c
45532 3566 46020 3781 46580 3781 c
47154 3781 47663 3552 48108 3092 c
48546 2626 48768 2045 48768 1349 c
48768 100 48280 -1162 47298 -2439 c
46315 -3717 44894 -4700 43028 -5403 C
42605 -4728 L
@c
F
%CHAR: 53812 0 (8) @t
68334 15957 m
69683 14500 70666 13130 71290 11853 c
71914 10583 72223 9306 72223 8029 c
72223 5747 71354 3752 69618 2052 c
67882 344 65737 -502 63190 -502 c
60901 -502 59042 187 57607 1578 c
56173 2963 55455 4585 55455 6429 c
55455 8014 56036 9571 57206 11099 c
58375 12628 60585 14099 63835 15512 C
62594 17040 61747 18303 61303 19293 c
60865 20290 60642 21281 60642 22264 c
60642 24122 61338 25729 62737 27071 c
64129 28420 65887 29094 68004 29094 c
70020 29094 71663 28513 72940 27350 c
74217 26181 74856 24825 74856 23268 c
74856 21725 74339 20326 73306 19064 c
72280 17801 70623 16768 68334 15957 C
@c
67516 16839 m
69030 17356 70206 18203 71039 19379 c
71871 20556 72287 21912 72287 23440 c
72287 24868 71885 25994 71082 26812 c
70271 27630 69216 28039 67918 28039 c
66669 28039 65658 27652 64890 26863 c
64122 26081 63735 25062 63735 23813 c
63735 22873 63936 22005 64345 21209 c
64933 20032 65988 18576 67516 16839 C
@c
64617 14651 m
62529 13783 60951 12527 59875 10877 c
58806 9234 58268 7462 58268 5568 c
58268 4039 58741 2813 59688 1880 c
60635 947 61877 481 63419 481 c
65019 481 66361 1048 67451 2167 c
68549 3286 69094 4628 69094 6178 c
69094 7354 68772 8595 68140 9887 c
67502 11186 66325 12771 64617 14651 C
@c
F
%CHAR: 75337 0 (0) @t
90218 29094 m
92011 29094 93525 28341 94752 26841 c
95972 25342 96589 22974 96589 19738 c
96589 16961 96130 14134 95218 11243 c
94314 8359 93030 5855 91373 3738 c
90060 2074 88675 868 87233 129 c
86393 -294 85418 -502 84313 -502 c
82490 -502 80969 244 79742 1743 c
78515 3243 77898 5618 77898 8868 c
77898 12082 78515 15304 79750 18540 c
81192 22321 83036 25198 85281 27157 c
86752 28448 88395 29094 90218 29094 c
@c
90239 27996 m
89428 27996 88603 27681 87771 27042 c
86939 26403 86078 25076 85188 23060 c
84298 21044 83445 18439 82634 15261 c
81579 11099 81055 7555 81055 4628 c
81055 3164 81371 2081 82002 1356 c
82634 631 83394 273 84291 273 c
85145 273 85877 552 86480 1112 c
88087 2626 89471 5216 90619 8868 c
92485 14852 93418 19716 93418 23462 c
93418 25011 93102 26159 92471 26898 c
91839 27630 91093 27996 90239 27996 c
@c
F
%CHAR: 96862 0 (0) @t
111743 29094 m
113536 29094 115050 28341 116277 26841 c
117497 25342 118114 22974 118114 19738 c
118114 16961 117655 14134 116743 11243 c
115839 8359 114555 5855 112898 3738 c
111585 2074 110200 868 108758 129 c
107918 -294 106943 -502 105838 -502 c
104015 -502 102494 244 101267 1743 c
100040 3243 99423 5618 99423 8868 c
99423 12082 100040 15304 101275 18540 c
102717 22321 104561 25198 106806 27157 c
108277 28448 109920 29094 111743 29094 c
@c
111764 27996 m
110953 27996 110128 27681 109296 27042 c
108464 26403 107603 25076 106713 23060 c
105823 21044 104970 18439 104159 15261 c
103104 11099 102580 7555 102580 4628 c
102580 3164 102896 2081 103527 1356 c
104159 631 104919 273 105816 273 c
106670 273 107402 552 108005 1112 c
109612 2626 110996 5216 112144 8868 c
114010 14852 114943 19716 114943 23462 c
114943 25011 114627 26159 113996 26898 c
113364 27630 112618 27996 111764 27996 c
@c
F
%CHAR: 129149 0 (b) @t
141569 29890 m
137429 15368 L
138778 16768 139947 17729 140952 18246 c
141956 18762 143004 19020 144094 19020 c
145637 19020 146900 18511 147875 17492 c
148858 16466 149346 15081 149346 13324 c
149346 11071 148708 8825 147416 6586 c
146125 4355 144510 2612 142559 1363 c
140614 122 138692 -502 136797 -502 c
134681 -502 132514 287 130283 1873 C
136675 23878 l
137163 25571 137407 26568 137407 26863 c
137407 27228 137300 27501 137077 27681 c
136754 27939 136274 28061 135642 28061 c
135348 28061 134903 28011 134301 27917 C
134301 28714 L
141569 29890 L
@c
133440 1643 m
134839 868 136073 481 137135 481 c
138369 481 139646 933 140973 1837 c
142300 2741 143448 4269 144417 6414 c
145393 8552 145881 10719 145881 12908 c
145881 14199 145565 15203 144926 15935 c
144288 16660 143535 17026 142666 17026 c
141361 17026 140083 16502 138842 15462 c
137594 14414 136704 12965 136173 11099 c
133440 1643 L
@c
F
%CHAR: 150674 0 (p) @t
160195 19020 m
158746 14192 L
160274 15986 161637 17234 162835 17951 c
164034 18669 165253 19020 166502 19020 c
167750 19020 168812 18533 169694 17542 c
170577 16552 171022 15268 171022 13682 c
171022 10604 169766 7469 167262 4276 c
164751 1091 161831 -502 158495 -502 c
157791 -502 157174 -430 156636 -273 c
156091 -122 155488 151 154814 545 C
153278 -4879 l
152970 -5941 152819 -6637 152819 -6960 c
152819 -7268 152898 -7526 153063 -7749 c
153221 -7964 153487 -8129 153845 -8251 c
154211 -8366 154936 -8430 156012 -8430 C
155826 -9205 L
145924 -9205 L
146132 -8430 L
147438 -8373 148313 -8151 148773 -7756 c
149225 -7361 149705 -6278 150215 -4499 c
155531 13912 l
155854 15081 156012 15799 156012 16079 c
156012 16459 155904 16753 155689 16961 c
155467 17177 155137 17277 154692 17277 c
154283 17277 153716 17227 152984 17134 C
152984 17951 L
160195 19020 L
@c
155302 2210 m
156170 1169 157339 653 158810 653 c
159535 653 160281 854 161034 1263 c
161795 1665 162534 2267 163251 3071 c
163976 3867 164622 4786 165196 5833 c
165770 6873 166286 8108 166746 9521 c
167198 10934 167427 12341 167427 13725 c
167427 14845 167169 15706 166660 16301 c
166150 16897 165547 17191 164866 17191 c
163352 17191 161852 16323 160374 14586 c
158896 12850 157813 10820 157124 8495 c
155302 2210 L
@c
F
%CHAR: 172199 0 (s) @t
187819 19020 m
186534 12570 L
185759 12570 L
185688 14450 185286 15813 184561 16667 c
183829 17521 182925 17951 181849 17951 c
180981 17951 180285 17715 179776 17234 c
179266 16760 179008 16186 179008 15512 c
179008 15053 179108 14608 179316 14192 c
179517 13769 179962 13180 180651 12420 c
182473 10432 183650 8933 184181 7928 c
184712 6917 184977 5962 184977 5065 c
184977 3609 184375 2317 183162 1191 c
181950 57 180421 -502 178570 -502 c
177559 -502 176396 -265 175076 208 c
174617 380 174258 459 174007 459 c
173376 459 172902 143 172579 -502 C
171797 -502 L
173082 6307 L
173856 6307 L
173942 4176 174387 2669 175184 1787 c
175980 904 177078 459 178463 459 c
179525 459 180371 761 180995 1356 c
181620 1952 181928 2683 181928 3552 c
181928 4111 181820 4635 181598 5108 c
181203 5948 180378 7110 179123 8595 c
177874 10081 177064 11200 176705 11939 c
176353 12685 176174 13424 176174 14170 c
176174 15526 176669 16674 177652 17614 c
178642 18554 179912 19020 181469 19020 c
181921 19020 182323 18985 182689 18920 c
182882 18877 183342 18719 184066 18446 c
184784 18174 185264 18038 185508 18038 c
186104 18038 186613 18368 187015 19020 C
187819 19020 L
@c
F
T
@rax 298.78696 451.28721 335.03584 459.73559 @E
[0.00028346 0.00000000 0.00000000 0.00028346 298.78694970 451.47229845] @tm
 0 O 0 @g
0.84 0.73 0.73 0.91 k
e

% FontChange:/_TimesNewRoman 43049.00000 z
%CHAR: 0 0 (T) @t
24911 28506 m
25227 21819 L
24423 21819 L
24272 22995 24064 23835 23792 24344 c
23361 25155 22780 25750 22063 26138 c
21338 26525 20391 26719 19214 26719 c
15196 26719 L
15196 4936 l
15196 3186 15390 2095 15763 1657 c
16294 1069 17119 775 18224 775 c
19214 775 L
19214 0 L
7125 0 L
7125 775 L
8136 775 l
9342 775 10195 1141 10698 1873 c
11006 2317 11164 3343 11164 4936 c
11164 26719 L
7734 26719 l
6407 26719 5460 26619 4900 26425 c
4169 26159 3544 25643 3028 24889 c
2511 24129 2203 23110 2102 21819 C
1306 21819 L
1643 28506 L
24911 28506 L
@c
F
%CHAR: 26303 0 (x) @t
26870 19257 m
35932 19257 L
35932 18475 L
35358 18475 34956 18382 34719 18181 c
34489 17987 34375 17729 34375 17406 c
34375 17069 34619 16552 35114 15849 c
35264 15627 35494 15275 35802 14802 c
37173 12613 L
38744 14802 l
39756 16186 40258 17062 40258 17428 c
40258 17722 40143 17966 39906 18174 c
39663 18375 39282 18475 38744 18475 C
38744 19257 L
45266 19257 L
45266 18475 L
44577 18432 43982 18246 43480 17908 c
42791 17435 41851 16394 40660 14802 c
38034 11286 L
42827 4391 l
44003 2698 44843 1679 45345 1335 c
45854 990 46500 796 47304 753 C
47304 0 L
38220 0 L
38220 753 L
38852 753 39340 897 39691 1177 c
39957 1370 40093 1636 40093 1952 c
40093 2274 39641 3092 38744 4391 c
35932 8517 L
32839 4391 l
31885 3121 31411 2361 31411 2124 c
31411 1787 31569 1485 31885 1205 c
32201 933 32674 782 33306 753 C
33306 0 L
27020 0 L
27020 753 L
27523 825 27960 1004 28341 1284 c
28872 1686 29768 2726 31031 4391 c
35071 9751 L
31411 15053 l
30371 16567 29575 17514 29001 17901 c
28434 18281 27724 18475 26870 18475 C
26870 19257 L
@c
F
%CHAR: 47828 0 (G) @t
74253 29151 m
74985 20161 L
74253 20161 L
73507 22400 72545 24086 71369 25227 c
69675 26863 67494 27681 64832 27681 c
61202 27681 58440 26246 56553 23376 c
54967 20951 54178 18066 54178 14716 c
54178 11996 54701 9514 55749 7275 c
56804 5030 58181 3387 59882 2346 c
61582 1299 63333 775 65127 775 c
66181 775 67193 911 68176 1177 c
69159 1442 70099 1837 71010 2353 C
71010 10597 l
71010 12025 70902 12958 70687 13403 c
70472 13840 70135 14177 69675 14407 c
69223 14644 68420 14759 67272 14759 C
67272 15555 L
78307 15555 L
78307 14759 L
77783 14759 l
76685 14759 75939 14393 75530 13661 c
75250 13144 75114 12118 75114 10597 c
75114 1873 L
73500 1004 71907 366 70343 -43 c
68771 -445 67028 -653 65105 -653 c
59602 -653 55419 1112 52556 4642 c
50411 7297 49342 10346 49342 13812 c
49342 16316 49945 18719 51150 21022 c
52578 23756 54544 25858 57033 27329 c
59121 28549 61589 29151 64431 29151 c
65471 29151 66411 29072 67265 28900 c
68111 28735 69309 28362 70866 27788 c
71648 27494 72179 27350 72445 27350 c
72710 27350 72940 27472 73126 27716 c
73313 27960 73428 28441 73471 29151 C
74253 29151 L
@c
F
%CHAR: 78909 0 (a) @t
91164 2777 m
89191 1248 87949 366 87440 129 c
86687 -222 85883 -402 85029 -402 c
83695 -402 82597 57 81736 969 c
80875 1880 80444 3078 80444 4563 c
80444 5503 80652 6314 81076 7003 c
81650 7950 82647 8847 84068 9693 c
85488 10533 87856 11551 91164 12757 C
91164 13517 l
91164 15433 90862 16753 90252 17471 c
89643 18181 88753 18540 87591 18540 c
86708 18540 86005 18303 85488 17822 c
84957 17349 84692 16803 84692 16186 c
84735 14967 l
84735 14321 84570 13826 84240 13474 c
83910 13123 83479 12951 82948 12951 c
82425 12951 82001 13130 81671 13496 c
81341 13862 81176 14357 81176 14988 c
81176 16194 81793 17299 83027 18310 c
84261 19315 85991 19824 88222 19824 c
89930 19824 91329 19537 92426 18963 c
93251 18525 93861 17844 94256 16918 c
94507 16316 94629 15089 94629 13223 c
94629 6687 l
94629 4850 94665 3724 94737 3308 c
94808 2899 94923 2619 95081 2482 c
95246 2339 95433 2267 95641 2267 c
95863 2267 96064 2317 96229 2418 c
96523 2597 97090 3114 97929 3953 C
97929 2777 L
96365 674 94866 -380 93431 -380 c
92749 -380 92204 -143 91795 337 c
91386 811 91178 1629 91164 2777 C
@c
91164 4140 m
91164 11480 L
89047 10633 87684 10038 87067 9693 c
85955 9076 85165 8430 84692 7756 c
84211 7082 83974 6350 83974 5546 c
83974 4542 84276 3702 84878 3035 c
85481 2375 86177 2038 86959 2038 c
88028 2038 89427 2741 91164 4140 C
@c
F
%CHAR: 98023 0 (t) @t
104961 25578 m
104961 19257 L
109460 19257 L
109460 17786 L
104961 17786 L
104961 5295 l
104961 4047 105140 3207 105499 2777 c
105851 2339 106310 2124 106870 2124 c
107336 2124 107781 2267 108218 2554 c
108649 2841 108986 3265 109230 3824 C
110048 3824 L
109553 2454 108864 1421 107967 725 c
107070 29 106145 -316 105191 -316 c
104545 -316 103914 -136 103297 222 c
102679 581 102227 1091 101933 1758 c
101639 2418 101488 3444 101488 4836 c
101488 17786 L
98446 17786 L
98446 18475 L
99214 18784 100003 19307 100807 20039 c
101610 20778 102335 21654 102959 22658 c
103282 23189 103734 24165 104308 25578 C
104961 25578 L
@c
F
%CHAR: 109991 0 (e) @t
114576 12003 m
114561 9141 115250 6902 116656 5274 c
118056 3652 119706 2841 121593 2841 c
122855 2841 123953 3186 124886 3882 c
125819 4570 126594 5761 127225 7440 C
127878 7024 L
127584 5101 126730 3351 125316 1779 c
123896 201 122124 -588 120000 -588 c
117682 -588 115702 309 114059 2109 c
112409 3910 111591 6335 111591 9378 c
111591 12671 112430 15239 114124 17076 c
115810 18920 117926 19846 120481 19846 c
122640 19846 124412 19135 125797 17707 c
127182 16287 127878 14386 127878 12003 C
114576 12003 L
@c
114576 13223 m
123487 13223 L
123415 14457 123272 15325 123042 15828 c
122698 16610 122174 17227 121478 17679 c
120782 18124 120057 18353 119304 18353 c
118142 18353 117101 17901 116183 16997 c
115265 16093 114726 14830 114576 13223 C
@c
F
T
@rax %Note: Object
339.05679 456.59679 412.03077 456.59792 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97597 0.97597 0.00000 @w
/$fm 0 def
339.05679 456.59735 m
412.03077 456.59735 L
S

@rax %Note: Object
409.46825 454.03483 419.59672 459.16016 @E
 0 O 0 @g
0.84 0.73 0.73 0.91 k
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.12189 0.12189 0.00000 @w
/$fm 0 def
409.46825 459.16016 m
409.46825 454.03483 L
419.59672 456.59735 L
409.46825 459.16016 L
@c
B

@rax %Note: Object
295.12602 471.24113 317.09140 493.20652 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97597 0.97597 0.00000 @w
/$fm 0 def
317.09140 471.24113 m
317.09140 493.20652 L
295.12602 493.20652 L
S

@rax %Note: Object
441.56211 471.24113 463.52778 493.20652 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97597 0.97597 0.00000 @w
/$fm 0 def
441.56211 471.24113 m
441.56211 493.20652 L
463.52778 493.20652 L
S

@rax %Note: Object
441.56211 419.98847 463.52778 441.95386 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97597 0.97597 0.00000 @w
/$fm 0 def
441.56211 441.95386 m
441.56211 419.98847 L
463.52778 419.98847 L
S

@rax %Note: Object
295.12602 419.98847 317.09140 441.95386 @E
0 J 0 j [] 0 d 0 R 0 @G
0.84 0.73 0.73 0.91 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.97597 0.97597 0.00000 @w
/$fm 0 def
317.09140 441.95386 m
317.09140 419.98847 L
295.12602 419.98847 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
