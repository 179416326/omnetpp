== Ubuntu

=== Supported Releases

This chapter provides additional information for installing @OMNETPP@ on
Ubuntu Linux installations. The overall installation procedure is described
in the 'Linux' chapter.

The following Ubuntu releases are covered:

* Ubuntu 14.04 LTS
* Ubuntu 15.10

They were tested on the following architectures:

* Intel 32-bit and 64-bit

The instructions below assume that you use the Gnome desktop and the bash shell,
which are the defaults. If you use another desktop environment or shell,
you may need to adjust the instructions accordingly.


=== Opening a Terminal

Type 'terminal' in Dash and click on the Terminal icon.

=== Installing the Prerequisite Packages

You can perform the installation using the graphical user interface or
from the terminal, whichever you prefer.

==== Command-Line Installation

Before starting the installation, refresh the database of available packages.
Type in the terminal:

  $ sudo apt-get update

To install the required packages, type in the terminal:

  $ sudo apt-get install build-essential gcc g++ bison flex perl \
       tcl-dev tk-dev libxml2-dev zlib1g-dev default-jre \
       doxygen graphviz libwebkitgtk-3.0-0

To use Qtenv with 3D visualization support, install the development packages
for Qt4, OpenSceneGraph (3.2) and the osgEarth (2.5 or later) packages:

  $ sudo apt-get install qt4-qmake libqt4-dev libqt4-opengl-dev \
       openscenegraph libopenscenegraph-dev openscenegraph-plugin-osgearth \
       osgearth osgearth-data libosgearth-dev

[NOTE]
=====================================================
You may opt to use clang and clang++ instead of the gcc and g++ compilers.
=====================================================

To enable the optional parallel simulation support you will need to install the MPI packages:

  $ sudo apt-get install openmpi-bin libopenmpi-dev

At the confirmation questions ('Do you want to continue? [Y/N]'), answer 'Y'.

image::pictures/terminal-package-install.png[title="Command-Line Package Installation",align="center",scaledwidth="75%"]


==== Graphical Installation

Ubuntu's graphical installer, 'Synaptic', can be started
with the 'System > Administration > Synaptic package manager' menu item.

Since software installation requires root permissions, Synaptic will ask you
to type your password.

Search for the following packages in the list, click the squares before the names,
then choose 'Mark for installation' or 'Mark for upgrade'.

If the 'Mark additional required changes?' dialog comes up, choose the 'Mark' button.

The packages:

* required: build-essential, gcc, g++, bison, flex, perl, tcl-dev, tk-dev, libxml2-dev,
zlib1g-dev, default-jre, doxygen, graphviz, libwebkitgtk-3.0-0
* recommended: qt4-qmake, libqt4-dev, libqt4-opengl-dev, openscenegraph,
libopenscenegraph-dev, openscenegraph-plugin-osgearth, osgearth,
osgearth-data, libosgearth-dev, openmpi-bin, libopenmpi-dev

image::pictures/ubuntu-synaptic.png[title="Synaptic Package Manager",align="center",scaledwidth="75%"]

Click 'Apply', then in the 'Apply the following changes?' window, click 'Apply' again.
In the 'Changes applied' window, click 'Close'.


==== Post-Installation Steps

===== Fixing Tooltip Colors

The default tooltip background color in Ubuntu is black, which causes certain tooltips
in the @OMNETPP@ IDE to become unreadable (black-on-black). This annoyance can be resolved
by changing the tooltip colors in Ubuntu.

image::pictures/ubuntu-black-tooltips.png[title="Black-on-black text in tooltips",align="center",scaledwidth="75%"]

Install 'gnome-color-chooser':

 $ sudo apt-get install gnome-color-chooser

Run it:

 $ gnome-color-chooser

Find the 'Tooltips' group on the 'Specific' tab, and change the settings to black foreground over
pale yellow background. Click Apply.

image::pictures/ubuntu-gnome-color-chooser.png[title="Fixing the tooltip color issue",align="center",scaledwidth="50%"]

===== Setting Up Debugging

By default, Ubuntu does not allow ptracing of non-child processes by non-root users. That is,
if you want to be able to debug simulation processes by attaching to them with a debugger,
or similar, you want to be able to use @OMNETPP@ just-in-time debugging
(`debugger-attach-on-startup` and `debugger-attach-on-error` configuration options),
you need to explicitly enable them.

To temporarily allow ptracing non-child processes, enter the following command:

  $ echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

To permanently allow it, edit `/etc/sysctl.d/10-ptrace.conf` and change the line:

  kernel.yama.ptrace_scope = 1

to read

  kernel.yama.ptrace_scope = 0

Note that the default debugger for @OMNETPP@ just-in-time debugging is 'Nemiver',
so it also needs to be installed:

  $ sudo apt-get install nemiver
