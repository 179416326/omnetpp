<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="result-anal" xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Analyzing the Results</title>

  <sect1>
    <title>Overview</title>

    <para>
      While it might be powerful in facilitating quick debugging to view how simulations
      work in the Tkenv environment, in most cases the result of the final simulations
      will be recorded as scalar values (e.g. average load: 75%), or vector values (e.g.
      queue length over time) or histograms. These values will be recorded at the end of
      the simulation as well as during runtime and provide real insight into the scenario
      you are looking at.
    </para>

    <para>
      Analyzing the simulation result is a lengthy and time consuming process. In most
      cases the user wants to see the same type of data for each run of the simulation or
      display the same graphs for different modules in the model, so automation is very
      important. (The user does not want to repeat the steps of re-creating charts every
      time simulations have to be re-run for some reason.)
    </para>
    
    <para>
      In OMNEST/OMNeT++ 4.0, statistical analysis becomes a lot more powerful. Not only is
      the statistical analysis tool integrated into the Eclipse environment, your settings
      -- your recipe for finding results from the raw data -- will be recorded in analysis
      files (.anf) and become instantly reproducible. This means that all processing and
      charts are stored as datasets; for example, if simulations need to be re-run due to
      a model bug or misconfiguration, existing charts need not be drawn all over again,
      but simply replacing the old result files with the new ones will result in the
      charts being automatically displayed with the new data.
    </para>
    
    <para>
      When creating an analysis the user first selects the input of the analysis by
      specifying file names or file name patterns (e.g. "adhoc-*.vec"). Data of interest
      can be selected into datasets by further pattern rules. The user completes datasets
      by adding various processing, filtering and charting steps, all using the GUI. Data
      in result files are tagged with meta information: experiment, measurement and
      replication labels are added to the result files to make the filtering process easy.
      It is possible to create very sophisticated filtering rules, for example, all 802.11
      retry counts of host[5..10] in experiment X, averaged over replications. In addition
      datasets can use other datasets as their input so datasets can build on each other.
    </para>

  </sect1>

  <sect1>
    <title>Creating Analysis Files</title>
    
    <para>
      To create a new analysis file choose
      <guimenuitem>File|New|Analysis File</guimenuitem> from the menu.
      Select the folder the new file created in and enter file name.
      Press <guibutton>Finish</guibutton> and an empty analysis file is created
      and opened.
    </para>
    
    <picture file="pictures/ANF-NewAnalysisFileDialog.png">New Analysis File dialog</picture>
    
    <para>
      There is a quick way to create an analysis file for a result file.
      Just double click on the result file in the Navigator View to open the
      New Analysis File dialog. The folder and file name is filled in according to
      the location and name of the result file. Press <guibutton>Finish</guibutton>
      and a new analysis file is created containing the vector and scalar files whose
      names corresponds to the result file. If the name of the result file contained
      a numeric suffix (e.g. aloha-10.vec), then all files with the same prefix added
      the the analysis file (i.e. aloha-*.vec and aloha-*.sca).
    </para>
    
    <tip>
      <para>
        If the analysis file already exists, double clicking on the result file will open
        it.
      </para>
    </tip>

  </sect1>

  <sect1>
    <title>Using the Analysis Editor</title>

    <para>
      The Analysis Editor is implemented as a multi-page editor. What the editor edits is
      the "recipe": what result files to take as inputs, what data to select from them,
      what (optional) processing to apply, and what kind of charts to create from them.
      The pages (tabs) of the editor roughly correspond to these steps.
    </para>
    
    <sect2>
      <title>Input files</title>
      
      <sect3>
        <title>Selecting input files</title>
        
        <para>
          The first page displays the result files that serve as input to the analysis. The
          upper half specifies what files to select, by explicit filenames or by wildcards.
          New input files can be added to the analysis by dragging vector and scalar files
          from the Project Explorer View, or by opening dialogs with the
          <guibutton>Add File...</guibutton> or <guibutton>Wildcard...</guibutton>
          buttons. If the file name is absolute (starts with '/') it is interpreted relative
          to the workspace root, otherwise it is relative to the folder of the analysis
          file.
        </para>
  
        <picture file="pictures/ANF-InputsPage.png">
          Specifying input files for data analysis
        </picture>
  
        <para>
          The input files are loaded when the analysis file is opened. When the file changed
          on the disk it is reloaded automatically when the workspace is refreshed. (Eclipse
          refreshes the workspace automatically if the "General|Workspace|Refresh automatically"
          option is turned on in the Preferences.)
          Vector files are not loaded directly, but an index file gets created and
          the vectors attributes (name, module, run, statistics...) are loaded from the index file.
          The index files are generated during the simulation, but can be safely deleted
          without loss of information. If the index file is missing or the vector file was
          modified, then the IDE rebuilds the index in the background.
        </para>
        
        <tip>The Progress View displays the progress of the indexing process.</tip>
        
        <para>
          The lower half shows what files actually matched the input specification, and what
          runs they contain. Note that OMNeT++ 4.0 result files contain a unique run ID and
          several metadata annotations in addition to the actual recorded data. The third
          tree organizes simulation runs runs according to their
          experiment-measurement-replication labels.
        </para>
  
        <para>
          The underlying assumption is that users will organize their simulation-based
          research into various /experiments/. An experiment will consist of several
          /measurements/, which are typically (but not necessarily) simulations done with
          the same model but with different parameter settings; that is, the user will
          explore the parameter space with several simulation runs. And, to gain statistical
          confidence in the results, each measurement will be possibly repeated several
          times, with different random number seeds. It is easy to set up such scenarios
          with the improved ini files of OMNeT++ 4.0, and then the
          experiment-measurement-replication labels will be assigned more-or-less
          automatically -- please refer to the chapter "Configuring simulations TBD check"
          in the manual) for more discussion.
        </para>

      </sect3>

      <sect3>
        <title>Browsing input</title>
              
        <para>
          The second page of the Analysis editor displays results (vectors, scalars and
          histograms) from all files in tables, and lets the user browse them. Results can
          be sorted and filtered. Simple filtering is possible with combo boxes, or when
          that's not enough, the user can write arbitrarily complex filters using a generic
          pattern matching expression language. Selected or filtered data can be immediately
          plotted, or remembered in named datasets for further processing.
        </para>
        
        <tip>
          In the advanced filter text field there is a Contest Assist available. Press
          Ctrl+Space to get a list of suggestions appropriate at the cursor position.
        </tip>
        
        <tip>
          You can easily display the data of a selected file, run, experiment, measurement
          or replication if you double click on the required tree node in the lower part
          of the Inputs page. It sets the appropriate filter and shows the data on the 
          "Browse Data" page.
        </tip>
        
        <picture file="pictures/ANF-BrowseDataPage.png">
          Browsing vector and scalar data generated by the simulation
        </picture>
  
        <para>
          To hide or show table columns, open <guimenuitem>Choose table columns...</guimenuitem>
          from the context menu and select the columns to be displayed.
          The settings are persisted and applied in each subsequently opened editor.
          The table rows can be sorted by clicking on the column name.
        </para>
        
        <para>
          You can display the selected data items on a chart. To open the chart 
          choose <guimenuitem>Plot</guimenuitem>
          from the context menu. (Double click also works for single data.) The chart is not added
          to the analysis file, so you can explore the data by opening the chart this way and
          closing the chart page without making the editor dirty.
        </para>
        
        <para>
          The selected vector's data can also be displayed in a table. Make sure that the
          Output Vector View is opened. If not, then you can open it from the context menu 
          (<guimenuitem>Show Output Vector View</guimenuitem>). If you select a vector in the 
          editor, the view will display its content.
        </para>
      
      </sect3>
      
    </sect2>
    
    <sect2>
    
      <title>Datasets</title>
      

      <sect3>
        <title>Overview</title>
        
        <para>
          The third page displays the datasets and charts created during the analysis.
          Datasets describe a set of input data, the processings applied to them and 
          the charts. The dataset is displayed as a tree of processing steps and charts.
          There are nodes for adding and discarding data, applying processing to vectors,
          selecting the operands of the operations and content of charts, and for
          creating charts.
        </para>
        
        <picture file="pictures/ANF-DatasetsPage.png">Defining datasets to be analyzed</picture>
        
        <tip>
          You can browse the dataset's content in the Dataset View. The view displays the 
          content of the dataset at the selected child.
        </tip>
        
      </sect3>
      
      <sect3>
        <title>Editing datasets</title>
        
        <para>
          The usual tree editing operations work on the Dataset tree. New elements can be
          added by dragging elements from the palette on the right to the
          appropriate place of the tree. Alternatively, you can select the parent node and
          press the button on the toolbar. An existing element can be edited by selecting the
          element and editing its properties on the property sheet, or opening an item specific
          edit dialog by choosing <guimenuitem>Properties...</guimenuitem> from the context menu.
        </para>
        
        <tip>
          <para>
            Datasets can be opened on a separate page by double clicking on them. It is more
            comfortable to edit the tree on this page. Double clicking a chart node
            will display the chart.
          </para>
        </tip>
  
        <para>
          Computations can be applied to the data by adding Apply/Compute nodes to the dataset.
          The data items to which the filter should be applied can be selected by adding
          Select/Deselect children to the processing node. By default, the filter applied
          to each data item. The difference between Apply and Compute is that Apply will
          remove its input from the dataset, while Compute keeps the original data too.
        </para>
        
        <para>
          Processing steps enclosed into a Group node has effect only in the group. This
          way you can create branches in the dataset.
          To group a range of sibling node select them and choose <guimenuitem>Group</guimenuitem>
          from the context menu. To remove the grouping, select the Group node and choose
          <guimenuitem>Ungroup</guimenuitem>.
        </para>
        
        <para>
          Charts can be inserted to display data. The data items to be displayed can be
          selected by adding Select/Deselect children to the chart node. By default the
          chart displays all data in the dataset at its position. You can modify the
          content of the chart by adding Select and Deselect children to it.
          There are lots of customization can be applied to
          charts including setting titles, colors, adding legends, grid lines, etc. See
          the <xref linkend="charts"/> section for details.
        </para>
        
      </sect3>
      
      <sect3>
        <title>Export</title>
        
        <para>
          You can export the content of the dataset into text files. Three formats are
          supported: comma separated values (CSV), Octave text files and Matlab script.
          Right click on the processing node or chart, and select the format
          from the <guimenuitem>Export to File</guimenuitem> submenu. The file will
          contain the data of the chart, or the dataset after the selected processing is
          applied. Enter the name of the file and press <guibutton>Finish</guibutton>.
        </para>
        
        <para>
          Vectors are always written as two columns into the CSV files, but the shape of the 
          scalars' table can be changed by selecting the grouping attributes in the dialog.
          
          E.g. assume we have two scalars (named s1 and s2) written by two modules (m1 and m2)
          in two runs (r1 and r2), so we have a total 8 scalar values.
          If none of the checkboxes is selected in the
          <guilabel>Scalars grouped by</guilabel> group, then the data is written as:
          
          <informaltable>
            <tgroup cols="8">
              <thead>
                <row>
                  <entry>r1 m1 s1</entry>
                  <entry>r1 m1 s2</entry>
                  <entry>r1 m2 s1</entry>
                  <entry>r1 m2 s2</entry>
                  <entry>r2 m1 s1</entry>
                  <entry>r2 m1 s2</entry>
                  <entry>r2 m2 s1</entry>
                  <entry>r2 m2 s2</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>1</entry>
                  <entry>2</entry>
                  <entry>3</entry>
                  <entry>4</entry>
                  <entry>5</entry>
                  <entry>6</entry>
                  <entry>7</entry>
                  <entry>8</entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          
          After grouping the scalars by module name and scalar name it looks like:
          
          <informaltable>
            <tgroup cols="4">
              <colspec colwidth="15%"/>
              <colspec colwidth="15%"/>
              <colspec colwidth="15%"/>
              <colspec colwidth="15%"/>
              <thead>
                <row>
                  <entry>Module</entry>
                  <entry>Name</entry>
                  <entry>r1</entry>
                  <entry>r2</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>m1</entry>
                  <entry>s1</entry>
                  <entry>1</entry>
                  <entry>5</entry>
                </row>
                <row>
                  <entry>m1</entry>
                  <entry>s2</entry>
                  <entry>2</entry>
                  <entry>6</entry>
                </row>
                <row>
                  <entry>m2</entry>
                  <entry>s1</entry>
                  <entry>3</entry>
                  <entry>7</entry>
                </row>
                <row>
                  <entry>m2</entry>
                  <entry>s2</entry>
                  <entry>4</entry>
                  <entry>8</entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          
        </para>
        
        <para>Settings specific to the file format:</para>
        
        <formalpara>
          <title>CSV</title>
          <para>
            You can select the separator, line ends and quoting character. The default 
            setting corresponds to RFC4180. The precision of the numeric values can also
            be set.
            The CSV file contains an optional header followed by the vector's data or
            groups of scalars. If multiple vectors are exported, each vector is written
            into a separate file. 
          </para>
        </formalpara>
        
        <formalpara>
          <title>Octave</title>
          <para>
            The data is exported as an Octave text file. This format can be loaded into the
            <ulink url="http:://www.r-project.org">R</ulink>
            statistical data analysis tool as well. The tables are saved as structures
            containing an array for each column.
          </para>
        </formalpara>
        
        <formalpara>
          <title>Matlab</title>
          <para>
            The data is exported as a Matlab script file. It can be loaded into Matlab/Octave
            with the source() function. 
          </para>
        </formalpara>
        
        <note><para>Histograms can not be exported yet.</para></note>
        
      </sect3>
      
      <sect3>
        <title>Chart sheets</title>
        
        <para>
          Sometimes it is useful to display several charts on one page. When you create
          a chart, it is automatically added to a default chart sheet. Chart sheets
          and the their charts are displayed on the lower pane of the Datasets page.
          To create a new chart sheet, use <guibutton>Chart Sheet</guibutton>
          button on the palette. You can add charts to it either by using the opening dialog or by
          dragging charts. To move charts between chart sheets use drag and drop or
          Cut/Paste. You can display the charts by double clicking on the chart sheet node.
        </para>
        
        <picture file="pictures/ANF-ChartSheetPage.png"/>
        
      </sect3>
      
    </sect2>
    
    <sect2 id="charts" xreflabel="Charts">
      <title>Charts</title>
      
      <sect3>
        <title>Overview</title>
        <para>
          You typically want to display the recorded data on charts. In OMNeT++ 4.0
          you can open charts for scalar, vector or histogram data with one click.
          Charts can be saved into the analysis file too. The Analysis Editor supports
          bar charts, line charts, histogram charts and scatter charts. Charts are
          interactive, they can be zoomed, scrolled, and a tooltip gives information about
          the data items.
        </para>
        <para>
          Charts can be customized. There are options, among others, for titles, fonts, 
          legend, grid lines, colors, line styles, symbols. 
        </para>
      </sect3>
      
      <sect3>
        <title>Creating charts</title>
        <para>
          To create a chart, use the palette on the Dataset page. Drag the chart button 
          and drop it to the dataset at the position you want it to appear. If you press
          the chart button then it opens a dialog where you can edit the properties of
          the new chart. In this case the new chart will be added at the end of the selected
          dataset or after the selected dataset item. 
        </para>
        <para>
          Temporary charts can be created on the Browse Data page for quick view.
          Select the scalars, vectors or histograms and choose <guimenuitem>Plot</guimenuitem>
          from the context menu.
           If you want to save such a temporary chart in the analysis, then choose
          <guimenuitem>Convert to dataset...</guimenuitem> from the context menu of the chart or
          <icon name="template.gif"/> from the toolbar.
        </para>
      </sect3>
      
      <sect3>
        <title>Editing charts</title>
        <para>
          You can open a dialog for editing charts from the context menu. The dialog is
          divided into several pages. The pages can be opened directly from the context menu.
          When you select a line and choose <guimenuitem>Lines...</guimenuitem> from the menu,
          you can edit the properties of the selected line.
        </para>
        <para>
          You can also use the Properties view to edit the chart. It is recommended to 
          display the properties grouped by their category.
          (<icon name="Eclipse_ShowCategories.png"/> on the toolbar of the Properties View)
        </para>
        <para>
          TODO: list of common properties
        </para>
      <!--
          <xi:include href="chart-properties.xml#xpointer(//section[@id='ChartProperties'])"/>
      -->  
      </sect3>
      
      <sect3>
        <title>Zooming and panning</title>
        <para>
          Charts have two mouse modes. In Pan mode you can scroll with the mouse wheel, and
          drag the chart. In Zoom mode the chart can be zoomed in by left clicking and
          zoomed out by <keycap>Shift+</keycap> left click, or with the mouse wheel.
          Dragging selects a rectangular area to zoom in. The toolbar icons
          <icon name="hand.gif"/> and <icon name="zoom.png"/> switch between Pan and Zoom mode.
          You can also find toolbar buttons to zoom in <icon name="zoomplus.png"/>,
          zoom out (<icon name="zoomminus.png"/>) and zoom to fit (<icon name="zoomtofit.png"/>).
          Zooming and moving actions are remembered in the navigation history.
        </para>
      </sect3>
      
      <sect3>
        <title>Tooltip</title>
        <para>
          When the mouse is hovered over a data point the appearing tooltip shows line labels
          and the values of the points near to the cursor. The names of all lines can be
          displayed by hovering over the <icon name="legend.gif"/> button.
        </para>
      </sect3>
      
      <sect3>
        <title>Copy to clipboard</title>
        <para>
          You can copy the chart to the clipboard by selecting
          <guimenuitem>Copy to Clipboard</guimenuitem> from the context menu.
          The chart is copied as a bitmap image having the same size as on the screen.
        </para>
      </sect3>
      
      <sect3>
        <title>Bar charts</title>
        <para>
          Bar charts display scalars as groups of vertical bars. The bars can be positioned
          within a group next to, above or in front of each other. The baseline of the
          bars can be changed. Optionally a logarithmic transformation can be applied 
          to the values.
        </para>
        <picture file="pictures/ANF-ScalarChart.png"/>
        <para>
          The scalar chart's content can be specified on the Content tab of their
          Properties dialog. Attributes in the "Groups" list box determines the groups so that
          within a group each attribute has the same value. Attributes in the "Bars"
          list box determines the bars, the bar height is the average of scalars
          that have the same values of "Bar" attributes. You can classify the attributes
          by dragging them from the upper list box to the lower list boxes.
          Most frequently you want to group the scalars by modules, and label the bars
          with the scalar name. This is the default setting, if you leave each attribute in the
          upper list box.  
        </para>
        <picture file="pictures/ANF-ScalarChartEditDialog.png"/>
      </sect3>
      
      <sect3>
        <title>Line charts</title>
        <para>
          Line charts can be used to display output vectors. Each vector in the dataset
          gives a line on the chart. You can specify the symbols drawn at the data points
          (cross, diamond, dot, plus, square triangle or none), how the points are connected
          (linear, step-wise, pins or none) and the color of the lines. Individual lines
          can be hidden.
        </para>
        <picture file="pictures/ANF-VectorChart.png"/>
        <para>
          Line names identify lines on the legend, property sheets and edit dialogs.
          They are formed automatically from attributes of the vector (like file, run,
          module, vector name, etc.). If you want to name the lines otherwise, you can
          enter a name pattern in the <guilabel>Line names</guilabel> field of the
          Properties dialog (Main tab). You can use "{file}", "{run}", "{module}", "{name}",
          to refer to an attribute value, press <keycap>Ctrl+Space</keycap> for the complete
          list.
        </para>
        <para>
          Processing operations can be applied to the dataset of the chart by selecting
          <guimenuitem>Apply</guimenuitem> or <guimenuitem>Compute</guimenuitem> from the 
          context menu. If you want to remove an existing operation, you can do it
          from the context menu too.
        </para>
        <para>
          Line charts are synchronized with Output Vector and Dataset views.
          Select a data point and see that in the Output Vector and Dataset View
          the data point and the vector are selected.
        </para>
      </sect3>
      
      <sect3>
        <title>Histogram charts</title>
        <para>Histogram charts can display data of histograms. They support three view modes:
          <variablelist>
            <varlistentry><term>Count</term>
              <listitem><para>The chart shows the recorded counts of data points in each cell.</para></listitem>
            </varlistentry>
            <varlistentry><term>Probability density</term>
              <listitem><para>
                The chart shows the probability density function computed from the histogram data.
              </para></listitem>
            </varlistentry>
            <varlistentry><term>Cumulative density</term>
              <listitem><para>
                The chart shows the cumulative density function computed from the histogram data.
              </para></listitem>
            </varlistentry>
          </variablelist>
        </para>
        <picture file="pictures/ANF-HistogramChart.png"/>
        <tip>
          <para>
            When drawing several histograms on one chart, set the "Bar type" property to
            Outline. This way the histograms will not cover each other.
          </para>
        </tip>
      </sect3>
      
      <sect3>
        <title>Scatter charts</title>
        <para>
          Scatter charts can be created from both scalar and vector data. You have to
          select one statistic for the x coordinates, other data items give the y coordinates.
          How the x and y values are paired differs for scalars and vectors.
        </para>
        <formalpara><title>Scalars</title>
          <para>
            For each value of the x scalar, the y values are selected from scalars in the same run.
          </para>
        </formalpara>
        <formalpara><title>Vectors</title>
          <para>
            For each value of the x vector, the y values are selected from the same run
            and with the same simulation time.
          </para>
        </formalpara>
        <para>
          By default, each data point that comes from the same y scalar
          belongs to the same line. This is not always what you want, because these values
          may have been generated in runs having different parameter settings and are not homogenous.
          You can specify scalars to determine the "iso" lines of the scatter chart.
          Only those points are connected by lines that have the same values of these "iso" attributes.
        </para>
        <tip>
          <para>
            If you want to use a module parameter as an iso attribute, you can record it as a
            scalar by setting "&lt;module&gt;.&lt;parameter_name&gt;.param-record-as-scalar=true"
            in the ini file.
          </para>
        </tip>
      </sect3>
    </sect2>
  
  </sect1>

  <sect1>
    <title>Associated Views</title>
    
    <sect2>
      <title>Outline View</title>
      <para>
        The Outline View shows an overview of the current analysis. Clicking on an
        element will select the corresponding element in the current editor. Tree editing
        operations also work in this view.
      </para>
      <picture file="pictures/ANF-OutlineView.png">Outline View of the analysis</picture>
    </sect2>
    
    <sect2>
      <title>Properties View</title>
      <para>
        The properties view displays the properties of the selected dataset, processing node
        and chart. Font and color properties can be edited as text or by opening dialogs.
        Text fields that have a bulb on the left side have a context assist; press
        <keycap>Ctrl+Space</keycap> to activate it.   
      </para>
      <picture file="pictures/ANF-PropertiesView.png">Properties View showing chart properties</picture>
    </sect2>
    
    <sect2>
      <title>Output Vector View</title>
      <para>
        The Output Vector View shows the content of the selected vector. It displays the
        serial number, simulation time and value of the data points. When event numbers
        are recorded during the simulation, they are also displayed. Large output files
        are handled efficiently, only the visible part of the vector is read from the
        disk. Vectors that are the result of some computation are saved into temporary
        files.
      </para>
      <picture file="pictures/ANF-OutputVectorView.png"/>
      <para>
        To navigate to a specific line use the scroll bar or the menu of the view:
        <picture file="pictures/ANF-OutputVectorViewMenu.png"/>
      </para>
    </sect2>

    <sect2>
      <title>Dataset View</title>
      <para>
        The Dataset View displays the dataset's content at the selected dataset item. It is
        divided into three tables similar to the ones on the Browse Data page. The tables can be
        selected by the
        <icon name="ShowScalars.gif"/><icon name="ShowVectors.gif"/><icon name="ShowHistograms.gif"/>
         icons. There is also a tool button (<icon name="filter.png"/>) to show or hide the filter.
      </para>
      <picture file="pictures/ANF-DatasetView.png">Dataset View</picture>
    </sect2>
    
  </sect1>
  
</chapter>
