<?xml version="1.0"?>
<!DOCTYPE chapter SYSTEM "custom-docbook.dtd">

<chapter id="ini-editor">
  <title>Editing INI Files</title>

  <sect1>
    <title>Overview</title>
    <para>
      In &Omnetpp;, simulation models are parameterized and configured for execution using
      configuration files with the [[.ini]] extension, called INI files. Ini files are text
      files, which can be edited using any text editor. However, &Omnetpp; 4.x introduces a
      tool expressly designed for editing INI files. The INI File Editor is part of the
      &Omnetpp; IDE and is very effective in assisting the user to author INI files. It is a very useful feature
      because it has detailed knowledge of the simulation model, the INI file syntax, and
      the available configuration options.
    </para>
    <note>
      <para>
      The syntax and features of INI files have changed since &Omnetpp; 3.x.
      These changes are summarized in the "Configuring Simulations" chapter of the
       "&Omnetpp; 4.x. User Manual".
      </para>
    </note>
    <para>
      The INI File Editor is a dual-mode editor. The configuration can be edited using
      forms and dialogs, or as plain text. Forms are organized around topics like general
      setup, Cmdenv, Tkenv, output files, extensions and so on. The text editor provides
      syntax highlighting and auto completion. Several views can display information, which is
      useful when editing INI files. For example you can see the errors in the current
      INI file or all the available module parameters in one view. You can easily
      navigate from the module parameters to their declaration in the NED file.
      <!-- analysis, error marking -->
    </para>
  </sect1>

  <sect1>
    <title>Creating INI Files</title>
    <para>To create a new INI file, choose
        ``File | New | Initialization File''
       from the menu. It opens a wizard where you can enter the
      name of the new file and select the name of the network to be configured.
    </para>
    <picture file="pictures/INI-NewWizard.png">New Initialization File dialog</picture>
  </sect1>

  <sect1>
    <title>Using the INI File Editor</title>
    <para>
      The INI File Editor has two modes. The <emphasis>Source</emphasis> mode provides a text editor
      with syntax highlighting and auto completion of names. In the <emphasis>Form</emphasis> mode, you can
      edit the configuration by entering the values in a form. You can switch between the modes
      by selecting the tabs at the bottom of the editor.
    </para>
    <sect2>
      <title>Editing in Form Mode</title>
      <para><!-- TODO move this para to overview? -->
        The INI file contains the configuration of simulation runs. The content of the INI file
        is divided into sections. In the simplest case, all parameters are set in the General
        section. If you want to create several configurations in the same INI file, you can
        create named Configuration (Config) sections and refer to them with the <option>-c</option> option when
        starting the simulation.
        <!-- TODO: iteration vars? -->
        The Config sections inherit the settings from the General section or from other
        Config sections. This way you can factor out the common settings into a "base" configuration.
      </para>
      <para>
        On the first page of the form editor, you can edit the sections. The sections are displayed
        as a tree; the nodes inherit settings from their parents. The icon before the section name
        shows how many runs are configured in that section (see <xref linkend="section-icons-legend"/>).
        You can use drag and drop to reorganize the sections. You can delete, edit, or add a new child
        to the selected section.
      </para>
      <!-- TODO modify inheritance too, use example -->
      <picture file="pictures/INI-FormEditor.png">Editing INI file sections</picture>
      <table id="section-icons-legend">
        <title>Legend of Icons Before Sections</title>
        <tgroup cols="2">
          <colspec colwidth='0.25in'/>
          <colspec colwidth='2*'/>
          <tbody>
            <row><entry><icon name="section_single.gif"/></entry><entry>contains a single run</entry></row>
            <row><entry><icon name="section_repeat.gif"/></entry><entry>contains multiple replications (specified by 'repeat=...')</entry></row>
            <row><entry><icon name="section_iter.gif"/></entry><entry>contains iteration variables</entry></row>
            <row><entry><icon name="section_iterrep.gif"/></entry><entry>contains multiple replications for each iteration</entry></row>
          </tbody>
        </tgroup>
      </table>
      <para>
        The Config sections have a name and an optional description. You can specify a fallback
        section other than General. If the network name is not inherited, it can be specified, as well.
      </para>
      <picture file="pictures/INI-NewSection.png">Creating a new INI file section</picture>
      <para>
        On the ``Parameters'' page of the form editor, you can set module parameters. First, you have to
        select the section where the parameters are stored. After selecting the section from the list,
        the form shows the name of the edited network and the fallback section.
        The table below the list box shows current settings of the section and all other sections
        from which it has inherited settings. You can move parameters by dragging them. If you click a table cell, you can
        edit the parameter name (or pattern), its value and the comment attached to it.
        <keycombo><keycap>Ctrl</keycap><keycap>Space</keycap></keycombo> brings up a content assist.
        If you hover over a table row, the parameter is described in the tooltip that appears.
      </para>
      <picture file="pictures/INI-FormEditor3.png">Editing module parameters</picture>
      <para>
        New parameters can be added one by one by pressing the ``New'' button and
        filling the new table row. The selected parameters can be removed with the
        ``Remove'' button.
        If you press the ``Add...'' button, you
        can add any missing parameters. <!-- TODO errol tobbet -->
      </para>
      <picture file="pictures/INI-AddParams.png">Add missing module parameters dialog</picture>
      <para>
        The rest of the settings do not belong to modules (e.g. configuration of
        random number generators, output vectors, simulation time limit). These settings
        can be edited from the forms listed under the Configuration node. If the field
        has a default value and it is not set, the default value is displayed in gray.
        If its value is set, you can reset the default value by pressing the ``Reset''
        button. These fields are usually set in the General section. If you want to specify <!-- TODO tobbet -->
        them in a Config section, press the <icon name="expand.png"/> button and add a section-specific
        value to the opening table. If the table contains the Generic section only, then it can
        be collapsed again by pressing the <icon name="collapse.png"/> button. Some fields can be
        specified in the General section only, so they do not have a <icon name="expand.png"/> button
        next to them.
      </para>
      <picture file="pictures/INI-FormEditor2.png">Editing general configuration</picture>
    </sect2>
    <sect2>
      <title>Editing in Text Mode</title>
      <para>
        If you want to edit the INI file as plain text, switch to the Source mode.
        The editor provides several features in addition to the usual text editor functions
        like copy/paste, undo/redo and text search.
      </para>
      <picture file="pictures/INI-TextEditor.png">Editing the INI file in text mode</picture>
      <sect3>
        <title>Opening Old INI Files</title>
        <para>
          When you open an INI file with the old format, the editor offers to convert
          it to the new format. It creates Config sections from Run sections
          and renames old parameters.
        </para>
      </sect3>
      <sect3>
        <title>Content Assist</title>
        <para>
          If you press <keycombo><keycap>Ctrl</keycap><keycap>Space</keycap></keycombo>,
          you will get a list of proposals valid at the insertion point. The list may
          contain section names, general options, and parameter names and values
          of the modules of the configured network.
        </para>
        <picture file="pictures/INI-TextEditor2.png">Content assist in source mode</picture>
      </sect3>
      <sect3>
        <title>Tooltip</title>
        <para>
        If you hover over a section or parameter, a tooltip appears showing the properties
        of the section or parameter. The tooltip for sections displays the inheritance chain, the network name,
        number of errors and warnings and the yet unassigned parameters.
        For parameters, the definition, description and the module name are displayed.
        </para>
      </sect3>
      <sect3>
        <title>Add Unassigned Parameters</title>
        <para>
          You can add the names of unassigned module parameters to a Config section by choosing
          ``Add Missing keys...'' from the context menu or pressing <keycap>Ctrl+Shift+O</keycap>.
        </para>
      </sect3>
      <sect3>
        <title>Commenting</title>
        <para>
          To comment out the selected lines, press <keycap>Ctrl+/</keycap>.
          To remove the comment, press <keycap>Ctrl+/</keycap> again.
        </para>
      </sect3>
      <sect3>
        <title>Navigation</title>
        <para>
          If you press the <keycap>Ctrl</keycap> key and click on a module parameter name,
          then the declaration of the parameter will be shown in the NED editor. You can
          navigate from a network name to its definition, too.
        </para>
      </sect3>
      <sect3>
        <title>Error Markers</title>
        <para>
          Errors are marked on the left/right side of the editor. You can move to the
          next/previous error by pressing <keycombo><keycap>Ctrl</keycap><keycap>.</keycap></keycombo>
          and <keycombo><keycap>Ctrl</keycap><keycap>,</keycap></keycombo> respectively.
          You can get the error message in a tooltip if you hover over the <icon name="Error.png"/> marker.
        </para>
      </sect3>
    </sect2>
  </sect1>

  <!-- TODO examples? -->

  <sect1>
    <title>Associated Views</title>
    <para>
      There are several views related to the INI editor. These views can be displayed (if
      not already open) by choosing the view from the
      ``Window | Show View''
      submenu.
          <note>If you are working with very large NED or INI files, you may improve the performance of the editor
              by closing all views related to INI files (Parameters, Module Hierarchy and NED
              Inheritance View).
          </note>
    </para>
    <sect2>
      <title>Outline View</title>
      <para>
        The ``Outline View'' allows an overview of the sections in the current INI file. Clicking on a
        section will highlight the corresponding element in the text or form view.
      </para>
      <picture file="pictures/INI-OutlineView.png">Outline View showing the content of an INI file</picture>
    </sect2>
    <sect2>
      <title>Problems View</title>
      <para>
        The ``Problems View'' contains error and warning messages generated by the parser.
        Double-clicking on a row will open the problematic file and move to the location
        of the problem.
      </para>
    </sect2>
    <sect2>
      <title>Parameters View</title>
      <para>
        The ``Parameters View'' shows parameters of the selected section including inherited
        parameters. It also displays the parameters that are unassigned in the configuration.
        When the <icon name="filter.png"/> toggle button on the toolbar is on, then
        all parameters are displayed; otherwise, only the unassigned ones are visible.
      </para>
      <para>
        If you want to fix the content of the view, press the <icon name="unpin.gif"/> button.
        After pinning, the content of this view will not follow the selection made by the user
        in other editors or views.
      </para>
      <picture file="pictures/INI-ParametersView.png">Parameters View</picture>
      <table>
        <title>Legend of icons before module parameters</title>
        <tgroup cols="2">
          <colspec colwidth='0.25in'/>
          <colspec colwidth='2*'/>
          <tbody>
            <row><entry><icon name="par_ned.png"/></entry><entry>value is set in the NED file</entry></row>
            <row><entry><icon name="par_neddefault.png"/></entry><entry>default from the NED file is explicitly set in the INI file ([[**.paramname=default]])</entry></row>
            <row><entry><icon name="par_implicitdefault.png"/></entry><entry>default from the NED file is automatically applied, because no value is specified in the INI file</entry></row>
            <row><entry><icon name="par_ini.png"/></entry><entry>value is set in the INI file (may override the value from the NED file)</entry></row>
            <row><entry><icon name="par_inineddefault.png"/></entry><entry>value is set in the INI file to the same value as the NED default</entry></row>
            <row><entry><icon name="par_iniask.png"/></entry><entry>will ask the user at runtime ([[**.paramname=ask]])</entry></row>
            <row><entry><icon name="par_unassigned.png"/></entry><entry>unassigned -- has no values specified in the NED or INI files</entry></row>
          </tbody>
        </tgroup>
      </table>
      <tip>Right-clicking on any line will show a context menu that allows you to navigate
      to the definition of that parameter or module.</tip>
    </sect2>
    <sect2>
      <title>Module Hierarchy View</title>
      <para>
        The ``Module Hierarchy View'' shows the contained submodules, several levels deep.
        It also display the module parameters, and where its value comes from (INI file,
        NED file or unassigned).
      </para>
      <picture file="pictures/INI-ModuleHierarchyView.png">Module Hierarchy View</picture>
      <tip>Before you use the context menu to navigate to the [[NED]] definition, pin down the
      hierarchy view. This way you will not lose the current context and
      content if the view will not follow the selection.</tip>

      <!-- TODO screenshot, context mem pinning -->
    </sect2>
    <sect2>
      <title>NED Inheritance View</title>
      <para>
        The ``NED Inheritance View'' shows the inheritance tree of the network configured in the
        selected section.
      </para>
    </sect2>
  </sect1>
</chapter>
