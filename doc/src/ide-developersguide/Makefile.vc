FOP=$(TOOLS_DIR)\fop\fop.bat
XSLTPROC=$(TOOLS_DIR)\libxslt\bin\xsltproc
DOCBOOK=$(TOOLS_DIR)\docbook
PDFTK=$(TOOLS_DIR)\pdftk\pdftk

CWD=C:\home\omnetpp40\omnetpp\doc\src\ide-developersguide  # because Inkscape is broken and needs full paths; and nmake is also broken as there's no way to produce the current dir programmatically

TITLE=IDE Developers Guide

!if "$(what)" != "omnest"
WHAT_REPL = OMNeT&^#x2060;+&^#x2060;+
what_repl = omnetpp
DOWNLOADSITE = http://omnetpp.org
!else
WHAT_REPL = OMNEST
what_repl = omnest
DOWNLOADSITE = http://omnest.com
DEFINE_OMNEST = -a OMNEST=1
!endif

!if "$(VERSION)" != ""
VERSION_REPL = $(VERSION)
!else
VERSION_REPL = 4.X
!endif

all: pdf html

include ../cover/cover.makefrag.vc

docbook:
	asciidoc -b docbook -d book -f asciidoc.conf $(DEFINE_OMNEST) ide-developersguide.txt
	perl -i~ -pe "s/\@OMNETPP\@/$(WHAT_REPL)/g" ide-developersguide.xml
	perl -i~ -pe "s/\@omnetpp\@/$(what_repl)/g" ide-developersguide.xml
	perl -i~ -pe "s/\@version\@/$(VERSION_REPL)/g" ide-developersguide.xml
	perl -i~ -pe "s,\@DOWNLOADSITE\@,$(DOWNLOADSITE),g" ide-developersguide.xml

html: catalog docbook
	$(XSLTPROC) --nonet --xinclude --output tmp1.xml trans.xsl ide-developersguide.xml
	perl trans.pl <tmp1.xml >tmp.xml
	$(XSLTPROC) --nonet --output ide-developersguide.html  $(DOCBOOK)/html/docbook.xsl tmp.xml
	del tmp.xml

eclipse: catalog docbook
	$(XSLTPROC) --nonet --xinclude --output tmp1.xml trans.xsl ide-developersguide.xml
	perl trans.pl <tmp1.xml >tmp.xml
	-del /s /q eclipse 2>nul
	-mkdir eclipse
	cd eclipse && $(XSLTPROC) --nonet $(DOCBOOK)/eclipse/eclipse.xsl ../tmp.xml
	del tmp.xml

pdf: catalog docbook cover
	$(XSLTPROC) --nonet --xinclude --stringparam output pdf --output tmp1.xml trans.xsl ide-developersguide.xml
	perl trans.pl <tmp1.xml >tmp.xml
	perl -pe "s!\@DOCBOOK_STYLESHEET\@!file:///$(TOOLS_DIR:\=/)/docbook/fo/docbook.xsl!g" custom-fo-docbook.xsl >custom-fo-docbook-tmp.xsl
	$(XSLTPROC) --nonet --output tmp.fo custom-fo-docbook-tmp.xsl tmp.xml
	call $(FOP) -fo tmp.fo -c ..\fop.xconf -pdf tmp.pdf
	$(PDFTK) C=cover.pdf B=../cover/copyright.pdf D=tmp.pdf cat C B D4-end output ide-developersguide.pdf dont_ask
	del custom-fo-docbook-tmp.xsl tmp.fo tmp.xml tmp.pdf

clean:
	-del ide-developersguide.pdf ide-developersguide.html cover.svg cover.pdf 2>nul
	-del /s /q eclipse 2>nul
	-rmdir eclipse 2>nul
	-del /s /q ..\..\ide-developersguide 2>nul
	-rmdir ..\..\ide-developersguide 2>nul

catalog:
	set XML_CATALOG_FILES=../docbook-dtd/catalog.xml


